1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
4:I[17350,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
5:I[11054,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
6:I[53675,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
7:I[45678,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
10:I[68027,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"WH7PNXBrq4DSAiSsd64_e","p":"","c":["","docs","API-Reference"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","API-Reference","c"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/f6023188028df157.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/ff5f09f4edae29eb.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/68e80996639386d6.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/2b68d4d02ede6bf7.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/f7ca7d40a7605a95.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["docs","$Lc",{"children":[["slug","API-Reference","c"],"$Ld",{"children":["__PAGE__","$Le",{},null,false]},null,false]},null,false]},null,false],"$Lf",false]],"m":"$undefined","G":["$10",["$L11"]],"s":false,"S":true}
12:I[13642,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js"],"default"]
14:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
16:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
18:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1a:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1b:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L12",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":["$L13",[["$","script","script-0",{"src":"/_next/static/chunks/b544468eebbd739a.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/b3354f279df46dba.js","async":true,"nonce":"$undefined"}]],["$","$L14",null,{"children":["$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}]
f:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1d:I[99748,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
13:["$","$L1d",null,{"navigation":{"API-Reference":{"title":"API Reference","slug":"API-Reference","layout":"docs"},"Cloud":{"DBPermissionSet":{"title":"DBPermissionSet","slug":"Cloud/DBPermissionSet","layout":"docs-dexie-cloud"},"DexieCloudOptions":{"title":"DexieCloudOptions","slug":"Cloud/DexieCloudOptions","layout":"docs-dexie-cloud"},"Invite":{"title":"Invite","slug":"Cloud/Invite","layout":"docs-dexie-cloud"},"Member":{"title":"Member","slug":"Cloud/Member","layout":"docs-dexie-cloud"},"PersistedSyncState":{"title":"PersistedSyncState","slug":"Cloud/PersistedSyncState","layout":"docs-dexie-cloud"},"Realm":{"title":"Realm","slug":"Cloud/Realm","layout":"docs-dexie-cloud"},"Role":{"title":"Role","slug":"Cloud/Role","layout":"docs-dexie-cloud"},"SyncState":{"title":"SyncState","slug":"Cloud/SyncState","layout":"docs-dexie-cloud"},"UserLogin":{"title":"UserLogin","slug":"Cloud/UserLogin","layout":"docs-dexie-cloud"},"access-control":{"title":"Access Control in Dexie Cloud","slug":"Cloud/access-control","layout":"docs-dexie-cloud"},"add-demo-users":{"title":"Add demo users","slug":"Cloud/add-demo-users","layout":"docs-dexie-cloud"},"add-public-data":{"title":"Add public data","slug":"Cloud/add-public-data","layout":"docs-dexie-cloud"},"authentication":{"title":"Authentication in Dexie Cloud","slug":"Cloud/authentication","layout":"docs-dexie-cloud"},"best-practices":{"title":"Dexie Cloud Best Practices","slug":"Cloud/best-practices","layout":"docs-dexie-cloud"},"cli":{"title":"Dexie Cloud CLI","slug":"Cloud/cli","layout":"docs-dexie-cloud"},"consistency":{"title":"Consistency in Dexie Cloud","slug":"Cloud/consistency","layout":"docs-dexie-cloud"},"custom-emails":{"title":"Custom Emails in Dexie Cloud","slug":"Cloud/custom-emails","layout":"docs-dexie-cloud"},"db.cloud.configure()":{"title":"db.cloud.configure()","slug":"Cloud/db.cloud.configure()","layout":"docs-dexie-cloud"},"db.cloud.currentUser":{"title":"db.cloud.currentUser","slug":"Cloud/db.cloud.currentUser","layout":"docs-dexie-cloud"},"db.cloud.currentUserId":{"title":"db.cloud.currentUserId","slug":"Cloud/db.cloud.currentUserId","layout":"docs-dexie-cloud"},"db.cloud.events.syncComplete":{"title":"db.cloud.events.syncComplete","slug":"Cloud/db.cloud.events.syncComplete","layout":"docs-dexie-cloud"},"db.cloud.invites":{"title":"db.cloud.invites","slug":"Cloud/db.cloud.invites","layout":"docs-dexie-cloud"},"db.cloud.login()":{"title":"db.cloud.login()","slug":"Cloud/db.cloud.login()","layout":"docs-dexie-cloud"},"db.cloud.logout()":{"title":"db.cloud.logout()","slug":"Cloud/db.cloud.logout()","layout":"docs-dexie-cloud"},"db.cloud.options":{"title":"db.cloud.options","slug":"Cloud/db.cloud.options","layout":"docs-dexie-cloud"},"db.cloud.permissions()":{"title":"db.cloud.permissions()","slug":"Cloud/db.cloud.permissions()","layout":"docs-dexie-cloud"},"db.cloud.persistedSyncState":{"title":"db.cloud.persistedSyncState","slug":"Cloud/db.cloud.persistedSyncState","layout":"docs-dexie-cloud"},"db.cloud.roles":{"title":"db.cloud.roles","slug":"Cloud/db.cloud.roles","layout":"docs-dexie-cloud"},"db.cloud.schema":{"title":"db.cloud.schema","slug":"Cloud/db.cloud.schema","layout":"docs-dexie-cloud"},"db.cloud.sync()":{"title":"db.cloud.sync()","slug":"Cloud/db.cloud.sync()","layout":"docs-dexie-cloud"},"db.cloud.syncState":{"title":"db.cloud.syncState","slug":"Cloud/db.cloud.syncState","layout":"docs-dexie-cloud"},"db.cloud.userInteraction":{"title":"db.cloud.userInteraction","slug":"Cloud/db.cloud.userInteraction","layout":"docs-dexie-cloud"},"db.cloud.usingServiceWorker":{"title":"db.cloud.usingServiceWorker","slug":"Cloud/db.cloud.usingServiceWorker","layout":"docs-dexie-cloud"},"db.cloud.version":{"title":"db.cloud.version","slug":"Cloud/db.cloud.version","layout":"docs-dexie-cloud"},"db.cloud.webSocketStatus":{"title":"db.cloud.webSocketStatus","slug":"Cloud/db.cloud.webSocketStatus","layout":"docs-dexie-cloud"},"db.members":{"title":"db.members","slug":"Cloud/db.members","layout":"docs-dexie-cloud"},"db.realms":{"title":"db.realms","slug":"Cloud/db.realms","layout":"docs-dexie-cloud"},"db.roles":{"title":"db.roles","slug":"Cloud/db.roles","layout":"docs-dexie-cloud"},"dexie-cloud-addon":{"title":"dexie-cloud-addon","slug":"Cloud/dexie-cloud-addon","layout":"docs-dexie-cloud"},"dexie-cloud-api":{"title":"Dexie Cloud API","slug":"Cloud/dexie-cloud-api","layout":"docs-dexie-cloud"},"index":{"title":"Dexie Cloud Docs","slug":"Cloud/index","layout":"docs-dexie-cloud"},"limits":{"title":"Dexie Cloud API Limits","slug":"Cloud/limits","layout":"docs-dexie-cloud"},"premium-software":{"title":"Run Dexie Cloud on Own Servers","slug":"Cloud/premium-software","layout":"docs-dexie-cloud"},"quickstart":{"title":"Dexie Cloud Quickstart","slug":"Cloud/quickstart","layout":"docs-dexie-cloud"},"rest-api":{"title":"Dexie Cloud REST API","slug":"Cloud/rest-api","layout":"docs-dexie-cloud"},"scaling":{"title":"Sharding and Scalability","slug":"Cloud/scaling","layout":"docs-dexie-cloud"},"web-hooks":{"title":"Dexie Cloud Web Hooks","slug":"Cloud/web-hooks","layout":"docs-dexie-cloud"}},"Collection":{"Collection.and()":{"title":"Collection.and()","slug":"Collection/Collection.and()","layout":"docs"},"Collection.clone()":{"title":"Collection.clone()","slug":"Collection/Collection.clone()","layout":"docs"},"Collection.count()":{"title":"Collection.count()","slug":"Collection/Collection.count()","layout":"docs"},"Collection.delete()":{"title":"Collection.delete()","slug":"Collection/Collection.delete()","layout":"docs"},"Collection.desc()":{"title":"Collection.desc()","slug":"Collection/Collection.desc()","layout":"docs"},"Collection.distinct()":{"title":"Collection.distinct()","slug":"Collection/Collection.distinct()","layout":"docs"},"Collection.each()":{"title":"Collection.each()","slug":"Collection/Collection.each()","layout":"docs"},"Collection.eachKey()":{"title":"Collection.eachKey()","slug":"Collection/Collection.eachKey()","layout":"docs"},"Collection.eachPrimaryKey()":{"title":"Collection.eachPrimaryKey()","slug":"Collection/Collection.eachPrimaryKey()","layout":"docs"},"Collection.eachUniqueKey()":{"title":"Collection.eachUniqueKey()","slug":"Collection/Collection.eachUniqueKey()","layout":"docs"},"Collection.filter()":{"title":"Collection.filter()","slug":"Collection/Collection.filter()","layout":"docs"},"Collection.first()":{"title":"Collection.first()","slug":"Collection/Collection.first()","layout":"docs"},"Collection.keys()":{"title":"Collection.keys()","slug":"Collection/Collection.keys()","layout":"docs"},"Collection.last()":{"title":"Collection.last()","slug":"Collection/Collection.last()","layout":"docs"},"Collection.limit()":{"title":"Collection.limit()","slug":"Collection/Collection.limit()","layout":"docs"},"Collection":{"title":"Collection","slug":"Collection/Collection","layout":"docs"},"Collection.modify()":{"title":"Collection.modify()","slug":"Collection/Collection.modify()","layout":"docs"},"Collection.offset()":{"title":"Collection.offset()","slug":"Collection/Collection.offset()","layout":"docs"},"Collection.or()":{"title":"Collection.or()","slug":"Collection/Collection.or()","layout":"docs"},"Collection.primaryKeys()":{"title":"Collection.primaryKeys()","slug":"Collection/Collection.primaryKeys()","layout":"docs"},"Collection.raw()":{"title":"Collection.raw()","slug":"Collection/Collection.raw()","layout":"docs"},"Collection.reverse()":{"title":"Collection.reverse()","slug":"Collection/Collection.reverse()","layout":"docs"},"Collection.sortBy()":{"title":"Collection.sortBy()","slug":"Collection/Collection.sortBy()","layout":"docs"},"Collection.toArray()":{"title":"Collection.toArray()","slug":"Collection/Collection.toArray()","layout":"docs"},"Collection.uniqueKeys()":{"title":"Collection.uniqueKeys()","slug":"Collection/Collection.uniqueKeys()","layout":"docs"},"Collection.until()":{"title":"Collection.until()","slug":"Collection/Collection.until()","layout":"docs"}},"Compound-Index":{"title":"Compound Index","slug":"Compound-Index","layout":"docs"},"DBCore":{"DBCore":{"title":"DBCore","slug":"DBCore/DBCore","layout":"docs"},"DBCoreAddRequest":{"title":"DBCoreAddRequest","slug":"DBCore/DBCoreAddRequest","layout":"docs"},"DBCoreCountRequest":{"title":"DBCoreCountRequest","slug":"DBCore/DBCoreCountRequest","layout":"docs"},"DBCoreCursor":{"title":"DBCoreCursor","slug":"DBCore/DBCoreCursor","layout":"docs"},"DBCoreDeleteRangeRequest":{"title":"DBCoreDeleteRangeRequest","slug":"DBCore/DBCoreDeleteRangeRequest","layout":"docs"},"DBCoreDeleteRequest":{"title":"DBCoreDeleteRequest","slug":"DBCore/DBCoreDeleteRequest","layout":"docs"},"DBCoreGetManyRequest":{"title":"DBCoreGetManyRequest","slug":"DBCore/DBCoreGetManyRequest","layout":"docs"},"DBCoreGetRequest":{"title":"DBCoreGetRequest","slug":"DBCore/DBCoreGetRequest","layout":"docs"},"DBCoreIndex":{"title":"DBCoreIndex","slug":"DBCore/DBCoreIndex","layout":"docs"},"DBCoreKeyRange":{"title":"DBCoreKeyRange","slug":"DBCore/DBCoreKeyRange","layout":"docs"},"DBCoreMutateRequest":{"title":"DBCoreMutateRequest","slug":"DBCore/DBCoreMutateRequest","layout":"docs"},"DBCoreMutateResponse":{"title":"DBCoreMutateResponse","slug":"DBCore/DBCoreMutateResponse","layout":"docs"},"DBCoreOpenCursorRequest":{"title":"DBCoreOpenCursorRequest","slug":"DBCore/DBCoreOpenCursorRequest","layout":"docs"},"DBCorePutRequest":{"title":"DBCorePutRequest","slug":"DBCore/DBCorePutRequest","layout":"docs"},"DBCoreQuery":{"title":"DBCoreQuery","slug":"DBCore/DBCoreQuery","layout":"docs"},"DBCoreQueryRequest":{"title":"DBCoreQueryRequest","slug":"DBCore/DBCoreQueryRequest","layout":"docs"},"DBCoreQueryResponse":{"title":"DBCoreQueryResponse","slug":"DBCore/DBCoreQueryResponse","layout":"docs"},"DBCoreRangeType":{"title":"DBCoreRangeType","slug":"DBCore/DBCoreRangeType","layout":"docs"},"DBCoreSchema":{"title":"DBCoreSchema","slug":"DBCore/DBCoreSchema","layout":"docs"},"DBCoreTable":{"title":"DBCoreTable","slug":"DBCore/DBCoreTable","layout":"docs"},"DBCoreTableSchema":{"title":"DBCoreTableSchema","slug":"DBCore/DBCoreTableSchema","layout":"docs"},"DBCoreTransaction":{"title":"DBCoreTransaction","slug":"DBCore/DBCoreTransaction","layout":"docs"},"DBCoreTransactionMode":{"title":"DBCoreTransactionMode","slug":"DBCore/DBCoreTransactionMode","layout":"docs"}},"Deprecations":{"title":"Deprecations","slug":"Deprecations","layout":"docs"},"DerivedWork":{"title":"Derived Work","slug":"DerivedWork","layout":"docs"},"Dexie":{"Dexie.[table]":{"title":"Dexie.[table]","slug":"Dexie/Dexie.[table]","layout":"docs"},"Dexie.addons":{"title":"Dexie.addons","slug":"Dexie/Dexie.addons","layout":"docs"},"Dexie.async()":{"title":"Dexie.async()","slug":"Dexie/Dexie.async()","layout":"docs"},"Dexie.backendDB()":{"title":"Dexie.backendDB()","slug":"Dexie/Dexie.backendDB()","layout":"docs"},"Dexie.close()":{"title":"Dexie.close()","slug":"Dexie/Dexie.close()","layout":"docs"},"Dexie.currentTransaction":{"title":"Dexie.currentTransaction","slug":"Dexie/Dexie.currentTransaction","layout":"docs"},"Dexie.debug":{"title":"Dexie.debug","slug":"Dexie/Dexie.debug","layout":"docs"},"Dexie.deepClone()":{"title":"Dexie.deepClone()","slug":"Dexie/Dexie.deepClone()","layout":"docs"},"Dexie.defineClass()":{"title":"Dexie.defineClass()","slug":"Dexie/Dexie.defineClass()","layout":"docs"},"Dexie.delByKeyPath()":{"title":"Dexie.delByKeyPath()","slug":"Dexie/Dexie.delByKeyPath()","layout":"docs"},"Dexie.delete()":{"title":"Dexie.delete()","slug":"Dexie/Dexie.delete()","layout":"docs"},"Dexie.derive()":{"title":"Dexie.derive()","slug":"Dexie/Dexie.derive()","layout":"docs"},"Dexie.events()":{"title":"Dexie.events()","slug":"Dexie/Dexie.events()","layout":"docs"},"Dexie.exists()":{"title":"Dexie.exists()","slug":"Dexie/Dexie.exists()","layout":"docs"},"Dexie.extend()":{"title":"Dexie.extend()","slug":"Dexie/Dexie.extend()","layout":"docs"},"Dexie.fakeAutoComplete()":{"title":"Dexie.fakeAutoComplete()","slug":"Dexie/Dexie.fakeAutoComplete()","layout":"docs"},"Dexie.getByKeyPath()":{"title":"Dexie.getByKeyPath()","slug":"Dexie/Dexie.getByKeyPath()","layout":"docs"},"Dexie.getDatabaseNames()":{"title":"Dexie.getDatabaseNames()","slug":"Dexie/Dexie.getDatabaseNames()","layout":"docs"},"Dexie.hasFailed()":{"title":"Dexie.hasFailed()","slug":"Dexie/Dexie.hasFailed()","layout":"docs"},"Dexie.ignoreTransaction()":{"title":"Dexie.ignoreTransaction()","slug":"Dexie/Dexie.ignoreTransaction()","layout":"docs"},"Dexie.isOpen()":{"title":"Dexie.isOpen()","slug":"Dexie/Dexie.isOpen()","layout":"docs"},"Dexie":{"title":"Dexie Constructor","slug":"Dexie/Dexie","layout":"docs"},"Dexie.name":{"title":"Dexie.name","slug":"Dexie/Dexie.name","layout":"docs"},"Dexie.on()":{"title":"Dexie.on()","slug":"Dexie/Dexie.on()","layout":"docs"},"Dexie.on.blocked":{"title":"Dexie.on.blocked","slug":"Dexie/Dexie.on.blocked","layout":"docs"},"Dexie.on.close":{"title":"Dexie.on.close","slug":"Dexie/Dexie.on.close","layout":"docs"},"Dexie.on.error":{"title":"Dexie.on.error","slug":"Dexie/Dexie.on.error","layout":"docs"},"Dexie.on.populate-(old-version)":{"title":"Dexie.on.populate-(old-version)","slug":"Dexie/Dexie.on.populate-(old-version)","layout":"docs"},"Dexie.on.populate":{"title":"Dexie.on.populate","slug":"Dexie/Dexie.on.populate","layout":"docs"},"Dexie.on.ready":{"title":"Dexie.on.ready","slug":"Dexie/Dexie.on.ready","layout":"docs"},"Dexie.on.storagemutated":{"title":"Dexie.on.storagemutated","slug":"Dexie/Dexie.on.storagemutated","layout":"docs"},"Dexie.on.versionchange":{"title":"Dexie.on.versionchange","slug":"Dexie/Dexie.on.versionchange","layout":"docs"},"Dexie.open()":{"title":"Dexie.open()","slug":"Dexie/Dexie.open()","layout":"docs"},"Dexie.override()":{"title":"Dexie.override()","slug":"Dexie/Dexie.override()","layout":"docs"},"Dexie.semVer":{"title":"Dexie.semVer","slug":"Dexie/Dexie.semVer","layout":"docs"},"Dexie.setByKeyPath()":{"title":"Dexie.setByKeyPath()","slug":"Dexie/Dexie.setByKeyPath()","layout":"docs"},"Dexie.shallowClone()":{"title":"Dexie.shallowClone()","slug":"Dexie/Dexie.shallowClone()","layout":"docs"},"Dexie.spawn()":{"title":"Dexie.spawn()","slug":"Dexie/Dexie.spawn()","layout":"docs"},"Dexie.table()":{"title":"Dexie.table()","slug":"Dexie/Dexie.table()","layout":"docs"},"Dexie.tables":{"title":"Dexie.tables","slug":"Dexie/Dexie.tables","layout":"docs"},"Dexie.transaction()-(old-version)":{"title":"Dexie.transaction()-(old-version)","slug":"Dexie/Dexie.transaction()-(old-version)","layout":"docs"},"Dexie.transaction()":{"title":"Dexie.transaction()","slug":"Dexie/Dexie.transaction()","layout":"docs"},"Dexie.use()":{"title":"Dexie.use()","slug":"Dexie/Dexie.use()","layout":"docs"},"Dexie.verno":{"title":"Dexie.verno","slug":"Dexie/Dexie.verno","layout":"docs"},"Dexie.version()":{"title":"Dexie.version()","slug":"Dexie/Dexie.version()","layout":"docs"},"Dexie.version":{"title":"Dexie.version","slug":"Dexie/Dexie.version","layout":"docs"},"Dexie.vip()":{"title":"Dexie.vip()","slug":"Dexie/Dexie.vip()","layout":"docs"},"Dexie.waitFor()":{"title":"Dexie.waitFor()","slug":"Dexie/Dexie.waitFor()","layout":"docs"}},"Dexie.js":{"title":"Dexie.js","slug":"Dexie.js","layout":"docs"},"DexieErrors":{"Dexie.AbortError":{"title":"Dexie.AbortError","slug":"DexieErrors/Dexie.AbortError","layout":"docs"},"Dexie.BulkError":{"title":"Dexie.BulkError","slug":"DexieErrors/Dexie.BulkError","layout":"docs"},"Dexie.ConstraintError":{"title":"Dexie.ConstraintError","slug":"DexieErrors/Dexie.ConstraintError","layout":"docs"},"Dexie.DataCloneError":{"title":"Dexie.DataCloneError","slug":"DexieErrors/Dexie.DataCloneError","layout":"docs"},"Dexie.DataError":{"title":"Dexie.DataError","slug":"DexieErrors/Dexie.DataError","layout":"docs"},"Dexie.DatabaseClosedError":{"title":"Dexie.DatabaseClosedError","slug":"DexieErrors/Dexie.DatabaseClosedError","layout":"docs"},"Dexie.IncompatiblePromiseError":{"title":"Dexie.IncompatiblePromiseError","slug":"DexieErrors/Dexie.IncompatiblePromiseError","layout":"docs"},"Dexie.InternalError":{"title":"Dexie.InternalError","slug":"DexieErrors/Dexie.InternalError","layout":"docs"},"Dexie.InvalidAccessError":{"title":"Dexie.InvalidAccessError","slug":"DexieErrors/Dexie.InvalidAccessError","layout":"docs"},"Dexie.InvalidArgumentError":{"title":"Dexie.InvalidArgumentError","slug":"DexieErrors/Dexie.InvalidArgumentError","layout":"docs"},"Dexie.InvalidStateError":{"title":"Dexie.InvalidStateError","slug":"DexieErrors/Dexie.InvalidStateError","layout":"docs"},"Dexie.InvalidTableError":{"title":"Dexie.InvalidTableError","slug":"DexieErrors/Dexie.InvalidTableError","layout":"docs"},"Dexie.MissingAPIError":{"title":"Dexie.MissingAPIError","slug":"DexieErrors/Dexie.MissingAPIError","layout":"docs"},"Dexie.ModifyError":{"title":"Dexie.ModifyError","slug":"DexieErrors/Dexie.ModifyError","layout":"docs"},"Dexie.NoSuchDatabaseError":{"title":"Dexie.NoSuchDatabaseErrorError","slug":"DexieErrors/Dexie.NoSuchDatabaseError","layout":"docs"},"Dexie.NotFoundError":{"title":"Dexie.NotFoundError","slug":"DexieErrors/Dexie.NotFoundError","layout":"docs"},"Dexie.OpenFailedError":{"title":"Dexie.OpenFailedError","slug":"DexieErrors/Dexie.OpenFailedError","layout":"docs"},"Dexie.PrematureCommitError":{"title":"Dexie.PrematureCommitError","slug":"DexieErrors/Dexie.PrematureCommitError","layout":"docs"},"Dexie.QuotaExceededError":{"title":"Dexie.QuotaExceededError","slug":"DexieErrors/Dexie.QuotaExceededError","layout":"docs"},"Dexie.ReadOnlyError":{"title":"Dexie.ReadOnlyError","slug":"DexieErrors/Dexie.ReadOnlyError","layout":"docs"},"Dexie.SchemaError":{"title":"Dexie.SchemaError","slug":"DexieErrors/Dexie.SchemaError","layout":"docs"},"Dexie.SubTransactionError":{"title":"Dexie.SubTransactionError","slug":"DexieErrors/Dexie.SubTransactionError","layout":"docs"},"Dexie.TimeoutError":{"title":"Dexie.TimeoutError","slug":"DexieErrors/Dexie.TimeoutError","layout":"docs"},"Dexie.TransactionInactiveError":{"title":"Dexie.TransactionInactiveError","slug":"DexieErrors/Dexie.TransactionInactiveError","layout":"docs"},"Dexie.UnknownError":{"title":"Dexie.UnknownError","slug":"DexieErrors/Dexie.UnknownError","layout":"docs"},"Dexie.UnsupportedError":{"title":"Dexie.UnsupportedError","slug":"DexieErrors/Dexie.UnsupportedError","layout":"docs"},"Dexie.UpgradeError":{"title":"Dexie.UpgradeError()","slug":"DexieErrors/Dexie.UpgradeError","layout":"docs"},"Dexie.VersionChangeError":{"title":"Dexie.VersionChangeError","slug":"DexieErrors/Dexie.VersionChangeError","layout":"docs"},"Dexie.VersionError":{"title":"Dexie.VersionError","slug":"DexieErrors/Dexie.VersionError","layout":"docs"},"DexieError":{"title":"DexieError","slug":"DexieErrors/DexieError","layout":"docs"}},"Download":{"title":"Download","slug":"Download","layout":"docs"},"EntityTable":{"title":"EntityTable","slug":"EntityTable","layout":"docs"},"ExportImport":{"dexie-export-import":{"title":"Export and Import Database","slug":"ExportImport/dexie-export-import","layout":"docs"}},"IndexSpec":{"title":"IndexSpec","slug":"IndexSpec","layout":"docs"},"Indexable-Type":{"title":"Indexable Type","slug":"Indexable-Type","layout":"docs"},"IndexedDB-on-Safari":{"title":"IndexedDB on Safari","slug":"IndexedDB-on-Safari","layout":"docs"},"MultiEntry-Index":{"title":"MultiEntry Index","slug":"MultiEntry-Index","layout":"docs"},"Observable":{"Dexie.Observable.DatabaseChange":{"title":"Dexie.Observable.DatabaseChange","slug":"Observable/Dexie.Observable.DatabaseChange","layout":"docs"},"Dexie.Observable":{"title":"Dexie.Observable","slug":"Observable/Dexie.Observable","layout":"docs"}},"Promise":{"Promise.PSD":{"title":"Promise.PSD","slug":"Promise/Promise.PSD","layout":"docs"},"Promise.catch()":{"title":"Promise.catch()","slug":"Promise/Promise.catch()","layout":"docs"},"Promise.finally()":{"title":"Promise.finally()","slug":"Promise/Promise.finally()","layout":"docs"},"Promise":{"title":"Promise","slug":"Promise/Promise","layout":"docs"},"Promise.on.error":{"title":"Promise.on.error","slug":"Promise/Promise.on.error","layout":"docs"},"Promise.onuncatched":{"title":"Promise.onuncatched","slug":"Promise/Promise.onuncatched","layout":"docs"},"unhandledrejection-event":{"title":"unhandledrejection-event","slug":"Promise/unhandledrejection-event","layout":"docs"}},"PropModification":{"add()":{"title":"Consistent add() operator","slug":"PropModification/add()","layout":"docs"},"remove()":{"title":"Consistent remove() operator","slug":"PropModification/remove()","layout":"docs"},"replacePrefix()":{"title":"Consistent replacePrefix() operator","slug":"PropModification/replacePrefix()","layout":"docs"}},"Questions-and-Answers":{"title":"Questions and Answers","slug":"Questions-and-Answers","layout":"docs"},"Releasing-Dexie":{"title":"Releasing Dexie","slug":"Releasing-Dexie","layout":"docs"},"Samples":{"title":"Samples","slug":"Samples","layout":"docs-freestyle"},"Simplify-with-yield":{"title":"Simplify with yield","slug":"Simplify-with-yield","layout":"docs"},"StorageManager":{"title":"How To Use the StorageManager API","slug":"StorageManager","layout":"docs"},"Syncable":{"Dexie.Syncable.IDatabaseChange":{"title":"Dexie.Syncable.IDatabaseChange","slug":"Syncable/Dexie.Syncable.IDatabaseChange","layout":"docs"},"Dexie.Syncable.IPersistedContext":{"title":"Dexie.Syncable.IPersistentContext","slug":"Syncable/Dexie.Syncable.IPersistedContext","layout":"docs"},"Dexie.Syncable.ISyncProtocol":{"title":"Dexie.Syncable.ISyncProtocol","slug":"Syncable/Dexie.Syncable.ISyncProtocol","layout":"docs"},"Dexie.Syncable.StatusTexts":{"title":"Dexie.Syncable.StatusTexts","slug":"Syncable/Dexie.Syncable.StatusTexts","layout":"docs"},"Dexie.Syncable.Statuses":{"title":"Dexie.Syncable.Statuses","slug":"Syncable/Dexie.Syncable.Statuses","layout":"docs"},"Dexie.Syncable.js":{"title":"Dexie.Syncable","slug":"Syncable/Dexie.Syncable.js","layout":"docs"},"Dexie.Syncable.registerSyncProtocol()":{"title":"Dexie.Syncable.registerSyncProtocol()","slug":"Syncable/Dexie.Syncable.registerSyncProtocol()","layout":"docs"},"db.syncable.connect()":{"title":"db.syncable.connect()","slug":"Syncable/db.syncable.connect()","layout":"docs"},"db.syncable.delete()":{"title":"db.syncable.delete()","slug":"Syncable/db.syncable.delete()","layout":"docs"},"db.syncable.disconnect()":{"title":"db.syncable.disconnect()","slug":"Syncable/db.syncable.disconnect()","layout":"docs"},"db.syncable.getOptions()":{"title":"db.syncable.getOptions()","slug":"Syncable/db.syncable.getOptions()","layout":"docs"},"db.syncable.getStatus()":{"title":"db.syncable.getStatus()","slug":"Syncable/db.syncable.getStatus()","layout":"docs"},"db.syncable.list()":{"title":"db.syncable.list()","slug":"Syncable/db.syncable.list()","layout":"docs"},"db.syncable.on('statusChanged')":{"title":"db.syncable.on('statusChanged')","slug":"Syncable/db.syncable.on('statusChanged')","layout":"docs"},"db.syncable.setFilter()":{"title":"db.syncable.setFilter()","slug":"Syncable/db.syncable.setFilter()","layout":"docs"}},"Table":{"Table.add()":{"title":"Table.add()","slug":"Table/Table.add()","layout":"docs"},"Table.bulkAdd()":{"title":"Table.bulkAdd()","slug":"Table/Table.bulkAdd()","layout":"docs"},"Table.bulkDelete()":{"title":"Table.bulkDelete()","slug":"Table/Table.bulkDelete()","layout":"docs"},"Table.bulkGet()":{"title":"Table.bulkGet()","slug":"Table/Table.bulkGet()","layout":"docs"},"Table.bulkPut()":{"title":"Table.bulkPut()","slug":"Table/Table.bulkPut()","layout":"docs"},"Table.bulkUpdate()":{"title":"Table.bulkUpdate()","slug":"Table/Table.bulkUpdate()","layout":"docs"},"Table.clear()":{"title":"Table.clear()","slug":"Table/Table.clear()","layout":"docs"},"Table.count()":{"title":"Table.count()","slug":"Table/Table.count()","layout":"docs"},"Table.defineClass()":{"title":"Table.defineClass()","slug":"Table/Table.defineClass()","layout":"docs"},"Table.delete()":{"title":"Table.delete()","slug":"Table/Table.delete()","layout":"docs"},"Table.each()":{"title":"Table.each()","slug":"Table/Table.each()","layout":"docs"},"Table.filter()":{"title":"Table.filter()","slug":"Table/Table.filter()","layout":"docs"},"Table.get()":{"title":"Table.get()","slug":"Table/Table.get()","layout":"docs"},"Table.hook('creating')":{"title":"Table.hook('creating')","slug":"Table/Table.hook('creating')","layout":"docs"},"Table.hook('deleting')":{"title":"Table.hook('deleting')","slug":"Table/Table.hook('deleting')","layout":"docs"},"Table.hook('reading')":{"title":"Table.hook('reading')","slug":"Table/Table.hook('reading')","layout":"docs"},"Table.hook('updating')":{"title":"Table.hook('updating')","slug":"Table/Table.hook('updating')","layout":"docs"},"Table.limit()":{"title":"Table.limit()","slug":"Table/Table.limit()","layout":"docs"},"Table.mapToClass()":{"title":"Table.mapToClass()","slug":"Table/Table.mapToClass()","layout":"docs"},"Table":{"title":"Table","slug":"Table/Table","layout":"docs"},"Table.name":{"title":"Table.name","slug":"Table/Table.name","layout":"docs"},"Table.offset()":{"title":"Table.offset()","slug":"Table/Table.offset()","layout":"docs"},"Table.orderBy()":{"title":"Table.orderBy()","slug":"Table/Table.orderBy()","layout":"docs"},"Table.put()":{"title":"Table.put()","slug":"Table/Table.put()","layout":"docs"},"Table.reverse()":{"title":"Table.reverse()","slug":"Table/Table.reverse()","layout":"docs"},"Table.schema":{"title":"Table.schema","slug":"Table/Table.schema","layout":"docs"},"Table.toArray()":{"title":"Table.toArray()","slug":"Table/Table.toArray()","layout":"docs"},"Table.toCollection()":{"title":"Table.toCollection()","slug":"Table/Table.toCollection()","layout":"docs"},"Table.update()":{"title":"Table.update()","slug":"Table/Table.update()","layout":"docs"},"Table.upsert()":{"title":"Table.upsert()","slug":"Table/Table.upsert()","layout":"docs"},"Table.where()":{"title":"Table.where()","slug":"Table/Table.where()","layout":"docs"}},"TableSchema":{"title":"Table Schema","slug":"TableSchema","layout":"docs"},"The-Main-Limitations-of-IndexedDB":{"title":"The main limitations of IndexedDB","slug":"The-Main-Limitations-of-IndexedDB","layout":"docs"},"The-Three-Main-Limitations-of-IndexedDB":{"title":"The three main limitations of IndexedDB","slug":"The-Three-Main-Limitations-of-IndexedDB","layout":"redirect"},"Transaction":{"Transaction.abort()":{"title":"Transaction.abort()","slug":"Transaction/Transaction.abort()","layout":"docs"},"Transaction":{"title":"Transaction","slug":"Transaction/Transaction","layout":"docs"},"Transaction.on.abort":{"title":"Transaction.on.abort","slug":"Transaction/Transaction.on.abort","layout":"docs"},"Transaction.on.complete":{"title":"Transaction.on.complete","slug":"Transaction/Transaction.on.complete","layout":"docs"},"Transaction.on.error":{"title":"Transaction.on.error","slug":"Transaction/Transaction.on.error","layout":"docs"},"Transaction.table()":{"title":"Transaction.table()","slug":"Transaction/Transaction.table()","layout":"docs"}},"Tutorial":{"Angular":{"title":"Get started with Dexie in Angular","slug":"Tutorial/Angular","layout":"docs"},"Best-Practices":{"title":"Best Practices","slug":"Tutorial/Best-Practices","layout":"docs"},"Building-Addons":{"title":"Building Addons","slug":"Tutorial/Building-Addons","layout":"docs"},"Consuming-dexie-as-a-module":{"title":"Consuming Dexie as a module","slug":"Tutorial/Consuming-dexie-as-a-module","layout":"docs"},"Design":{"title":"Design","slug":"Tutorial/Design","layout":"docs"},"Dexie-Cloud":{"title":"Get started with Dexie Cloud","slug":"Tutorial/Dexie-Cloud","layout":"docs-dexie-cloud"},"Getting-started":{"title":"Getting Started with Dexie.js","slug":"Tutorial/Getting-started","layout":"docs-freestyle"},"Hello-World":{"title":"Hello World","slug":"Tutorial/Hello-World","layout":"docs"},"Migrating-existing-DB-to-Dexie":{"title":"Migrating existing DB to Dexie","slug":"Tutorial/Migrating-existing-DB-to-Dexie","layout":"docs"},"React":{"title":"Get started with Dexie in React","slug":"Tutorial/React","layout":"docs"},"Svelte":{"title":"Get started with Dexie in Svelte","slug":"Tutorial/Svelte","layout":"docs"},"Understanding-the-basics":{"title":"Understanding the basics","slug":"Tutorial/Understanding-the-basics","layout":"docs"},"Vue":{"title":"Get started with Dexie in Vue","slug":"Tutorial/Vue","layout":"docs"},"index":{"title":"Tutorial","slug":"Tutorial/index","layout":"docs"}},"Typescript-old":{"title":"Typescript (old)","slug":"Typescript-old","layout":"docs"},"Typescript":{"title":"Typescript","slug":"Typescript","layout":"docs"},"Version":{"Version":{"title":"Version","slug":"Version/Version","layout":"docs"},"Version.stores()":{"title":"Version.stores()","slug":"Version/Version.stores()","layout":"docs"},"Version.upgrade()":{"title":"Version.upgrade()","slug":"Version/Version.upgrade()","layout":"docs"}},"WhereClause":{"WhereClause.above()":{"title":"WhereClause.above()","slug":"WhereClause/WhereClause.above()","layout":"docs"},"WhereClause.aboveOrEqual()":{"title":"WhereClause.aboveOrEqual()","slug":"WhereClause/WhereClause.aboveOrEqual()","layout":"docs"},"WhereClause.anyOf()":{"title":"WhereClause.anyOf()","slug":"WhereClause/WhereClause.anyOf()","layout":"docs"},"WhereClause.anyOfIgnoreCase()":{"title":"WhereClause.anyOfIgnoreCase()","slug":"WhereClause/WhereClause.anyOfIgnoreCase()","layout":"docs"},"WhereClause.below()":{"title":"WhereClause.below()","slug":"WhereClause/WhereClause.below()","layout":"docs"},"WhereClause.belowOrEqual()":{"title":"WhereClause.belowOrEqual()","slug":"WhereClause/WhereClause.belowOrEqual()","layout":"docs"},"WhereClause.between()":{"title":"WhereClause.between()","slug":"WhereClause/WhereClause.between()","layout":"docs"},"WhereClause.equals()":{"title":"WhereClause.equals()","slug":"WhereClause/WhereClause.equals()","layout":"docs"},"WhereClause.equalsIgnoreCase()":{"title":"WhereClause.equalsIgnoreCase()","slug":"WhereClause/WhereClause.equalsIgnoreCase()","layout":"docs"},"WhereClause.inAnyRange()":{"title":"WhereClause.inAnyRange()","slug":"WhereClause/WhereClause.inAnyRange()","layout":"docs"},"WhereClause":{"title":"WhereClause","slug":"WhereClause/WhereClause","layout":"docs"},"WhereClause.noneOf()":{"title":"WhereClause.noneOf()","slug":"WhereClause/WhereClause.noneOf()","layout":"docs"},"WhereClause.notEqual()":{"title":"WhereClause.notEqual()","slug":"WhereClause/WhereClause.notEqual()","layout":"docs"},"WhereClause.startsWith()":{"title":"WhereClause.startsWith()","slug":"WhereClause/WhereClause.startsWith()","layout":"docs"},"WhereClause.startsWithAnyOf()":{"title":"WhereClause.startsWithAnyOf()","slug":"WhereClause/WhereClause.startsWithAnyOf()","layout":"docs"},"WhereClause.startsWithAnyOfIgnoreCase()":{"title":"WhereClause.startsWithAnyOfIgnoreCase()","slug":"WhereClause/WhereClause.startsWithAnyOfIgnoreCase()","layout":"docs"},"WhereClause.startsWithIgnoreCase()":{"title":"WhereClause.startsWithIgnoreCase()","slug":"WhereClause/WhereClause.startsWithIgnoreCase()","layout":"docs"}},"Y.js":{"Y.js":{"title":"Y.js","slug":"Y.js/Y.js","layout":"docs"},"y-dexie":{"title":"y-dexie","slug":"Y.js/y-dexie","layout":"docs"}},"dexie-react-hooks":{"useDocument()":{"title":"useDocument()","slug":"dexie-react-hooks/useDocument()","layout":"docs"},"useLiveQuery()":{"title":"useLiveQuery()","slug":"dexie-react-hooks/useLiveQuery()","layout":"docs"},"useObservable()":{"title":"useObservable()","slug":"dexie-react-hooks/useObservable()","layout":"docs"},"usePermissions()":{"title":"usePermissions()","slug":"dexie-react-hooks/usePermissions()","layout":"docs"}},"dexie-worker":{"dexie-worker":{"title":"dexie-worker","slug":"dexie-worker/dexie-worker","layout":"docs"}},"inbound":{"title":"Inbound","slug":"inbound","layout":"docs"},"index":{"title":"Docs Home","slug":"index","layout":"docs"},"libs":{"dexie-react-hooks":{"title":"dexie-react-hooks","slug":"libs/dexie-react-hooks","layout":"docs"}},"liveQuery()":{"title":"liveQuery()","slug":"liveQuery()","layout":"docs"},"safari-issues":{"title":"safari-issues","slug":"safari-issues","layout":"$undefined"}},"currentSlug":"API-Reference","pageTitle":"API Reference","children":"$L1e"}]
1f:I[19646,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
20:I[26863,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
21:I[32412,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
22:I[65801,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
23:I[72729,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
1e:["$","$L1f",null,{"component":"article","children":[["$","$L1f",null,{"component":"header","sx":{"mb":5},"children":["$","$L20",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"API Reference"}]}],["$","$L1f",null,{"className":"docs-content","children":["$","$L1f",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L20","mdx-1",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Classes"}],"\n",["$","$L21","mdx-22",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L22","mdx-3",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-2",{"href":"/docs/Dexie/Dexie","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie"}]}],"\n",["$","$L22","mdx-5",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-4",{"href":"/docs/DexieErrors/DexieError","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"DexieError"}]}],"\n",["$","$L22","mdx-7",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-6",{"href":"/docs/Collection/Collection","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection"}]}],"\n",["$","$L22","mdx-9",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-8",{"href":"/docs/IndexSpec","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"IndexSpec"}]}],"\n",["$","$L22","mdx-11",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-10",{"href":"/docs/Promise/Promise","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Promise"}]}],"\n",["$","$L22","mdx-13",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-12",{"href":"/docs/Table/Table","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table"}]}],"\n",["$","$L22","mdx-15",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-14",{"href":"/docs/TableSchema","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"TableSchema"}]}],"\n",["$","$L22","mdx-17",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-16",{"href":"/docs/Transaction/Transaction","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Transaction"}]}],"\n",["$","$L22","mdx-19",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-18",{"href":"/docs/Version/Version","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Version"}]}],"\n",["$","$L22","mdx-21",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-20",{"href":"/docs/WhereClause/WhereClause","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"WhereClause"}]}],"\n"]}],"\n",["$","$L20","mdx-24",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":["$","$L23","mdx-23",{"href":"#quick-reference","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Cheat Sheet"}]}],"\n",["$","$L20","mdx-25",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Operators & filters"}],"\n",["$","$L21","mdx-30",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L22","mdx-27",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-26",{"href":"/docs/WhereClause/WhereClause","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"WhereClause"}]}],"\n",["$","$L22","mdx-29",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L23","mdx-28",{"href":"/docs/Collection/Collection","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection"}]}],"\n"]}],"\n",["$","$L20","mdx-31",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Addons, Adapters and Derived Work"}],"\n",["$","$L20","mdx-33",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-32",{"href":"/docs/DerivedWork","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Derived Work"}]}],"\n",["$","$L20","mdx-34",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Typescript"}],"\n",["$","$L20","mdx-36",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-35",{"href":"/docs/Typescript","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Using Dexie with Typescript"}]}],"\n",["$","$L20","mdx-37",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Knowledge Base"}],"\n",["$","$L20","mdx-39",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-38",{"href":"/docs/Questions-and-Answers","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Questions and Answers"}]}],"\n",["$","$L20","mdx-40",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Quick Reference"}],"\n",["$","$L20","mdx-41",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Declare Database"}],"\n",["$","$1","26",{"children":["$","$L1f","mdx-42",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":"$L24"}]}],"\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n","$L54","\n","$L55","\n","$L56","\n","$L57","\n","$L58","\n","$L59","\n","$L5a","\n","$L5b","\n","$L5c","\n","$L5d","\n","$L5e","\n","$L5f","\n","$L60","\n","$L61","\n","$L62","\n","$L63","\n","$L64","\n","$L65","\n","$L66","\n","$L67","\n","$L68","\n","$L69","\n","$L6a","\n","$L6b","\n","$L6c","\n","$L6d","\n","$L6e","\n","$L6f","\n","$L70","\n","$L71","\n","$L72","\n","$L73","\n","$L74","\n","$L75","\n","$L76","\n","$L77","\n","$L78","\n","$L79","\n","$L7a","\n","$L7b","\n","$L7c","\n","$L7d","\n","$L7e","\n","$L7f","\n","$L80","\n","$L81","\n","$L82","\n","$L83","\n","$L84","\n","$L85","\n","$L86","\n","$L87","\n","$L88","\n"]}]}],"$L89"]}]
8a:I[63876,["/_next/static/chunks/f6023188028df157.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/2b68d4d02ede6bf7.js","/_next/static/chunks/f7ca7d40a7605a95.js","/_next/static/chunks/b544468eebbd739a.js","/_next/static/chunks/b3354f279df46dba.js"],"default"]
8b:T48b,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">'MyDatabase'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'++id, name, age, *tags'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gameSessions</span><span class="token operator">:</span> <span class="token string">'id, score'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
24:["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"var db = new Dexie('MyDatabase');\ndb.version(1).stores({\n  friends: '++id, name, age, *tags',\n  gameSessions: 'id, score'\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$8b"}}]}]]}]
25:["$","$L20","mdx-44",{"variant":"body1","component":"div","paragraph":true,"children":["$","strong","mdx-43",{"children":"NOTE: Don't declare all columns like in SQL. You only declare properties you want to index, that is properties you want to use in a where(...) query."}]}]
26:["$","$L20","mdx-45",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Schema Syntax"}]
27:["$","div","32",{"style":{"marginBottom":"24px","width":"fit-content","maxWidth":"100%","overflow":"auto","border":"1px solid rgba(255, 255, 255, 0.12)","borderRadius":"4px"},"children":["$","table",null,{"style":{"width":"100%","borderCollapse":"collapse"},"children":[[],["$","tbody",null,{"children":[["$","tr","0",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","0",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"++"}],["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Auto-incremented primary key"}]]}],["$","tr","1",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","0",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"&"}],["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Unique"}]]}],["$","tr","2",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","0",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"*"}],["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","$L23","mdx-46",{"href":"/docs/MultiEntry-Index","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Multi-entry"}]," index"]}]]}],["$","tr","3",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","0",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"[A+B]"}],["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":["$","$L23","mdx-47",{"href":"/docs/Compound-Index","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Compound index"}]}]]}]]}]]}]}]
28:["$","$L20","mdx-49",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-48",{"href":"/docs/Version/Version.stores()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Complete Syntax Documentation"}]}]
29:["$","$L20","mdx-50",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Upgrade"}]
8c:T13dd,db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'++id,name,age,*tags'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gameSessions</span><span class="token operator">:</span> <span class="token string">'id,score'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'++id, [firstName+lastName], yearOfBirth, *tags'</span><span class="token punctuation">,</span> <span class="token comment">// Change indexes</span>
    <span class="token literal-property property">gameSessions</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token comment">// Delete table</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">upgrade</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// Will only be executed if a version below 2 was installed.</span>
    <span class="token keyword">return</span> tx<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">'friends'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      friend<span class="token punctuation">.</span>firstName <span class="token operator">=</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      friend<span class="token punctuation">.</span>lastName <span class="token operator">=</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      friend<span class="token punctuation">.</span>birthDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> friend<span class="token punctuation">.</span>age<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">delete</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
      <span class="token keyword">delete</span> friend<span class="token punctuation">.</span>age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
2a:["$","$1","38",{"children":["$","$L1f","mdx-51",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.version(1).stores({\n  friends: '++id,name,age,*tags',\n  gameSessions: 'id,score'\n});\n\ndb.version(2)\n  .stores({\n    friends: '++id, [firstName+lastName], yearOfBirth, *tags', // Change indexes\n    gameSessions: null // Delete table\n  })\n  .upgrade((tx) => {\n    // Will only be executed if a version below 2 was installed.\n    return tx.table('friends').update((friend) => {\n      friend.firstName = friend.name.split(' ')[0];\n      friend.lastName = friend.name.split(' ')[1];\n      friend.birthDate = new Date(new Date().getFullYear() - friend.age, 0);\n      delete friend.name;\n      delete friend.age;\n    });\n  });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$8c"}}]}]]}]}]}]
2b:["$","$L20","mdx-53",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-52",{"href":"/docs/Tutorial/Design#database-versioning","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Read more about database versioning"}]}]
2c:["$","$L20","mdx-54",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Class Binding"}]
8d:T834,<span class="token keyword">class</span> <span class="token class-name">Friend</span> <span class="token punctuation">{</span>
  <span class="token comment">// Prototype method</span>
  <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Will only save own props.</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Prototype property</span>
  <span class="token keyword">get</span> <span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">diff</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>birthDate<span class="token punctuation">,</span> <span class="token string">'years'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">mapToClass</span><span class="token punctuation">(</span>Friend<span class="token punctuation">)</span><span class="token punctuation">;</span>
2d:["$","$1","44",{"children":["$","$L1f","mdx-55",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"class Friend {\n  // Prototype method\n  save() {\n    return db.friends.put(this); // Will only save own props.\n  }\n\n  // Prototype property\n  get age() {\n    return moment(Date.now()).diff(this.birthDate, 'years');\n  }\n}\n\ndb.friends.mapToClass(Friend);\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$8d"}}]}]]}]}]}]
2e:["$","$L20","mdx-57",{"variant":"body1","component":"div","paragraph":true,"children":["Reference: ",["$","$L23","mdx-56",{"href":"/docs/Table/Table.mapToClass()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.mapToClass()"}]]}]
2f:["$","$L20","mdx-58",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Add Items"}]
30:["$","$1","50",{"children":["$","$L1f","mdx-59",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.add({ name: 'Josephine', age: 21 });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Josephine'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">21</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
8e:T4ab,<span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">bulkAdd</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Foo'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">31</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Bar'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
31:["$","$1","52",{"children":["$","$L1f","mdx-60",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.bulkAdd([\n  { name: 'Foo', age: 31 },\n  { name: 'Bar', age: 32 }\n]);\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$8e"}}]}]]}]}]}]
32:["$","$L20","mdx-64",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-61",{"children":["Reference: ",["$","$L23","mdx-62",{"href":"/docs/Table/Table.add()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.add()"}]," ",["$","$L23","mdx-63",{"href":"/docs/Table/Table.bulkAdd()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.bulkAdd()"}]]}]}]
33:["$","$L20","mdx-65",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Update Items"}]
34:["$","$1","58",{"children":["$","$L1f","mdx-66",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.put({ id: 4, name: 'Foo', age: 33 });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Foo'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
8f:T5ff,<span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">bulkPut</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Foo2'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">34</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Bar2'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">44</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
35:["$","$1","60",{"children":["$","$L1f","mdx-67",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.bulkPut([\n  { id: 4, name: 'Foo2', age: 34 },\n  { id: 5, name: 'Bar2', age: 44 }\n]);\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$8f"}}]}]]}]}]}]
36:["$","$1","62",{"children":["$","$L1f","mdx-68",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.upsert(4, { name: 'Bar', age: 22 });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">upsert</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bar'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
37:["$","$1","64",{"children":["$","$L1f","mdx-69",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.update(4, { name: 'Bar' });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bar'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
90:T584,<span class="token keyword">await</span> db<span class="token punctuation">.</span>customers
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">inAnyRange</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">discount</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
38:["$","$1","66",{"children":["$","$L1f","mdx-70",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.customers\n  .where('age')\n  .inAnyRange([\n    [0, 18],\n    [65, Infinity]\n  ])\n  .modify({ discount: 0.5 });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$90"}}]}]]}]}]}]
39:["$","$L20","mdx-77",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-71",{"children":["Reference: ",["$","$L23","mdx-72",{"href":"/docs/Table/Table.put()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.put()"}],", ",["$","$L23","mdx-73",{"href":"/docs/Table/Table.bulkPut()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.bulkPut()"}],", ",["$","$L23","mdx-74",{"href":"/docs/Table/Table.upsert()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.upsert()"}]," ",["$","$L23","mdx-75",{"href":"/docs/Table/Table.update()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.update()"}],", ",["$","$L23","mdx-76",{"href":"/docs/Collection/Collection.modify()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.modify()"}]]}]}]
3a:["$","$L20","mdx-78",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Delete items"}]
3b:["$","$1","72",{"children":["$","$L1f","mdx-79",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.delete(4);\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
3c:["$","$1","74",{"children":["$","$L1f","mdx-80",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends.bulkDelete([1, 2, 4]);\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">bulkDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
91:T5e1,<span class="token keyword">const</span> oneWeekAgo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> db<span class="token punctuation">.</span>logEntries<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'timestamp'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span>oneWeekAgo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
3d:["$","$1","76",{"children":["$","$L1f","mdx-81",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const oneWeekAgo = new Date(Date.now() - 60 * 60 * 1000 * 24 * 7);\n\nawait db.logEntries.where('timestamp').below(oneWeekAgo).delete();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$91"}}]}]]}]}]}]
3e:["$","$L20","mdx-86",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-82",{"children":["Reference: ",["$","$L23","mdx-83",{"href":"/docs/Table/Table.delete()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.delete()"}],", ",["$","$L23","mdx-84",{"href":"/docs/Table/Table.bulkDelete()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.bulkDelete()"}],", ",["$","$L23","mdx-85",{"href":"/docs/Collection/Collection.delete()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.delete()"}]]}]}]
3f:["$","$L20","mdx-87",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Query Items"}]
92:T4f8,<span class="token keyword">const</span> someFriends <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
40:["$","$1","82",{"children":["$","$L1f","mdx-88",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const someFriends = await db.friends\n  .where('age')\n  .between(20, 25)\n  .offset(150)\n  .limit(25)\n  .toArray();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$92"}}]}]]}]}]}]
93:T4f9,<span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">'josephine'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Found Josephine'</span><span class="token punctuation">,</span> friend<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
41:["$","$1","84",{"children":["$","$L1f","mdx-89",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends\n  .where('name')\n  .equalsIgnoreCase('josephine')\n  .each((friend) => {\n    console.log('Found Josephine', friend);\n  });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$93"}}]}]]}]}]}]
94:T418,<span class="token keyword">const</span> abcFriends <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">startsWithAnyOfIgnoreCase</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
42:["$","$1","86",{"children":["$","$L1f","mdx-90",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const abcFriends = await db.friends\n  .where('name')\n  .startsWithAnyOfIgnoreCase(['a', 'b', 'c'])\n  .toArray();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$94"}}]}]]}]}]}]
43:["$","$L20","mdx-95",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-91",{"children":["References: ",["$","$L23","mdx-92",{"href":"/docs/Table/Table.where()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.where()"}],", ",["$","$L23","mdx-93",{"href":"/docs/WhereClause/WhereClause","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"WhereClause"}],", ",["$","$L23","mdx-94",{"href":"/docs/Collection/Collection","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection"}]]}]}]
95:T582,<span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">inAnyRange</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">discount</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
44:["$","$1","90",{"children":["$","$L1f","mdx-96",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends\n  .where('age')\n  .inAnyRange([\n    [0, 18],\n    [65, Infinity]\n  ])\n  .modify({ discount: 0.5 });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$95"}}]}]]}]}]}]
45:["$","$L20","mdx-101",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-97",{"children":["References: ",["$","$L23","mdx-98",{"href":"/docs/Table/Table.where()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.where()"}],", ",["$","$L23","mdx-99",{"href":"/docs/WhereClause/WhereClause","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"WhereClause"}],", ",["$","$L23","mdx-100",{"href":"/docs/Collection/Collection.modify()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.modify()"}]]}]}]
96:T484,<span class="token keyword">const</span> friendsContainingLetterA <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>friend<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
46:["$","$1","94",{"children":["$","$L1f","mdx-102",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const friendsContainingLetterA = await db.friends\n  .filter((friend) => /a/i.test(friend.name))\n  .toArray();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$96"}}]}]]}]}]}]
47:["$","$L20","mdx-105",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-103",{"children":["Reference: ",["$","$L23","mdx-104",{"href":"/docs/Table/Table.filter()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.filter()"}]]}]}]
48:["$","$1","98",{"children":["$","$L1f","mdx-106",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const forbundsKansler = await db.friends\n  .where('[firstName+lastName]')\n  .equals(['Angela', 'Merkel'])\n  .first();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> forbundsKansler <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends\n  <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[firstName+lastName]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Angela'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Merkel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
49:["$","$L20","mdx-108",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L23","mdx-107",{"href":"/docs/Compound-Index","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Read more about compound index"}]}]
4a:["$","$L20","mdx-109",{"variant":"body1","component":"div","paragraph":true,"children":"In Dexie 2.0, you could do the above query a little simpler:"}]
4b:["$","$1","104",{"children":["$","$L1f","mdx-110",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const forbundsKansler = await db.friends\n  .where({\n    firstName: 'Angela',\n    lastName: 'Merkel'\n  })\n  .first();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> forbundsKansler <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends\n  <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Angela'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merkel'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
4c:["$","$L20","mdx-111",{"variant":"body1","component":"div","paragraph":true,"children":"Or simply:"}]
4d:["$","$1","108",{"children":["$","$L1f","mdx-112",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const forbundsKansler = await db.friends.get({\n  firstName: 'Angela',\n  lastName: 'Merkel'\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> forbundsKansler <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Angela'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merkel'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
97:T57c,<span class="token comment">// This query is equal to:</span>
<span class="token comment">//   select * from friends where firstName='Angela' order by lastName</span>
<span class="token keyword">const</span> angelasSortedByLastName <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'[firstName+lastName]'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"Angela"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"Angela"</span><span class="token punctuation">,</span> <span class="token string">"\uffff"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
4e:["$","$1","110",{"children":["$","$L1f","mdx-113",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"// This query is equal to:\n//   select * from friends where firstName='Angela' order by lastName\nconst angelasSortedByLastName = await db.friends\n    .where('[firstName+lastName]')\n    .between([[\"Angela\", \"\"], [\"Angela\", \"\\uffff\"])\n    .toArray()\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$97"}}]}]]}]}]}]
98:T836,<span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">above</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token string">'shoeSize'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token string">'interests'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span><span class="token string">'sports'</span><span class="token punctuation">,</span> <span class="token string">'pets'</span><span class="token punctuation">,</span> <span class="token string">'cars'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token operator">=></span> friend<span class="token punctuation">.</span>tags<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'marketing-target'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
4f:["$","$1","112",{"children":["$","$L1f","mdx-114",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.friends\n  .where('age')\n  .above(25)\n  .or('shoeSize')\n  .below(8)\n  .or('interests')\n  .anyOf('sports', 'pets', 'cars')\n  .modify((friend) => friend.tags.push('marketing-target'));\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$98"}}]}]]}]}]}]
50:["$","$L20","mdx-117",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-115",{"children":["Reference: ",["$","$L23","mdx-116",{"href":"/docs/Collection/Collection.or()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.or()"}]]}]}]
51:["$","$L20","mdx-118",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Retrieve TOP 5 items"}]
52:["$","$1","118",{"children":["$","$L1f","mdx-119",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const best5GameSession = await db.gameSessions\n  .orderBy('score')\n  .reverse()\n  .limit(5)\n  .toArray();\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> best5GameSession <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>gameSessions\n  <span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token string\">'score'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
53:["$","$L20","mdx-123",{"variant":"body1","component":"div","paragraph":true,"children":["References: ",["$","$L23","mdx-120",{"href":"/docs/Table/Table.orderBy()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.orderBy()"}],", ",["$","$L23","mdx-121",{"href":"/docs/Collection/Collection.reverse()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.reverse()"}],", ",["$","$L23","mdx-122",{"href":"/docs/Collection/Collection.limit()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Collection.limit()"}]]}]
54:["$","$L20","mdx-124",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Joining"}]
99:T1380,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">'music'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">genres</span><span class="token operator">:</span> <span class="token string">'++id,name'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">albums</span><span class="token operator">:</span> <span class="token string">'++id,name,year,*tracks'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bands</span><span class="token operator">:</span> <span class="token string">'++id,name,*albumIds,genreId'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getBandsStartingWithA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Query</span>
  <span class="token keyword">const</span> bands <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>bands<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Attach resolved properies "genre" and "albums" on each band</span>
  <span class="token comment">// using parallel queries:</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    bands<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">band</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>band<span class="token punctuation">.</span>genre<span class="token punctuation">,</span> band<span class="token punctuation">.</span>albums<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        db<span class="token punctuation">.</span>genres<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>band<span class="token punctuation">.</span>genreId<span class="token punctuation">)</span><span class="token punctuation">,</span>
        db<span class="token punctuation">.</span>albums<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span>band<span class="token punctuation">.</span>albumIds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> bands<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
55:["$","$1","124",{"children":["$","$L1f","mdx-125",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"var db = new Dexie('music');\ndb.version(1).stores({\n  genres: '++id,name',\n  albums: '++id,name,year,*tracks',\n  bands: '++id,name,*albumIds,genreId'\n});\n\nasync function getBandsStartingWithA() {\n  // Query\n  const bands = await db.bands.where('name').startsWith('A').toArray();\n\n  // Attach resolved properies \"genre\" and \"albums\" on each band\n  // using parallel queries:\n  await Promise.all(\n    bands.map(async (band) => {\n      [band.genre, band.albums] = await Promise.all([\n        db.genres.get(band.genreId),\n        db.albums.where('id').anyOf(band.albumIds).toArray()\n      ]);\n    })\n  );\n\n  return bands;\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$99"}}]}]]}]}]}]
56:["$","$L20","mdx-126",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Storing Binary Data"}]
9a:Tab3,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">'MyImgDb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'name'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Download and store an image</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">downloadAndStoreImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'some-url-to-an-image.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Store the binary data in indexedDB:</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'David'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">image</span><span class="token operator">:</span> blob
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
57:["$","$1","128",{"children":["$","$L1f","mdx-127",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"var db = new Dexie('MyImgDb');\ndb.version(1).stores({\n  friends: 'name'\n});\n\n// Download and store an image\nasync function downloadAndStoreImage() {\n  const res = await fetch('some-url-to-an-image.png');\n  const blob = await res.blob();\n  // Store the binary data in indexedDB:\n  await db.friends.put({\n    name: 'David',\n    image: blob\n  });\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9a"}}]}]]}]}]}]
58:["$","$L20","mdx-128",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Indexing Binary Data (IndexedDB 2.0)"}]
59:["$","$L20","mdx-129",{"variant":"body1","component":"div","paragraph":true,"children":"IndexedDB 2.0 contains support for indexing binary data. This spec is supported by Chrome and Safari\nand partially Firefox (Firefox has a bug when using binary primary key, but works well with binary index)."}]
9b:T1b02,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">'MyImgDb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'id, name'</span> <span class="token comment">// use binary UUID as id</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// IndexedDB 2.0 allows indexing ArrayBuffer and XXXArray</span>
<span class="token comment">// (typed arrays) (but not Blobs)</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">playWithBinaryPrimKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Store the binary data in indexedDB:</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'David'</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Retrieve by binary search</span>
  <span class="token keyword">const</span> friend <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>friend<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Found friend: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>friend<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Friend not found</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
5a:["$","$1","134",{"children":["$","$L1f","mdx-130",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"var db = new Dexie('MyImgDb');\ndb.version(1).stores({\n  friends: 'id, name' // use binary UUID as id\n});\n\n// IndexedDB 2.0 allows indexing ArrayBuffer and XXXArray\n// (typed arrays) (but not Blobs)\nasync function playWithBinaryPrimKey() {\n  // Store the binary data in indexedDB:\n  await db.friends.put({\n    id: new Uint8Array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]),\n    name: 'David'\n  });\n\n  // Retrieve by binary search\n  const friend = await db.friends.get(\n    new Uint8Array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n  );\n\n  if (friend) {\n    console.log(`Found friend: ${friend.name}`);\n  } else {\n    console.log(`Friend not found`);\n  }\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9b"}}]}]]}]}]}]
5b:["$","$L20","mdx-131",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Transaction"}]
9c:T62f,<span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>db<span class="token punctuation">.</span>friends<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> friend <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">++</span>friend<span class="token punctuation">.</span>age<span class="token punctuation">;</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
5c:["$","$1","138",{"children":["$","$L1f","mdx-132",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"await db.transaction('rw', [db.friends], async () => {\n  const friend = await db.friends.get(1);\n  ++friend.age;\n  await db.friends.put(friend);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9c"}}]}]]}]}]}]
5d:["$","$L20","mdx-133",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Ongoing Transaction"}]
9d:T161e,<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">'MyImgDb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">'id, name, *tags'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">goodFriends</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'tags'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">'close-friend'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addComment</span><span class="token punctuation">(</span><span class="token parameter">friendId<span class="token punctuation">,</span> comment</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>friendId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      friend<span class="token punctuation">.</span>comments<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">spreadYourLove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Make an atomic change:</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> goodFriendKeys <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">goodFriends</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">primaryKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
      goodFriendKeys<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">addComment</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token string">'I like you!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
5e:["$","$1","142",{"children":["$","$L1f","mdx-134",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"const db = new Dexie('MyImgDb');\n\ndb.version(1).stores({\n  friends: 'id, name, *tags'\n});\n\nfunction goodFriends() {\n  return db.friends.where('tags').equals('close-friend');\n}\n\nasync function addComment(friendId, comment) {\n  await db.friends\n    .where('id')\n    .equals(friendId)\n    .modify((friend) => {\n      friend.comments.push(comment);\n    });\n}\n\nasync function spreadYourLove() {\n  // Make an atomic change:\n  await db.transaction('rw', db.friends, async () => {\n    const goodFriendKeys = await goodFriends().primaryKeys();\n    await Promise.all(\n      goodFriendKeys.map((id) => addComment(id, 'I like you!'))\n    );\n  });\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9d"}}]}]]}]}]}]
5f:["$","$L20","mdx-136",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-135",{"children":"The above code snippet shows that you can reuse \"transactionless\" code (function goodFriends() and addComment()) but execute it within a transaction (spreadYourLove())."}]}]
60:["$","$L20","mdx-138",{"variant":"body1","component":"div","paragraph":true,"children":["Reference: ",["$","$L23","mdx-137",{"href":"/docs/Dexie/Dexie.transaction()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.transaction()"}]]}]
61:["$","$L20","mdx-139",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Parent Transaction"}]
9e:Ta8c,<span class="token comment">// Make one large atomic change that calls other</span>
<span class="token comment">// functions that already use a transaction.</span>
db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>diary<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">spreadYourLove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> db<span class="token punctuation">.</span>diary<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">date</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Today I successfully spread my love'</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'I failed to spread my love :( '</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
62:["$","$1","150",{"children":["$","$L1f","mdx-140",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"// Make one large atomic change that calls other\n// functions that already use a transaction.\ndb.transaction('rw', db.friends, db.diary, async () => {\n  await spreadYourLove();\n  await db.diary.log({\n    date: Date.now(),\n    text: 'Today I successfully spread my love'\n  });\n}).catch((err) => {\n  console.error('I failed to spread my love :( ' + err.stack);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9e"}}]}]]}]}]}]
63:["$","$L20","mdx-142",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-141",{"children":"The above snippet shows that you can also reuse code that is indeed transaction-aware, but encapsulate several such functions in an overall umbrella-transaction."}]}]
64:["$","$L20","mdx-145",{"variant":"body1","component":"div","paragraph":true,"children":["$","strong","mdx-143",{"children":["NOTE: The code above may look like it could only execute this transaction one-at-a-time, but with thanks to ",["$","$L23","mdx-144",{"href":"/docs/Promise/Promise.PSD","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"zone"}]," technology, this code can work in parallel with other transactions. (Dexie implements its own zone system and is not dependent on zone.js)"]}]}]
65:["$","$L20","mdx-147",{"variant":"body1","component":"div","paragraph":true,"children":["Reference: ",["$","$L23","mdx-146",{"href":"/docs/Dexie/Dexie.transaction()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.transaction()"}]]}]
66:["$","$L20","mdx-148",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Working with Asynchronic APIs"}]
67:["$","$L20","mdx-150",{"variant":"body1","component":"div","paragraph":true,"children":["Dexie.js is an asynchronic API. In synchronic APIs, errors are normally handled using exceptions. This is very convenient because you code on without doing error checking everywhere and instead catch exceptions on a higher level. Asynchronic APIs normally use success- and error events to signal back when operation complete. Since indexedDB uses a combination of exceptions and error events to notify the caller, it is quite cumbersome to code against it using correct error handling - you need both to do try..catch and request.onerror for each and every request. Dexie.js solves this by working with ECMAScript6 compliant ",["$","$L23","mdx-149",{"href":"http://www.html5rocks.com/en/tutorials/es6/promises/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Promises"}]," making error handling as easy as it is on a synchronous API with try..catch error handling."]}]
68:["$","$L20","mdx-151",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Working with Promises"}]
69:["$","$L20","mdx-155",{"variant":"body1","component":"div","paragraph":true,"children":["Promise based APIs (such as Dexie.js) will look more like synchronous APIs than event based APIs, but instead of returning the result, it will return an instance of ",["$","$L23","mdx-152",{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Promise"}],". ECMAScript6 promises has two methods: ",["$","$L23","mdx-153",{"href":"/docs/Promise/Promise.then","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"then()"}]," and ",["$","$L23","mdx-154",{"href":"/docs/Promise/Promise.catch","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"catch()"}],". These methods expects a callback to call when the operation succeeds or fails respectively. All asynchronic methods in Dexie returns a Promise instance and this makes the API way more easy to use, as you will see in our examples."]}]
6a:["$","$L20","mdx-156",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Promise-Specific Data (zone)"}]
6b:["$","$L20","mdx-160",{"variant":"body1","component":"div","paragraph":true,"children":["Dexie Promises supports a pattern similar to ",["$","$L23","mdx-157",{"href":"http://en.wikipedia.org/wiki/Thread-local_storage","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Thread-local storage"}]," where it is possible to have static properties that is bound to the executing promise and all it's child-promises. This is similar Angular's ",["$","$L23","mdx-158",{"href":"https://github.com/angular/zone.js/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"zone.js"}]," but in an unobtrusive way (no requirement of including any monkey-patching script). Dexie.js and it's transaction API heavily depends on it's transaction zones since it enables code to be aware of the currently executing transaction without having to pass transaction objects around. ",["$","$L23","mdx-159",{"href":"/docs/Promise/Promise.PSD","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Promise-Specific Data doc"}],"."]}]
6c:["$","$L20","mdx-161",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Exception Handling"}]
6d:["$","$L20","mdx-164",{"variant":"body1","component":"div","paragraph":true,"children":["With Dexie, in contrary to indexedDB, there is one single way to catch exceptions - through the Promise.catch() method. Nowhere do you need to do a standard try..catch(). The reason for this is to not enforce the caller to need to think about several ways of error handling. When you work with transactions, you will also get the benefit of being able to catch all errors in one single place - at the end of the transaction, instead of having to catch() every promise of each database operation. Any uncaught error (no matter error events, exception or miss-spelled variable in your code) will abort the ongoing ",["$","$L23","mdx-162",{"href":"/docs/Transaction/Transaction","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Transaction"}]," and trigger its returned ",["$","$L23","mdx-163",{"href":"/docs/Promise/Promise","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Promise"}]," to reject, waking up any catch() clause attached to the transaction scope."]}]
9f:T645,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token operator">...</span>

    window<span class="token punctuation">.</span>MissSpelledVar<span class="token punctuation">.</span>NonExistingVar <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// Will fail!</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// Transaction will abort!</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
6e:["$","$1","174",{"children":["$","$L1f","mdx-165",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, function() {\n\n    ...\n\n    window.MissSpelledVar.NonExistingVar = 3; // Will fail!\n\n}).catch (function (err) {\n\n    // Transaction will abort!\n    console.error(err);\n\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$9f"}}]}]]}]}]}]
6f:["$","$L20","mdx-166",{"variant":"body1","component":"div","paragraph":true,"children":"All transaction promises should either be caught or returned to its caller."}]
70:["$","$L20","mdx-167",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Catching means Handling!"}]
71:["$","$L20","mdx-168",{"variant":"body1","component":"div","paragraph":true,"children":"If you catch a Promise from a database operation within a transaction, it will be considered to be handled and the transaction will not be aborted. This could be a common pitfall when people catch promises within transactions just to log it but expecting the transaction to abort. Solution: re-throw the errors that you don't handle!"}]
a0:T808,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Foo'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Failed to add Foo friend'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> e<span class="token punctuation">;</span> <span class="token comment">// Rethrow to abort transaction.</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
72:["$","$1","182",{"children":["$","$L1f","mdx-169",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, function () {\n  db.friends.add({ id: 1, name: 'Foo' }).catch(function (e) {\n    console.error('Failed to add Foo friend');\n    throw e; // Rethrow to abort transaction.\n  });\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a0"}}]}]]}]}]}]
73:["$","$L20","mdx-170",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Working With Transactions"}]
74:["$","$L20","mdx-171",{"variant":"body1","component":"div","paragraph":true,"children":"Whenever you want to do more than a single operation, you simplify your code by using transactions. By working with transactions, you get the following benefits:"}]
75:["$","$L21","mdx-177",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L22","mdx-172",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"If modifying database and any error occur - error event or exception of any kind - then transaction will abort and every modification will be rolled back."}],"\n",["$","$L22","mdx-173",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"No need to handle promises if you don't like. Everything is encapsulated in the transaction so you can handle that instead."}],"\n",["$","$L22","mdx-174",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"You may do all write operations synchronically without the need to wait for it to finish before starting the next one. (see the 2nd example code below)."}],"\n",["$","$L22","mdx-175",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Even read-operations can be done the line after a write operations without waiting for write to finish - still your result will include all modifications. This is possible because all operations are queued when there is a pending write operation going on in current transaction."}],"\n",["$","$L22","mdx-176",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Not a single error will just slip away - you catch all in the final catch() method - both error events and ordinary exceptions of any kind."}],"\n"]}]
76:["$","$L20","mdx-178",{"variant":"body1","component":"div","paragraph":true,"children":"Here is how you enter a transaction block:"}]
a1:Te94,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Any database error event that occur will abort transaction and</span>
  <span class="token comment">// be sent to the catch() method below.</span>
  <span class="token comment">// The exact same rule if any exception is thrown what so ever.</span>

  <span class="token keyword">return</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Bamse'</span><span class="token punctuation">,</span> <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token string">'cat'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">petId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Kate'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token literal-property property">pets</span><span class="token operator">:</span> <span class="token punctuation">[</span>petId<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Log or display the error</span>

  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>stack <span class="token operator">||</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
77:["$","$1","192",{"children":["$","$L1f","mdx-179",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, db.pets, function () {\n  // Any database error event that occur will abort transaction and\n  // be sent to the catch() method below.\n  // The exact same rule if any exception is thrown what so ever.\n\n  return db.pets.add({ name: 'Bamse', kind: 'cat' }).then(function (petId) {\n    return db.friends.add({ name: 'Kate', age: 89, pets: [petId] });\n  });\n}).catch(function (error) {\n  // Log or display the error\n\n  console.error(error.stack || error);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a1"}}]}]]}]}]}]
78:["$","$L20","mdx-180",{"variant":"body1","component":"div","paragraph":true,"children":"Notes:"}]
79:["$","$L21","mdx-188",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L22","mdx-182",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["'friends' and 'pets' are objectStores registered using ",["$","$L23","mdx-181",{"href":"/docs/Version/Version.stores()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Version.stores()"}]," method."]}],"\n",["$","$L22","mdx-185",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","$L1f","mdx-183",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"rw\""}]," should be replaced with ",["$","$L1f","mdx-184",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"r\""}]," if you are just going to do read operations."]}],"\n",["$","$L22","mdx-186",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Also errors from chained database operations within the transaction, or plain exceptions happening in any then() callback of any chained operation will be caught by the transaction's catch() method."}],"\n",["$","$L22","mdx-187",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"It is possible to prohibit the transaction from being aborted if a failing DB operation is caught explicitly:"}],"\n"]}]
a2:Tdad,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Fredrik'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Fredrik'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Adding same primary key twice will of course fail. But</span>
    <span class="token comment">// since we catch this error explicitly, the transaction</span>
    <span class="token comment">// wont abort. This makes it possible to continue the</span>
    <span class="token comment">// transaction in a managed way. If you still want to abort</span>
    <span class="token comment">// the transaction, just do Dexie.currentTransaction.abort(),</span>
    <span class="token comment">// throw an exception, or just:</span>
    <span class="token comment">// return Promise.reject(err);</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Transaction successfully completed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
7a:["$","$1","198",{"children":["$","$L1f","mdx-189",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, function () {\n  db.friends.add({ id: 1, name: 'Fredrik' });\n  db.friends.add({ id: 1, name: 'Fredrik' }).catch(function (err) {\n    // Adding same primary key twice will of course fail. But\n    // since we catch this error explicitly, the transaction\n    // wont abort. This makes it possible to continue the\n    // transaction in a managed way. If you still want to abort\n    // the transaction, just do Dexie.currentTransaction.abort(),\n    // throw an exception, or just:\n    // return Promise.reject(err);\n  });\n}).then(function () {\n  alert('Transaction successfully completed');\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a2"}}]}]]}]}]}]
7b:["$","$L20","mdx-190",{"variant":"body1","component":"div","paragraph":true,"children":"When working with transactions, you may query a recent add(), put(), update(), delete() or modify() operation on the next line without waiting for it to finish. The waiting is taken care of by the framework. See the difference below on how that may simplify your code to work with a transaction and not having to call .then() all the time."}]
7c:["$","h5","mdx-191",{"children":"Code Example Without Transaction"}]
a3:T1124,db<span class="token punctuation">.</span>friends
  <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Ulla Bella'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Elna'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends
      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">above</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Retired friend: '</span> <span class="token operator">+</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
7d:["$","$1","204",{"children":["$","$L1f","mdx-192",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.friends\n  .add({ name: 'Ulla Bella', age: 87, isCloseFriend: 0 })\n  .then(function () {\n    return db.friends.add({ name: 'Elna', age: 99, isCloseFriend: 1 });\n  })\n  .then(function () {\n    return db.friends\n      .where('age')\n      .above(65)\n      .each(function (friend) {\n        console.log('Retired friend: ' + friend.name);\n      });\n  })\n  .catch(function (error) {\n    console.error(error);\n  });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a3"}}]}]]}]}]}]
7e:["$","h5","mdx-193",{"children":"Same Code Example With Transaction"}]
a4:T101d,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Ulla Bella'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Elna'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span>friends
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">above</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Retired friend: '</span> <span class="token operator">+</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
7f:["$","$1","208",{"children":["$","$L1f","mdx-194",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, function () {\n  db.friends.add({ name: 'Ulla Bella', age: 87, isCloseFriend: 0 });\n  db.friends.add({ name: 'Elna', age: 99, isCloseFriend: 1 });\n  db.friends\n    .where('age')\n    .above(65)\n    .each(function (friend) {\n      console.log('Retired friend: ' + friend.name);\n    });\n}).catch(function (error) {\n  console.error(error);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a4"}}]}]]}]}]}]
80:["$","$L20","mdx-195",{"variant":"body1","component":"div","paragraph":true,"children":"The sample above shows that there's no need to wait for the add() operations to finish when working within the same transaction."}]
81:["$","$L20","mdx-196",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"The Auto-Commit Behavior of IndexedDB Transactions"}]
82:["$","$L20","mdx-197",{"variant":"body1","component":"div","paragraph":true,"children":"IndexedDB will commit a transaction as soon as it isn't used within the same task. This means that you MUST NOT call any other async API (at least not wait for it to finish) within a transaction scope. If you do, you will get a TransactionInactiveError thrown at you as soon as you try to continue using the transaction. This cannot be worked around by encapsulating the call with Dexie.Promise since it is a behaviour of IndexedDB."}]
83:["$","$L20","mdx-200",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-198",{"children":["News in Dexie 2.0.0-beta.6: You can now wait for other async APIs and still hold the transaction active, using ",["$","$L23","mdx-199",{"href":"/docs/Dexie/Dexie.waitFor()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.waitFor()"}]]}]}]
84:["$","$L20","mdx-201",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Nested IndexedDB Transactions"}]
85:["$","$L20","mdx-202",{"variant":"body1","component":"div","paragraph":true,"children":"Since version 0.9.8, Dexie supports nested transactions:"}]
a5:T569,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// MAIN transaction block</span>
  db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// SUB transaction block</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
86:["$","$1","222",{"children":["$","$L1f","mdx-203",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L8a",null,{"code":"db.transaction('rw', db.friends, db.pets, function () {\n  // MAIN transaction block\n  db.transaction('rw', db.pets, function () {\n    // SUB transaction block\n  });\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$a5"}}]}]]}]}]}]
87:["$","$L20","mdx-204",{"variant":"body1","component":"div","paragraph":true,"children":"The power with nested transactions is that functions that use a transaction can be reused by higher-level code that surrounds all of its calls into a bigger transaction."}]
88:["$","$L20","mdx-206",{"variant":"body1","component":"div","paragraph":true,"children":["See also ",["$","$L23","mdx-205",{"href":"/docs/Dexie/Dexie.transaction()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.transaction()"}]," for more information on how to use transactions."]}]
89:["$","$L1f",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L20",null,{"variant":"caption","color":"text.secondary","children":"API-Reference"}],["$","$L20",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/27/2025"]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:null
a6:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
17:{"metadata":[["$","title","0",{"children":"API Reference | Dexie.js Documentation - Offline-First Database | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"API Reference documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie.js,indexeddb,offline first,javascript database,browser database"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie.js, indexeddb, offline first, javascript database, browser database"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/docs/API-Reference"}],["$","meta","13",{"property":"og:title","content":"API Reference - Dexie.js Documentation"}],["$","meta","14",{"property":"og:description","content":"API Reference documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/docs/API-Reference"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/og-images/og-base.png"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"Build synced offline-first apps with Dexie"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"API Reference - Dexie.js Docs"}],["$","meta","23",{"name":"twitter:description","content":"API Reference documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/og-images/og-base.png"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$La6","26",{}]],"error":null,"digest":"$undefined"}
1c:"$17:metadata"
