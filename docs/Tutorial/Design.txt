1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
4:I[17350,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
5:I[11054,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
6:I[53675,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
7:I[45678,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
10:I[68027,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"M2XeuCnaNOH6gEMdZNT6C","p":"","c":["","docs","Tutorial","Design"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","Tutorial/Design","c"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/40c7d64eb6baa423.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/979a509c88d32a4e.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/1ee5528f2863dd7c.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/cd47604cae0ad19f.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/a8730058447906a4.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["docs","$Lc",{"children":[["slug","Tutorial/Design","c"],"$Ld",{"children":["__PAGE__","$Le",{},null,false]},null,false]},null,false]},null,false],"$Lf",false]],"m":"$undefined","G":["$10",["$L11"]],"s":false,"S":true}
12:I[13642,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
14:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
16:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
18:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1a:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1b:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L12",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":["$L13",[["$","script","script-0",{"src":"/_next/static/chunks/1b8d91388f6c6c81.js","async":true,"nonce":"$undefined"}]],["$","$L14",null,{"children":["$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}]
f:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1d:I[99748,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
13:["$","$L1d",null,{"navigation":{"API-Reference":{"title":"API Reference","slug":"API-Reference","layout":"docs"},"Collection":{"Collection.and()":{"title":"Collection.and()","slug":"Collection/Collection.and()","layout":"docs"},"Collection.clone()":{"title":"Collection.clone()","slug":"Collection/Collection.clone()","layout":"docs"},"Collection.count()":{"title":"Collection.count()","slug":"Collection/Collection.count()","layout":"docs"},"Collection.delete()":{"title":"Collection.delete()","slug":"Collection/Collection.delete()","layout":"docs"},"Collection.desc()":{"title":"Collection.desc()","slug":"Collection/Collection.desc()","layout":"docs"},"Collection.distinct()":{"title":"Collection.distinct()","slug":"Collection/Collection.distinct()","layout":"docs"},"Collection.each()":{"title":"Collection.each()","slug":"Collection/Collection.each()","layout":"docs"},"Collection.eachKey()":{"title":"Collection.eachKey()","slug":"Collection/Collection.eachKey()","layout":"docs"},"Collection.eachPrimaryKey()":{"title":"Collection.eachPrimaryKey()","slug":"Collection/Collection.eachPrimaryKey()","layout":"docs"},"Collection.eachUniqueKey()":{"title":"Collection.eachUniqueKey()","slug":"Collection/Collection.eachUniqueKey()","layout":"docs"},"Collection.filter()":{"title":"Collection.filter()","slug":"Collection/Collection.filter()","layout":"docs"},"Collection.first()":{"title":"Collection.first()","slug":"Collection/Collection.first()","layout":"docs"},"Collection.keys()":{"title":"Collection.keys()","slug":"Collection/Collection.keys()","layout":"docs"},"Collection.last()":{"title":"Collection.last()","slug":"Collection/Collection.last()","layout":"docs"},"Collection.limit()":{"title":"Collection.limit()","slug":"Collection/Collection.limit()","layout":"docs"},"Collection":{"title":"Collection","slug":"Collection/Collection","layout":"docs"},"Collection.modify()":{"title":"Collection.modify()","slug":"Collection/Collection.modify()","layout":"docs"},"Collection.offset()":{"title":"Collection.offset()","slug":"Collection/Collection.offset()","layout":"docs"},"Collection.or()":{"title":"Collection.or()","slug":"Collection/Collection.or()","layout":"docs"},"Collection.primaryKeys()":{"title":"Collection.primaryKeys()","slug":"Collection/Collection.primaryKeys()","layout":"docs"},"Collection.raw()":{"title":"Collection.raw()","slug":"Collection/Collection.raw()","layout":"docs"},"Collection.reverse()":{"title":"Collection.reverse()","slug":"Collection/Collection.reverse()","layout":"docs"},"Collection.sortBy()":{"title":"Collection.sortBy()","slug":"Collection/Collection.sortBy()","layout":"docs"},"Collection.toArray()":{"title":"Collection.toArray()","slug":"Collection/Collection.toArray()","layout":"docs"},"Collection.uniqueKeys()":{"title":"Collection.uniqueKeys()","slug":"Collection/Collection.uniqueKeys()","layout":"docs"},"Collection.until()":{"title":"Collection.until()","slug":"Collection/Collection.until()","layout":"docs"}},"Compound-Index":{"title":"Compound Index","slug":"Compound-Index","layout":"docs"},"DBCore":{"DBCore":{"title":"DBCore","slug":"DBCore/DBCore","layout":"docs"},"DBCoreAddRequest":{"title":"DBCoreAddRequest","slug":"DBCore/DBCoreAddRequest","layout":"docs"},"DBCoreCountRequest":{"title":"DBCoreCountRequest","slug":"DBCore/DBCoreCountRequest","layout":"docs"},"DBCoreCursor":{"title":"DBCoreCursor","slug":"DBCore/DBCoreCursor","layout":"docs"},"DBCoreDeleteRangeRequest":{"title":"DBCoreDeleteRangeRequest","slug":"DBCore/DBCoreDeleteRangeRequest","layout":"docs"},"DBCoreDeleteRequest":{"title":"DBCoreDeleteRequest","slug":"DBCore/DBCoreDeleteRequest","layout":"docs"},"DBCoreGetManyRequest":{"title":"DBCoreGetManyRequest","slug":"DBCore/DBCoreGetManyRequest","layout":"docs"},"DBCoreGetRequest":{"title":"DBCoreGetRequest","slug":"DBCore/DBCoreGetRequest","layout":"docs"},"DBCoreIndex":{"title":"DBCoreIndex","slug":"DBCore/DBCoreIndex","layout":"docs"},"DBCoreKeyRange":{"title":"DBCoreKeyRange","slug":"DBCore/DBCoreKeyRange","layout":"docs"},"DBCoreMutateRequest":{"title":"DBCoreMutateRequest","slug":"DBCore/DBCoreMutateRequest","layout":"docs"},"DBCoreMutateResponse":{"title":"DBCoreMutateResponse","slug":"DBCore/DBCoreMutateResponse","layout":"docs"},"DBCoreOpenCursorRequest":{"title":"DBCoreOpenCursorRequest","slug":"DBCore/DBCoreOpenCursorRequest","layout":"docs"},"DBCorePutRequest":{"title":"DBCorePutRequest","slug":"DBCore/DBCorePutRequest","layout":"docs"},"DBCoreQuery":{"title":"DBCoreQuery","slug":"DBCore/DBCoreQuery","layout":"docs"},"DBCoreQueryRequest":{"title":"DBCoreQueryRequest","slug":"DBCore/DBCoreQueryRequest","layout":"docs"},"DBCoreQueryResponse":{"title":"DBCoreQueryResponse","slug":"DBCore/DBCoreQueryResponse","layout":"docs"},"DBCoreRangeType":{"title":"DBCoreRangeType","slug":"DBCore/DBCoreRangeType","layout":"docs"},"DBCoreSchema":{"title":"DBCoreSchema","slug":"DBCore/DBCoreSchema","layout":"docs"},"DBCoreTable":{"title":"DBCoreTable","slug":"DBCore/DBCoreTable","layout":"docs"},"DBCoreTableSchema":{"title":"DBCoreTableSchema","slug":"DBCore/DBCoreTableSchema","layout":"docs"},"DBCoreTransaction":{"title":"DBCoreTransaction","slug":"DBCore/DBCoreTransaction","layout":"docs"},"DBCoreTransactionMode":{"title":"DBCoreTransactionMode","slug":"DBCore/DBCoreTransactionMode","layout":"docs"}},"Deprecations":{"title":"Deprecations","slug":"Deprecations","layout":"docs"},"DerivedWork":{"title":"Derived Work","slug":"DerivedWork","layout":"docs"},"Dexie":{"Dexie.[table]":{"title":"Dexie.[table]","slug":"Dexie/Dexie.[table]","layout":"docs"},"Dexie.addons":{"title":"Dexie.addons","slug":"Dexie/Dexie.addons","layout":"docs"},"Dexie.async()":{"title":"Dexie.async()","slug":"Dexie/Dexie.async()","layout":"docs"},"Dexie.backendDB()":{"title":"Dexie.backendDB()","slug":"Dexie/Dexie.backendDB()","layout":"docs"},"Dexie.close()":{"title":"Dexie.close()","slug":"Dexie/Dexie.close()","layout":"docs"},"Dexie.currentTransaction":{"title":"Dexie.currentTransaction","slug":"Dexie/Dexie.currentTransaction","layout":"docs"},"Dexie.debug":{"title":"Dexie.debug","slug":"Dexie/Dexie.debug","layout":"docs"},"Dexie.deepClone()":{"title":"Dexie.deepClone()","slug":"Dexie/Dexie.deepClone()","layout":"docs"},"Dexie.defineClass()":{"title":"Dexie.defineClass()","slug":"Dexie/Dexie.defineClass()","layout":"docs"},"Dexie.delByKeyPath()":{"title":"Dexie.delByKeyPath()","slug":"Dexie/Dexie.delByKeyPath()","layout":"docs"},"Dexie.delete()":{"title":"Dexie.delete()","slug":"Dexie/Dexie.delete()","layout":"docs"},"Dexie.derive()":{"title":"Dexie.derive()","slug":"Dexie/Dexie.derive()","layout":"docs"},"Dexie.events()":{"title":"Dexie.events()","slug":"Dexie/Dexie.events()","layout":"docs"},"Dexie.exists()":{"title":"Dexie.exists()","slug":"Dexie/Dexie.exists()","layout":"docs"},"Dexie.extend()":{"title":"Dexie.extend()","slug":"Dexie/Dexie.extend()","layout":"docs"},"Dexie.fakeAutoComplete()":{"title":"Dexie.fakeAutoComplete()","slug":"Dexie/Dexie.fakeAutoComplete()","layout":"docs"},"Dexie.getByKeyPath()":{"title":"Dexie.getByKeyPath()","slug":"Dexie/Dexie.getByKeyPath()","layout":"docs"},"Dexie.getDatabaseNames()":{"title":"Dexie.getDatabaseNames()","slug":"Dexie/Dexie.getDatabaseNames()","layout":"docs"},"Dexie.hasFailed()":{"title":"Dexie.hasFailed()","slug":"Dexie/Dexie.hasFailed()","layout":"docs"},"Dexie.ignoreTransaction()":{"title":"Dexie.ignoreTransaction()","slug":"Dexie/Dexie.ignoreTransaction()","layout":"docs"},"Dexie.isOpen()":{"title":"Dexie.isOpen()","slug":"Dexie/Dexie.isOpen()","layout":"docs"},"Dexie":{"title":"Dexie Constructor","slug":"Dexie/Dexie","layout":"docs"},"Dexie.name":{"title":"Dexie.name","slug":"Dexie/Dexie.name","layout":"docs"},"Dexie.on()":{"title":"Dexie.on()","slug":"Dexie/Dexie.on()","layout":"docs"},"Dexie.on.blocked":{"title":"Dexie.on.blocked","slug":"Dexie/Dexie.on.blocked","layout":"docs"},"Dexie.on.close":{"title":"Dexie.on.close","slug":"Dexie/Dexie.on.close","layout":"docs"},"Dexie.on.error":{"title":"Dexie.on.error","slug":"Dexie/Dexie.on.error","layout":"docs"},"Dexie.on.populate-(old-version)":{"title":"Dexie.on.populate-(old-version)","slug":"Dexie/Dexie.on.populate-(old-version)","layout":"docs"},"Dexie.on.populate":{"title":"Dexie.on.populate","slug":"Dexie/Dexie.on.populate","layout":"docs"},"Dexie.on.ready":{"title":"Dexie.on.ready","slug":"Dexie/Dexie.on.ready","layout":"docs"},"Dexie.on.storagemutated":{"title":"Dexie.on.storagemutated","slug":"Dexie/Dexie.on.storagemutated","layout":"docs"},"Dexie.on.versionchange":{"title":"Dexie.on.versionchange","slug":"Dexie/Dexie.on.versionchange","layout":"docs"},"Dexie.open()":{"title":"Dexie.open()","slug":"Dexie/Dexie.open()","layout":"docs"},"Dexie.override()":{"title":"Dexie.override()","slug":"Dexie/Dexie.override()","layout":"docs"},"Dexie.semVer":{"title":"Dexie.semVer","slug":"Dexie/Dexie.semVer","layout":"docs"},"Dexie.setByKeyPath()":{"title":"Dexie.setByKeyPath()","slug":"Dexie/Dexie.setByKeyPath()","layout":"docs"},"Dexie.shallowClone()":{"title":"Dexie.shallowClone()","slug":"Dexie/Dexie.shallowClone()","layout":"docs"},"Dexie.spawn()":{"title":"Dexie.spawn()","slug":"Dexie/Dexie.spawn()","layout":"docs"},"Dexie.table()":{"title":"Dexie.table()","slug":"Dexie/Dexie.table()","layout":"docs"},"Dexie.tables":{"title":"Dexie.tables","slug":"Dexie/Dexie.tables","layout":"docs"},"Dexie.transaction()-(old-version)":{"title":"Dexie.transaction()-(old-version)","slug":"Dexie/Dexie.transaction()-(old-version)","layout":"docs"},"Dexie.transaction()":{"title":"Dexie.transaction()","slug":"Dexie/Dexie.transaction()","layout":"docs"},"Dexie.use()":{"title":"Dexie.use()","slug":"Dexie/Dexie.use()","layout":"docs"},"Dexie.verno":{"title":"Dexie.verno","slug":"Dexie/Dexie.verno","layout":"docs"},"Dexie.version()":{"title":"Dexie.version()","slug":"Dexie/Dexie.version()","layout":"docs"},"Dexie.version":{"title":"Dexie.version","slug":"Dexie/Dexie.version","layout":"docs"},"Dexie.vip()":{"title":"Dexie.vip()","slug":"Dexie/Dexie.vip()","layout":"docs"},"Dexie.waitFor()":{"title":"Dexie.waitFor()","slug":"Dexie/Dexie.waitFor()","layout":"docs"}},"Dexie.js":{"title":"Dexie.js","slug":"Dexie.js","layout":"docs"},"DexieErrors":{"Dexie.AbortError":{"title":"Dexie.AbortError","slug":"DexieErrors/Dexie.AbortError","layout":"docs"},"Dexie.BulkError":{"title":"Dexie.BulkError","slug":"DexieErrors/Dexie.BulkError","layout":"docs"},"Dexie.ConstraintError":{"title":"Dexie.ConstraintError","slug":"DexieErrors/Dexie.ConstraintError","layout":"docs"},"Dexie.DataCloneError":{"title":"Dexie.DataCloneError","slug":"DexieErrors/Dexie.DataCloneError","layout":"docs"},"Dexie.DataError":{"title":"Dexie.DataError","slug":"DexieErrors/Dexie.DataError","layout":"docs"},"Dexie.DatabaseClosedError":{"title":"Dexie.DatabaseClosedError","slug":"DexieErrors/Dexie.DatabaseClosedError","layout":"docs"},"Dexie.IncompatiblePromiseError":{"title":"Dexie.IncompatiblePromiseError","slug":"DexieErrors/Dexie.IncompatiblePromiseError","layout":"docs"},"Dexie.InternalError":{"title":"Dexie.InternalError","slug":"DexieErrors/Dexie.InternalError","layout":"docs"},"Dexie.InvalidAccessError":{"title":"Dexie.InvalidAccessError","slug":"DexieErrors/Dexie.InvalidAccessError","layout":"docs"},"Dexie.InvalidArgumentError":{"title":"Dexie.InvalidArgumentError","slug":"DexieErrors/Dexie.InvalidArgumentError","layout":"docs"},"Dexie.InvalidStateError":{"title":"Dexie.InvalidStateError","slug":"DexieErrors/Dexie.InvalidStateError","layout":"docs"},"Dexie.InvalidTableError":{"title":"Dexie.InvalidTableError","slug":"DexieErrors/Dexie.InvalidTableError","layout":"docs"},"Dexie.MissingAPIError":{"title":"Dexie.MissingAPIError","slug":"DexieErrors/Dexie.MissingAPIError","layout":"docs"},"Dexie.ModifyError":{"title":"Dexie.ModifyError","slug":"DexieErrors/Dexie.ModifyError","layout":"docs"},"Dexie.NoSuchDatabaseError":{"title":"Dexie.NoSuchDatabaseErrorError","slug":"DexieErrors/Dexie.NoSuchDatabaseError","layout":"docs"},"Dexie.NotFoundError":{"title":"Dexie.NotFoundError","slug":"DexieErrors/Dexie.NotFoundError","layout":"docs"},"Dexie.OpenFailedError":{"title":"Dexie.OpenFailedError","slug":"DexieErrors/Dexie.OpenFailedError","layout":"docs"},"Dexie.PrematureCommitError":{"title":"Dexie.PrematureCommitError","slug":"DexieErrors/Dexie.PrematureCommitError","layout":"docs"},"Dexie.QuotaExceededError":{"title":"Dexie.QuotaExceededError","slug":"DexieErrors/Dexie.QuotaExceededError","layout":"docs"},"Dexie.ReadOnlyError":{"title":"Dexie.ReadOnlyError","slug":"DexieErrors/Dexie.ReadOnlyError","layout":"docs"},"Dexie.SchemaError":{"title":"Dexie.SchemaError","slug":"DexieErrors/Dexie.SchemaError","layout":"docs"},"Dexie.SubTransactionError":{"title":"Dexie.SubTransactionError","slug":"DexieErrors/Dexie.SubTransactionError","layout":"docs"},"Dexie.TimeoutError":{"title":"Dexie.TimeoutError","slug":"DexieErrors/Dexie.TimeoutError","layout":"docs"},"Dexie.TransactionInactiveError":{"title":"Dexie.TransactionInactiveError","slug":"DexieErrors/Dexie.TransactionInactiveError","layout":"docs"},"Dexie.UnknownError":{"title":"Dexie.UnknownError","slug":"DexieErrors/Dexie.UnknownError","layout":"docs"},"Dexie.UnsupportedError":{"title":"Dexie.UnsupportedError","slug":"DexieErrors/Dexie.UnsupportedError","layout":"docs"},"Dexie.UpgradeError":{"title":"Dexie.UpgradeError()","slug":"DexieErrors/Dexie.UpgradeError","layout":"docs"},"Dexie.VersionChangeError":{"title":"Dexie.VersionChangeError","slug":"DexieErrors/Dexie.VersionChangeError","layout":"docs"},"Dexie.VersionError":{"title":"Dexie.VersionError","slug":"DexieErrors/Dexie.VersionError","layout":"docs"},"DexieError":{"title":"DexieError","slug":"DexieErrors/DexieError","layout":"docs"}},"Download":{"title":"Download","slug":"Download","layout":"docs"},"EntityTable":{"title":"EntityTable","slug":"EntityTable","layout":"docs"},"ExportImport":{"dexie-export-import":{"title":"Export and Import Database","slug":"ExportImport/dexie-export-import","layout":"docs"}},"IndexSpec":{"title":"IndexSpec","slug":"IndexSpec","layout":"docs"},"Indexable-Type":{"title":"Indexable Type","slug":"Indexable-Type","layout":"docs"},"IndexedDB-on-Safari":{"title":"IndexedDB on Safari","slug":"IndexedDB-on-Safari","layout":"docs"},"MultiEntry-Index":{"title":"MultiEntry Index","slug":"MultiEntry-Index","layout":"docs"},"Observable":{"Dexie.Observable.DatabaseChange":{"title":"Dexie.Observable.DatabaseChange","slug":"Observable/Dexie.Observable.DatabaseChange","layout":"docs"},"Dexie.Observable":{"title":"Dexie.Observable","slug":"Observable/Dexie.Observable","layout":"docs"}},"Promise":{"Promise.PSD":{"title":"Promise.PSD","slug":"Promise/Promise.PSD","layout":"docs"},"Promise.catch()":{"title":"Promise.catch()","slug":"Promise/Promise.catch()","layout":"docs"},"Promise.finally()":{"title":"Promise.finally()","slug":"Promise/Promise.finally()","layout":"docs"},"Promise":{"title":"Promise","slug":"Promise/Promise","layout":"docs"},"Promise.on.error":{"title":"Promise.on.error","slug":"Promise/Promise.on.error","layout":"docs"},"Promise.onuncatched":{"title":"Promise.onuncatched","slug":"Promise/Promise.onuncatched","layout":"docs"},"unhandledrejection-event":{"title":"unhandledrejection-event","slug":"Promise/unhandledrejection-event","layout":"docs"}},"PropModification":{"add()":{"title":"Consistent add() operator","slug":"PropModification/add()","layout":"docs"},"remove()":{"title":"Consistent remove() operator","slug":"PropModification/remove()","layout":"docs"},"replacePrefix()":{"title":"Consistent replacePrefix() operator","slug":"PropModification/replacePrefix()","layout":"docs"}},"Questions-and-Answers":{"title":"Questions and Answers","slug":"Questions-and-Answers","layout":"docs"},"Releasing-Dexie":{"title":"Releasing Dexie","slug":"Releasing-Dexie","layout":"docs"},"Samples":{"title":"Samples","slug":"Samples","layout":"docs-freestyle"},"Simplify-with-yield":{"title":"Simplify with yield","slug":"Simplify-with-yield","layout":"docs"},"StorageManager":{"title":"How To Use the StorageManager API","slug":"StorageManager","layout":"docs"},"Syncable":{"Dexie.Syncable.IDatabaseChange":{"title":"Dexie.Syncable.IDatabaseChange","slug":"Syncable/Dexie.Syncable.IDatabaseChange","layout":"docs"},"Dexie.Syncable.IPersistedContext":{"title":"Dexie.Syncable.IPersistentContext","slug":"Syncable/Dexie.Syncable.IPersistedContext","layout":"docs"},"Dexie.Syncable.ISyncProtocol":{"title":"Dexie.Syncable.ISyncProtocol","slug":"Syncable/Dexie.Syncable.ISyncProtocol","layout":"docs"},"Dexie.Syncable.StatusTexts":{"title":"Dexie.Syncable.StatusTexts","slug":"Syncable/Dexie.Syncable.StatusTexts","layout":"docs"},"Dexie.Syncable.Statuses":{"title":"Dexie.Syncable.Statuses","slug":"Syncable/Dexie.Syncable.Statuses","layout":"docs"},"Dexie.Syncable.js":{"title":"Dexie.Syncable","slug":"Syncable/Dexie.Syncable.js","layout":"docs"},"Dexie.Syncable.registerSyncProtocol()":{"title":"Dexie.Syncable.registerSyncProtocol()","slug":"Syncable/Dexie.Syncable.registerSyncProtocol()","layout":"docs"},"db.syncable.connect()":{"title":"db.syncable.connect()","slug":"Syncable/db.syncable.connect()","layout":"docs"},"db.syncable.delete()":{"title":"db.syncable.delete()","slug":"Syncable/db.syncable.delete()","layout":"docs"},"db.syncable.disconnect()":{"title":"db.syncable.disconnect()","slug":"Syncable/db.syncable.disconnect()","layout":"docs"},"db.syncable.getOptions()":{"title":"db.syncable.getOptions()","slug":"Syncable/db.syncable.getOptions()","layout":"docs"},"db.syncable.getStatus()":{"title":"db.syncable.getStatus()","slug":"Syncable/db.syncable.getStatus()","layout":"docs"},"db.syncable.list()":{"title":"db.syncable.list()","slug":"Syncable/db.syncable.list()","layout":"docs"},"db.syncable.on('statusChanged')":{"title":"db.syncable.on('statusChanged')","slug":"Syncable/db.syncable.on('statusChanged')","layout":"docs"},"db.syncable.setFilter()":{"title":"db.syncable.setFilter()","slug":"Syncable/db.syncable.setFilter()","layout":"docs"}},"Table":{"Table.add()":{"title":"Table.add()","slug":"Table/Table.add()","layout":"docs"},"Table.bulkAdd()":{"title":"Table.bulkAdd()","slug":"Table/Table.bulkAdd()","layout":"docs"},"Table.bulkDelete()":{"title":"Table.bulkDelete()","slug":"Table/Table.bulkDelete()","layout":"docs"},"Table.bulkGet()":{"title":"Table.bulkGet()","slug":"Table/Table.bulkGet()","layout":"docs"},"Table.bulkPut()":{"title":"Table.bulkPut()","slug":"Table/Table.bulkPut()","layout":"docs"},"Table.bulkUpdate()":{"title":"Table.bulkUpdate()","slug":"Table/Table.bulkUpdate()","layout":"docs"},"Table.clear()":{"title":"Table.clear()","slug":"Table/Table.clear()","layout":"docs"},"Table.count()":{"title":"Table.count()","slug":"Table/Table.count()","layout":"docs"},"Table.defineClass()":{"title":"Table.defineClass()","slug":"Table/Table.defineClass()","layout":"docs"},"Table.delete()":{"title":"Table.delete()","slug":"Table/Table.delete()","layout":"docs"},"Table.each()":{"title":"Table.each()","slug":"Table/Table.each()","layout":"docs"},"Table.filter()":{"title":"Table.filter()","slug":"Table/Table.filter()","layout":"docs"},"Table.get()":{"title":"Table.get()","slug":"Table/Table.get()","layout":"docs"},"Table.hook('creating')":{"title":"Table.hook('creating')","slug":"Table/Table.hook('creating')","layout":"docs"},"Table.hook('deleting')":{"title":"Table.hook('deleting')","slug":"Table/Table.hook('deleting')","layout":"docs"},"Table.hook('reading')":{"title":"Table.hook('reading')","slug":"Table/Table.hook('reading')","layout":"docs"},"Table.hook('updating')":{"title":"Table.hook('updating')","slug":"Table/Table.hook('updating')","layout":"docs"},"Table.limit()":{"title":"Table.limit()","slug":"Table/Table.limit()","layout":"docs"},"Table.mapToClass()":{"title":"Table.mapToClass()","slug":"Table/Table.mapToClass()","layout":"docs"},"Table":{"title":"Table","slug":"Table/Table","layout":"docs"},"Table.name":{"title":"Table.name","slug":"Table/Table.name","layout":"docs"},"Table.offset()":{"title":"Table.offset()","slug":"Table/Table.offset()","layout":"docs"},"Table.orderBy()":{"title":"Table.orderBy()","slug":"Table/Table.orderBy()","layout":"docs"},"Table.put()":{"title":"Table.put()","slug":"Table/Table.put()","layout":"docs"},"Table.reverse()":{"title":"Table.reverse()","slug":"Table/Table.reverse()","layout":"docs"},"Table.schema":{"title":"Table.schema","slug":"Table/Table.schema","layout":"docs"},"Table.toArray()":{"title":"Table.toArray()","slug":"Table/Table.toArray()","layout":"docs"},"Table.toCollection()":{"title":"Table.toCollection()","slug":"Table/Table.toCollection()","layout":"docs"},"Table.update()":{"title":"Table.update()","slug":"Table/Table.update()","layout":"docs"},"Table.upsert()":{"title":"Table.upsert()","slug":"Table/Table.upsert()","layout":"docs"},"Table.where()":{"title":"Table.where()","slug":"Table/Table.where()","layout":"docs"}},"TableSchema":{"title":"Table Schema","slug":"TableSchema","layout":"docs"},"The-Main-Limitations-of-IndexedDB":{"title":"The main limitations of IndexedDB","slug":"The-Main-Limitations-of-IndexedDB","layout":"docs"},"The-Three-Main-Limitations-of-IndexedDB":{"title":"The three main limitations of IndexedDB","slug":"The-Three-Main-Limitations-of-IndexedDB","layout":"redirect"},"Transaction":{"Transaction.abort()":{"title":"Transaction.abort()","slug":"Transaction/Transaction.abort()","layout":"docs"},"Transaction":{"title":"Transaction","slug":"Transaction/Transaction","layout":"docs"},"Transaction.on.abort":{"title":"Transaction.on.abort","slug":"Transaction/Transaction.on.abort","layout":"docs"},"Transaction.on.complete":{"title":"Transaction.on.complete","slug":"Transaction/Transaction.on.complete","layout":"docs"},"Transaction.on.error":{"title":"Transaction.on.error","slug":"Transaction/Transaction.on.error","layout":"docs"},"Transaction.table()":{"title":"Transaction.table()","slug":"Transaction/Transaction.table()","layout":"docs"}},"Tutorial":{"Angular":{"title":"Get started with Dexie in Angular","slug":"Tutorial/Angular","layout":"docs"},"Best-Practices":{"title":"Best Practices","slug":"Tutorial/Best-Practices","layout":"docs"},"Building-Addons":{"title":"Building Addons","slug":"Tutorial/Building-Addons","layout":"docs"},"Consuming-dexie-as-a-module":{"title":"Consuming Dexie as a module","slug":"Tutorial/Consuming-dexie-as-a-module","layout":"docs"},"Design":{"title":"Design","slug":"Tutorial/Design","layout":"docs"},"Dexie-Cloud":{"title":"Get started with Dexie Cloud","slug":"Tutorial/Dexie-Cloud","layout":"docs-dexie-cloud"},"Getting-started":{"title":"Getting Started with Dexie.js","slug":"Tutorial/Getting-started","layout":"docs-freestyle"},"Hello-World":{"title":"Hello World","slug":"Tutorial/Hello-World","layout":"docs"},"Migrating-existing-DB-to-Dexie":{"title":"Migrating existing DB to Dexie","slug":"Tutorial/Migrating-existing-DB-to-Dexie","layout":"docs"},"React":{"title":"Get started with Dexie in React","slug":"Tutorial/React","layout":"docs"},"Svelte":{"title":"Get started with Dexie in Svelte","slug":"Tutorial/Svelte","layout":"docs"},"Understanding-the-basics":{"title":"Understanding the basics","slug":"Tutorial/Understanding-the-basics","layout":"docs"},"Vue":{"title":"Get started with Dexie in Vue","slug":"Tutorial/Vue","layout":"docs"},"index":{"title":"Tutorial","slug":"Tutorial/index","layout":"docs"}},"Typescript-old":{"title":"Typescript (old)","slug":"Typescript-old","layout":"docs"},"Typescript":{"title":"Typescript","slug":"Typescript","layout":"docs"},"Version":{"Version":{"title":"Version","slug":"Version/Version","layout":"docs"},"Version.stores()":{"title":"Version.stores()","slug":"Version/Version.stores()","layout":"docs"},"Version.upgrade()":{"title":"Version.upgrade()","slug":"Version/Version.upgrade()","layout":"docs"}},"WhereClause":{"WhereClause.above()":{"title":"WhereClause.above()","slug":"WhereClause/WhereClause.above()","layout":"docs"},"WhereClause.aboveOrEqual()":{"title":"WhereClause.aboveOrEqual()","slug":"WhereClause/WhereClause.aboveOrEqual()","layout":"docs"},"WhereClause.anyOf()":{"title":"WhereClause.anyOf()","slug":"WhereClause/WhereClause.anyOf()","layout":"docs"},"WhereClause.anyOfIgnoreCase()":{"title":"WhereClause.anyOfIgnoreCase()","slug":"WhereClause/WhereClause.anyOfIgnoreCase()","layout":"docs"},"WhereClause.below()":{"title":"WhereClause.below()","slug":"WhereClause/WhereClause.below()","layout":"docs"},"WhereClause.belowOrEqual()":{"title":"WhereClause.belowOrEqual()","slug":"WhereClause/WhereClause.belowOrEqual()","layout":"docs"},"WhereClause.between()":{"title":"WhereClause.between()","slug":"WhereClause/WhereClause.between()","layout":"docs"},"WhereClause.equals()":{"title":"WhereClause.equals()","slug":"WhereClause/WhereClause.equals()","layout":"docs"},"WhereClause.equalsIgnoreCase()":{"title":"WhereClause.equalsIgnoreCase()","slug":"WhereClause/WhereClause.equalsIgnoreCase()","layout":"docs"},"WhereClause.inAnyRange()":{"title":"WhereClause.inAnyRange()","slug":"WhereClause/WhereClause.inAnyRange()","layout":"docs"},"WhereClause":{"title":"WhereClause","slug":"WhereClause/WhereClause","layout":"docs"},"WhereClause.noneOf()":{"title":"WhereClause.noneOf()","slug":"WhereClause/WhereClause.noneOf()","layout":"docs"},"WhereClause.notEqual()":{"title":"WhereClause.notEqual()","slug":"WhereClause/WhereClause.notEqual()","layout":"docs"},"WhereClause.startsWith()":{"title":"WhereClause.startsWith()","slug":"WhereClause/WhereClause.startsWith()","layout":"docs"},"WhereClause.startsWithAnyOf()":{"title":"WhereClause.startsWithAnyOf()","slug":"WhereClause/WhereClause.startsWithAnyOf()","layout":"docs"},"WhereClause.startsWithAnyOfIgnoreCase()":{"title":"WhereClause.startsWithAnyOfIgnoreCase()","slug":"WhereClause/WhereClause.startsWithAnyOfIgnoreCase()","layout":"docs"},"WhereClause.startsWithIgnoreCase()":{"title":"WhereClause.startsWithIgnoreCase()","slug":"WhereClause/WhereClause.startsWithIgnoreCase()","layout":"docs"}},"Y.js":{"Y.js":{"title":"Y.js","slug":"Y.js/Y.js","layout":"docs"},"y-dexie":{"title":"y-dexie","slug":"Y.js/y-dexie","layout":"docs"}},"dexie-react-hooks":{"useDocument()":{"title":"useDocument()","slug":"dexie-react-hooks/useDocument()","layout":"docs"},"useLiveQuery()":{"title":"useLiveQuery()","slug":"dexie-react-hooks/useLiveQuery()","layout":"docs"},"useObservable()":{"title":"useObservable()","slug":"dexie-react-hooks/useObservable()","layout":"docs"},"usePermissions()":{"title":"usePermissions()","slug":"dexie-react-hooks/usePermissions()","layout":"docs"}},"inbound":{"title":"Inbound","slug":"inbound","layout":"docs"},"index":{"title":"Docs Home","slug":"index","layout":"docs"},"libs":{"dexie-react-hooks":{"title":"dexie-react-hooks","slug":"libs/dexie-react-hooks","layout":"docs"}},"liveQuery()":{"title":"liveQuery()","slug":"liveQuery()","layout":"docs"},"safari-issues":{"title":"safari-issues","slug":"safari-issues","layout":"$undefined"}},"currentSlug":"Tutorial/Design","pageTitle":"Design","children":"$L1e"}]
1f:I[19646,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
20:I[26863,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
21:I[63876,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
22:T9f3,<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">'dexie'</span><span class="token punctuation">;</span>

<span class="token comment">// Create your instance</span>
<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">"MyDatabase"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">// Define your schema</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">myObjectStore1</span><span class="token operator">:</span> <span class="token string">"primaryKey, index1, index2, ..."</span><span class="token punctuation">,</span>
    <span class="token literal-property property">myObjectStore2</span><span class="token operator">:</span> <span class="token string">"primaryKey, index1, index2, ..."</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Open the database</span>
db<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Open failed: "</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
1e:["$","$L1f",null,{"component":"article","children":[["$","$L1f",null,{"component":"header","sx":{"mb":5},"children":["$","$L20",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"Design"}]}],["$","$L1f",null,{"className":"docs-content","children":["$","$L1f",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L20","mdx-1",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"The Dexie class"}],"\n",["$","$L20","mdx-2",{"variant":"body1","component":"div","paragraph":true,"children":"Dexie is both a class and a namespace. An instance of Dexie will represent a database connection. As namespace, it is used as an export area for functions, utilities, and classes. In a simple HTML browser environment this means that including \"Dexie.js\" will only add one property to window: window.Dexie. If you are utilizing a module environment like commonjs or ES modules, Dexie will be the default export that you get when requiring it. Here's an example how to use Dexie once you've included it:"}],"\n",["$","$1","4",{"children":["$","$L1f","mdx-3",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"import Dexie from 'dexie';\n\n// Create your instance\nvar db = new Dexie(\"MyDatabase\"); \n\n// Define your schema\ndb.version(1).stores({\n    myObjectStore1: \"primaryKey, index1, index2, ...\",\n    myObjectStore2: \"primaryKey, index1, index2, ...\",\n    ...\n});\n\n// Open the database\ndb.open().catch(function (e) {\n    console.error(\"Open failed: \" + e);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$22"}}]}]]}]}]}],"\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n","$L54","\n","$L55","\n","$L56","\n","$L57","\n","$L58","\n","$L59","\n","$L5a","\n","$L5b","\n","$L5c","\n","$L5d","\n","$L5e","\n","$L5f","\n","$L60","\n","$L61","\n","$L62","\n","$L63","\n","$L64","\n","$L65","\n","$L66","\n","$L67","\n","$L68","\n","$L69","\n","$L6a","\n","$L6b","\n","$L6c","\n","$L6d","\n","$L6e","\n","$L6f","\n","$L70","\n","$L71","\n","$L72","\n","$L73","\n","$L74","\n","$L75","\n"]}]}],"$L76"]}]
77:I[72729,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
79:I[32412,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
7a:I[65801,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
23:["$","$L20","mdx-5",{"variant":"body1","component":"div","paragraph":true,"children":["Dexie, as its backend indexedDB implementation, is an asynchronous database, meaning that any operation that requires a result won't be returned directly. Instead all such operations will return a ",["$","$L77","mdx-4",{"href":"http://www.html5rocks.com/en/tutorials/es6/promises/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Promise"}],"."]}]
24:["$","$L20","mdx-6",{"variant":"body1","component":"div","paragraph":true,"children":"Dexie also supports queuing operations, meaning you can start using the database directly after having defined it. In case open() hasn't been called, it will open it automatically and enqueue the operation to execute as soon as the database is finished opening. If open fails, queued operations will immediately fail with the error event from the open request."}]
25:["$","$L20","mdx-7",{"variant":"body1","component":"div","paragraph":true,"children":"Notice also that you don't need to care for whether the database has been created or not. It all be created automatically first time use. You always define your schema and let the runtime decide whether to use that definition for creating the database or just for populating the table properties onto your db instance."}]
26:["$","$L20","mdx-8",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"The Table Class"}]
27:["$","$L20","mdx-11",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L77","mdx-9",{"href":"/docs/Table/Table","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table"}]," represents an object store. On your Dexie instance you will have direct access to instances of Table for each object store you have ",["$","$L77","mdx-10",{"href":"/docs/Version/Version.stores()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"defined in your schema"}],"."]}]
78:Tb2c,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">"FriendsAndPetsDB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">"++id,name,isCloseFriend"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pets</span><span class="token operator">:</span> <span class="token string">"++id,name,kind"</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Ingemar Bergman"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Josephina"</span><span class="token punctuation">,</span> <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token string">"dog"</span><span class="token punctuation">,</span> <span class="token literal-property property">fur</span><span class="token operator">:</span> <span class="token string">"too long right now"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
28:["$","$1","16",{"children":["$","$L1f","mdx-12",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"var db = new Dexie(\"FriendsAndPetsDB\");\n\ndb.version(1).stores({\n    friends: \"++id,name,isCloseFriend\",\n    pets: \"++id,name,kind\"\n});\ndb.open();\ndb.friends.add({name: \"Ingemar Bergman\", isCloseFriend: 0});\ndb.pets.add({name: \"Josephina\", kind: \"dog\", fur: \"too long right now\"});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$78"}}]}]]}]}]}]
29:["$","$L20","mdx-17",{"variant":"body1","component":"div","paragraph":true,"children":[["$","em","mdx-13",{"children":["Note: ",["$","$L1f","mdx-14",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"++id"}]," (or ",["$","$L1f","mdx-15",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"id++"}],") on the primary key means that it will be auto-incremented"]}],"\n",["$","em","mdx-16",{"children":"Note2: You only need to specify properties that you wish to index. The object store will allow any properties on your stored objects but you can only query them by indexed properties"}]]}]
2a:["$","$L20","mdx-21",{"variant":"body1","component":"div","paragraph":true,"children":["As you can see, ",["$","$L1f","mdx-18",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"db.friends"}]," and ",["$","$L1f","mdx-19",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"db.pets"}]," are instances of ",["$","$L77","mdx-20",{"href":"/docs/Table/Table","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table"}]," that you can operate on directly."]}]
2b:["$","$L20","mdx-23",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L77","mdx-22",{"href":"/docs/Table/Table","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table"}]," is the entry point for doing all operations to your object stores, such as querying, adding, putting, deleting, clearing and modifying your data."]}]
2c:["$","$L20","mdx-24",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Transactions"}]
2d:["$","$L20","mdx-27",{"variant":"body1","component":"div","paragraph":true,"children":["Whenever you are going to do more than a single operation on your database in a sequence, you would normally use a transaction. ",["$","$L77","mdx-25",{"href":"/docs/Transaction/Transaction","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Transaction"}]," represents a full ",["$","$L77","mdx-26",{"href":"http://en.wikipedia.org/wiki/ACID","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"ACID"}]," transaction. When working with transactions you get the following benefits:"]}]
2e:["$","$L79","mdx-33",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-28",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"If modifying a database and an error occurs, every modification will be rolled back."}],"\n",["$","$L7a","mdx-29",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"You may do all write operations synchronously without the need to wait for it to finish before starting the next one."}],"\n",["$","$L7a","mdx-31",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["You may catch any error event or exception of any kind in one single catch() method of the transaction, making sure no exception what so ever will make your app just stall. Even \"runtime\" exceptions like the use of a misspelled variable will be caught even if it happens in the ",["$","em","mdx-30",{"children":"callback of a callback"}]," of your transaction callback..."]}],"\n",["$","$L7a","mdx-32",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Remember that a browser can close down at any moment. Think about what would happen if the user closes the browser somewhere between your operations. Would that lead to an invalid state? If so, use a transaction - that will make its operations abort if browser is closed between operations."}],"\n"]}]
2f:["$","$L20","mdx-34",{"variant":"body1","component":"div","paragraph":true,"children":"Here is how you enter a transaction block:"}]
7b:T598,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">"rw"</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Any database error event that occur will abort transaction and be sent to</span>
    <span class="token comment">// the catch() method below.</span>
    <span class="token comment">// The exact same rule if any exception is thrown whatsoever.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Log or display the error</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
30:["$","$1","32",{"children":["$","$L1f","mdx-35",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.transaction(\"rw\", db.friends, db.pets, function() {\n    // Any database error event that occur will abort transaction and be sent to\n    // the catch() method below.\n    // The exact same rule if any exception is thrown whatsoever.\n}).catch(function (error) {\n    // Log or display the error\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$7b"}}]}]]}]}]}]
31:["$","$L20","mdx-36",{"variant":"body1","component":"div","paragraph":true,"children":"Notes:"}]
32:["$","$L79","mdx-46",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-38",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["'friends' and 'pets' are objectStores registered using the ",["$","$L77","mdx-37",{"href":"/docs/Dexie/Dexie.version()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"version()"}]," method."]}],"\n",["$","$L7a","mdx-41",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Replace ",["$","$L1f","mdx-39",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"rw\""}]," with ",["$","$L1f","mdx-40",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"r\""}]," if you are just going to read from the stores."]}],"\n",["$","$L7a","mdx-42",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Also errors occurring in nested callbacks in the block will be caught by the catch() method."}],"\n",["$","$L7a","mdx-45",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["It is also possible to prohibit the transaction from being aborted by ",["$","$L77","mdx-43",{"href":"/docs/Promise/Promise.catch","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"catching"}]," specific errors. (See ",["$","$L77","mdx-44",{"href":"/docs/Dexie/Dexie.transaction()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.transaction()"}]," )."]}],"\n"]}]
33:["$","$L20","mdx-47",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Transaction Lifetime"}]
34:["$","$L20","mdx-50",{"variant":"body1","component":"div","paragraph":true,"children":["A transaction is auto-committed once you do not do anything with it. So, if you do ",["$","$L1f","mdx-48",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"setTimeout(cb, 0)"}]," anywhere, don't expect your transaction to live when the callback comes back! The only way of keeping a transaction alive between ticks is to perform a database operation on it. Then it will live until that operation fails (catch()) or succeeds (then()). You can then do another operation to keep it alive some more time, etc. There might be situations where you would interact with other async APIs within a transaction (WebCrypto, fetch, $.ajax, etc). In that situation, it is often better to think twice if you should keep the transaction ongoing through the other async call. If you however decide that you need this, there's a new method in Dexie v2: Dexie.waitFor() that may keep the current transaction\nalive until given Promise is fulfilled. See ",["$","$L77","mdx-49",{"href":"/docs/Dexie/Dexie.waitFor()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.waitFor()"}],"."]}]
35:["$","$L20","mdx-51",{"variant":"body1","component":"div","paragraph":true,"children":"There is no commit() method on transactions, because it is not needed since it will auto-commit if no errors occur. You can abort() it however."}]
36:["$","$L20","mdx-52",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Database Versioning"}]
37:["$","$L20","mdx-53",{"variant":"body1","component":"div","paragraph":true,"children":"Thanks to the backend architecture of indexedDB, database versioning is essential when working with indexedDB. With Dexie, you get an even easier upgrading framework built upon the indexedDB framework."}]
38:["$","$L20","mdx-54",{"variant":"body1","component":"div","paragraph":true,"children":"Lets say you initially have the following database schema:"}]
39:["$","$1","50",{"children":["$","$L1f","mdx-55",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"var db = new Dexie(\"FriendsDB\");\ndb.version(1).stores({friends: \"++id,name\"});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dexie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FriendsDB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stores</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">friends</span><span class=\"token operator\">:</span> <span class=\"token string\">\"++id,name\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
3a:["$","$L20","mdx-58",{"variant":"body1","component":"div","paragraph":true,"children":["This schema only specifies a primary key \"id\" that is auto-incremented, and an index on the property \"name\". Your app may store other properties as well, such as ",["$","$L1f","mdx-56",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"phone"}],", ",["$","$L1f","mdx-57",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"email"}]," etc but it will not be indexed:"]}]
7c:T402,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Arnold"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">"123456"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">"arnold@abc.com"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shoeSize</span><span class="token operator">:</span> <span class="token number">88</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
3b:["$","$1","54",{"children":["$","$L1f","mdx-59",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.put({\n    name: \"Arnold\",\n    phone: \"123456\",\n    email: \"arnold@abc.com\",\n    shoeSize: 88\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$7c"}}]}]]}]}]}]
3c:["$","$L20","mdx-60",{"variant":"body1","component":"div","paragraph":true,"children":"Let's say that you publish your app and people start using it. After a while, your user requests a new feature - to be able to search for friends with a certain shoeSize. But you have not indexed shoeSize in your schema, so how do you add that index to the next version of your app? Here's how:"}]
3d:["$","$L20","mdx-61",{"variant":"body1","component":"div","paragraph":true,"children":"In Dexie >= 3.0:"}]
3e:["$","$L79","mdx-64",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-63",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Just increase the version number and add shoeSize along the indexes:\n",["$","$1","1",{"children":["$","$L1f","mdx-62",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.version(2).stores({friends: \"++id,name,shoeSize\"});\n"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"db<span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stores</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">friends</span><span class=\"token operator\">:</span> <span class=\"token string\">\"++id,name,shoeSize\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}],"\n"]}],"\n"]}]
3f:["$","$L20","mdx-65",{"variant":"body1","component":"div","paragraph":true,"children":"In Dexie < 3.0:"}]
40:["$","$L79","mdx-71",{"component":"ol","sx":{"mb":3,"pl":4,"listStyleType":"decimal","& .MuiListItem-root":{"display":"list-item","pl":1}},"children":["\n",["$","$L7a","mdx-68",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Keep the line ",["$","$L1f","mdx-66",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"db.version(1).stores({friends: \"++id,name\"});"}]," - ",["$","strong","mdx-67",{"children":"Never touch it as long as there are users out there with that version running!"}]]}],"\n",["$","$L7a","mdx-70",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Instead, add a new line to your code: ",["$","$L1f","mdx-69",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"db.version(2).stores({friends: \"++id,name,shoeSize\"});"}],"."]}],"\n"]}]
41:["$","$L20","mdx-72",{"variant":"body1","component":"div","paragraph":true,"children":"Voila, that's it. Your code can now do stuff like db.friends.where('shoeSize').between(37,39), which would fail in version 1."}]
42:["$","$L20","mdx-77",{"variant":"body1","component":"div","paragraph":true,"children":["OK, that's nice. But what if you'd need to change the ",["$","strong","mdx-73",{"children":"data architecture"}],"? Let's say you want to split ",["$","$L1f","mdx-74",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"name"}]," into ",["$","$L1f","mdx-75",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"firstName"}]," and ",["$","$L1f","mdx-76",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"lastName"}]," and index those separate. Here's how you do it. (This time I present the entire code containing all versions, so you can see it in it's whole):"]}]
7d:T124c,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">"FriendsDB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">"++id,name"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">"++id,name,shoeSize"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token string">"++id,shoeSize,firstName,lastName"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">upgrade</span><span class="token punctuation">(</span><span class="token parameter">tx</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// An upgrade function for version 3 will upgrade data based on version 2.</span>
    <span class="token keyword">return</span> tx<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">"friends"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token parameter">friend</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token comment">// Modify each friend:</span>
        friend<span class="token punctuation">.</span>firstName <span class="token operator">=</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        friend<span class="token punctuation">.</span>lastName <span class="token operator">=</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">delete</span> friend<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
43:["$","$1","70",{"children":["$","$L1f","mdx-78",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"var db = new Dexie(\"FriendsDB\");\ndb.version(1).stores({friends: \"++id,name\"});\ndb.version(2).stores({friends: \"++id,name,shoeSize\"});\ndb.version(3).stores({friends: \"++id,shoeSize,firstName,lastName\"}).upgrade(tx => {\n    // An upgrade function for version 3 will upgrade data based on version 2.\n    return tx.table(\"friends\").toCollection().modify(friend => {\n        // Modify each friend:\n        friend.firstName = friend.name.split(' ')[0];\n        friend.lastName = friend.name.split(' ')[1];\n        delete friend.name;\n    });\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$7d"}}]}]]}]}]}]
44:["$","$L20","mdx-79",{"variant":"body1","component":"div","paragraph":true,"children":"That's it. Your data will automatically upgrade for existing users. A version with an upgrader attached must never be altered. Further changes to the schema should be done by adding a new version declaration before or after the existing one (order doesn't matter). This holds true for both Dexie 3.0 and older versions."}]
45:["$","$L20","mdx-80",{"variant":"body1","component":"div","paragraph":true,"children":"So what are the rules to be aware of?"}]
46:["$","$L79","mdx-89",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-81",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Dexie <3: Keep old versions as long as there are code out there with them installed."}],"\n",["$","$L7a","mdx-82",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Dexie >=3: You only need to keep versions that have an upgrader as long as there are code out there that use a version lower than the upgrader-attached version."}],"\n",["$","$L7a","mdx-85",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Create/drop/alter indexes or tables by adding a new ",["$","$L1f","mdx-83",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"version(x)"}]," with an updated ",["$","$L1f","mdx-84",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"stores({...})"}]," spec. If you are on Dexie >=3 you can just increase the version number of existing declaration and modify the tables and indexes of it."]}],"\n",["$","$L7a","mdx-87",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Tables are not deleted unless you specify ",["$","$L1f","mdx-86",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"null"}]," as the stores-specification for that table in a new version."]}],"\n",["$","$L7a","mdx-88",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"New versions need only to specify changed tables."}],"\n"]}]
47:["$","$L20","mdx-90",{"variant":"body1","component":"div","paragraph":true,"children":"Important to notice is that in case you got 50 tables and just need to add an index on one of them, you don't need to repeat all tables again in the new version-spec. Just specify an updated version of the table you need to alter. Indexes work differently though - they are dropped as soon as you don't specify them in a new versions."}]
7e:Tbf5,db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">foo1</span><span class="token operator">:</span> <span class="token string">'id,x,y,z'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">foo2</span><span class="token operator">:</span> <span class="token string">'id,x,y,z'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">foo3</span><span class="token operator">:</span> <span class="token string">'id,x,y,z'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Delete index 'y' on 'foo1':</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">foo1</span><span class="token operator">:</span> <span class="token string">'id,x,z'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Add index 'x2' on 'foo2':</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">foo2</span><span class="token operator">:</span> <span class="token string">'id, x, x2, y, z'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Drop table 'foo3':</span>
db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">foo3</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
48:["$","$1","80",{"children":["$","$L1f","mdx-91",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.version(1).stores({\n    foo1: 'id,x,y,z',\n    foo2: 'id,x,y,z',\n    foo3: 'id,x,y,z'\n});\n// Delete index 'y' on 'foo1':\ndb.version(2).stores({\n    foo1: 'id,x,z'\n});\n// Add index 'x2' on 'foo2':\ndb.version(3).stores({\n    foo2: 'id, x, x2, y, z'\n});\n// Drop table 'foo3':\ndb.version(4).stores({foo3: null});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$7e"}}]}]]}]}]}]
49:["$","$L20","mdx-92",{"variant":"body1","component":"div","paragraph":true,"children":"The order of provided versions is not crucial. You may begin with the last version if you like. Dexie will sort the versions before opening the db and regard the max version provided as the target version."}]
4a:["$","$L20","mdx-93",{"variant":"body1","component":"div","paragraph":true,"children":"Description of the open / upgrade sequence:"}]
4b:["$","$L79","mdx-99",{"component":"ol","sx":{"mb":3,"pl":4,"listStyleType":"decimal","& .MuiListItem-root":{"display":"list-item","pl":1}},"children":["\n",["$","$L7a","mdx-94",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"User code calls db.open();"}],"\n",["$","$L7a","mdx-96",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["If database is not present, or an earlier version was present, indexedDB's ",["$","$L1f","mdx-95",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"onupgradeneeded"}]," event is fired and taken care of by Dexie."]}],"\n",["$","$L7a","mdx-97",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Dexie inspects what version is currently used. If no database present, Dexie initializes the last version directly by parsing the stores schema syntax and adding stores and indexes accordingly. No upgrade() functions run in this case."}],"\n",["$","$L7a","mdx-98",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"If a previous version is installed, Dexie will filter out the diff between each version and add/remove stores and indexes sequentially. So also with any registered upgrader function. A new feature in Dexie 3 is that it relies on the installed schema rather than the declared, so the diff will be computed between the actual installed schema and the next version rather than the declared schema of the current version and next version. This means two things: First of all that if the declaration of current schema is not in sync with the actual, it does not matter. Second, that Dexie can open a new version from on a device with an old version installed also when the old version is not present in the declaration."}],"\n"]}]
4c:["$","$L20","mdx-100",{"variant":"body1","component":"div","paragraph":true,"children":"Error handling: If any error occur in any upgrade function in the sequence, the upgrade transaction will roll back and db.open() will fail. This means that data will under no circumstances be left half-upgraded."}]
4d:["$","$L20","mdx-101",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Change Tracking"}]
4e:["$","$L20","mdx-102",{"variant":"body1","component":"div","paragraph":true,"children":"With Dexie it's possible to control and monitor each database change. No matter which method is being used for data manipulation, Dexie may tell whether a CREATE, UPDATE or DELETE is about to happen and offer the hook callbacks to manipulate the change if requested. It is also possible to hook into READ operations; to provide a proxy function that will be called whenever an object has been read from database and is about to be delivered to caller."}]
4f:["$","$L20","mdx-107",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":["The CRUD Hooks (",["$","$L77","mdx-103",{"href":"/docs/Table/Table.hook('creating')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"CREATE"}],", ",["$","$L77","mdx-104",{"href":"/docs/Table/Table.hook('reading')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"READ"}],", ",["$","$L77","mdx-105",{"href":"/docs/Table/Table.hook('updating')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"UPDATE"}],", ",["$","$L77","mdx-106",{"href":"/docs/Table/Table.hook('deleting')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"DELETE"}],")"]}]
50:["$","$L20","mdx-108",{"variant":"body1","component":"div","paragraph":true,"children":"CRUD hooks enable application code or addons to get involved in any of the CRUD operations taking place underhood. Whenever a database is about to be read from or modified, they allow hook implementation to modify what will happen, or just react on the event."}]
51:["$","$L20","mdx-109",{"variant":"body1","component":"div","paragraph":true,"children":"The CRUD hooks could be quite powerful. It is possible to write Dexie addons that perform synchronization, observation, custom advanced indexes, foreignKey implementations, views etc."}]
52:["$","$L20","mdx-110",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"Hooks Documentation"}]
53:["$","$L79","mdx-119",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-112",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-111",{"href":"/docs/Table/Table.hook('creating')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"hook('creating')"}]}],"\n",["$","$L7a","mdx-114",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-113",{"href":"/docs/Table/Table.hook('reading')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"hook('reading')"}]}],"\n",["$","$L7a","mdx-116",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-115",{"href":"/docs/Table/Table.hook('updating')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"hook('updating')"}]}],"\n",["$","$L7a","mdx-118",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-117",{"href":"/docs/Table/Table.hook('deleting')","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"hook('deleting')"}]}],"\n"]}]
54:["$","$L20","mdx-121",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":["The ",["$","$L77","mdx-120",{"href":"/docs/Dexie/Dexie.on.populate","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"populate"}]," Event"]}]
55:["$","$L20","mdx-122",{"variant":"body1","component":"div","paragraph":true,"children":"In case your database needs initial data in order to work - data that must only be populated on database creation and never more, you can subscribe to the populate event. This will only be called in case the database is initially created - not when it is upgraded."}]
7f:T13ad,<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">"MyTicketDB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">tickets</span><span class="token operator">:</span> <span class="token string">"++id,headline,description,statusId"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">statuses</span><span class="token operator">:</span> <span class="token string">"++id,name,openess"</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"populate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Init your DB with some default statuses:</span>
    db<span class="token punctuation">.</span>statuses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"opened"</span><span class="token punctuation">,</span> <span class="token literal-property property">openess</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span>statuses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"closed"</span><span class="token punctuation">,</span> <span class="token literal-property property">openess</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span>statuses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"resolved"</span><span class="token punctuation">,</span> <span class="token literal-property property">openess</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span>statuses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"wontfix"</span><span class="token punctuation">,</span> <span class="token literal-property property">openess</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
56:["$","$1","108",{"children":["$","$L1f","mdx-123",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"var db = new Dexie(\"MyTicketDB\");\n\ndb.version(1).stores({\n    tickets: \"++id,headline,description,statusId\",\n    statuses: \"++id,name,openess\"\n});\n\ndb.on(\"populate\", function() {\n    // Init your DB with some default statuses:\n    db.statuses.add({id: 1, name: \"opened\", openess: true});\n    db.statuses.add({id: 2, name: \"closed\", openess: false});\n    db.statuses.add({id: 3, name: \"resolved\", openess: false});\n    db.statuses.add({id: 4, name: \"wontfix\", openess: false});\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$7f"}}]}]]}]}]}]
57:["$","$L20","mdx-125",{"variant":"body1","component":"div","paragraph":true,"children":["Here's also an example of how to populate data from an ajax call: ",["$","$L77","mdx-124",{"href":"/docs/Dexie/Dexie.on.populate#ajax-populate-sample","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Ajax Populate Sample"}]]}]
58:["$","$L20","mdx-126",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Promises"}]
59:["$","$L20","mdx-132",{"variant":"body1","component":"div","paragraph":true,"children":["Dexie comes with its own implementation of ",["$","$L77","mdx-127",{"href":"/docs/Promise/Promise","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Promise"}]," based on ",["$","$L77","mdx-128",{"href":"https://github.com/taylorhakes/promise-light","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"promise-light"}]," by ",["$","$L77","mdx-129",{"href":"https://github.com/taylorhakes","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Taylor Hakes"}]," that is Promise/A+ and ECMAScript 6 compliant. A Promise has a then() method which is called when operation completes or fails. The first argument to the then() method is the ",["$","$L1f","mdx-130",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"complete"}]," callback and the second is the ",["$","$L1f","mdx-131",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"fail"}]," callback. In ECMAScript 6, a catch() method is added as a shortcut for then(null, fn) - catching failures - this makes it possible to utilize then() as a success-method only and catch() as an error method only, making your code more readable. Dexie's implementation of Promise also has a finally() method that is called whether or not the operation fails or completes. All asynchronous methods in Dexie returns a Promise instance and this makes the API way more easy to use and makes error handling more robust."]}]
5a:["$","$L20","mdx-133",{"variant":"body1","component":"div","paragraph":true,"children":"How to use Promise line by line:"}]
80:T85f,<span class="token keyword">var</span> arrayPromise <span class="token operator">=</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWithIgnoreCase</span><span class="token punctuation">(</span><span class="token string">'arnold'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arrayPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arrayPromise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
5b:["$","$1","118",{"children":["$","$L1f","mdx-134",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"var arrayPromise = db.friends.where('name').startsWithIgnoreCase('arnold').toArray();\narrayPromise.then(function(a) { console.log(a.length); });\narrayPromise.catch(function(err) { console.error(err); });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$80"}}]}]]}]}]}]
5c:["$","$L20","mdx-135",{"variant":"body1","component":"div","paragraph":true,"children":"But Dexie gives you a little shortcut in all methods returning a promise with a value, so the above code will be equal to:"}]
81:T703,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWithIgnoreCase</span><span class="token punctuation">(</span><span class="token string">'arnold'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
5d:["$","$1","122",{"children":["$","$L1f","mdx-136",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.where('name').startsWithIgnoreCase('arnold').toArray(function(a) {\n    console.log(a.length);\n}).catch(function(err) {\n    console.error(err);\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$81"}}]}]]}]}]}]
5e:["$","$L20","mdx-139",{"variant":"body1","component":"div","paragraph":true,"children":["_Note: Promises are returned from all methods in Dexie that perform asynchronous work. Also, most methods that has a value result, such as ",["$","$L1f","mdx-137",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"toArray()"}],", also provide a shortcut for ",["$","$L1f","mdx-138",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"then()"}]," - you can pass in your callback directly to the method instead of calling then():\n_"]}]
5f:["$","$1","126",{"children":["$","$L1f","mdx-140",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.toArray().then (function (result) {});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
60:["$","$L20","mdx-141",{"variant":"body1","component":"div","paragraph":true,"children":"is equivalent to:"}]
61:["$","$1","130",{"children":["$","$L1f","mdx-142",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.toArray(function (result) {});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"db<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
62:["$","$L20","mdx-143",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Catching Certain Exception Classes"}]
63:["$","$L20","mdx-144",{"variant":"body1","component":"div","paragraph":true,"children":"With Dexie's implementation of Promise.catch() enables you to catch certain exception classes as you would do on java or C#:"}]
82:Tfea,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWithIgnoreCase</span><span class="token punctuation">(</span><span class="token string">'arnold'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>DOMError<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"DOMError occurred: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>TypeError<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"TypeError occurred: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Unknown error occurred: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Finally the query succeeded or failed."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
64:["$","$1","136",{"children":["$","$L1f","mdx-145",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.where('name').startsWithIgnoreCase('arnold').toArray(function(a) {\n    console.log(a.length);\n}).catch(DOMError, function(e) {\n    console.error(\"DOMError occurred: \" + err);\n}).catch(TypeError, function(e) {\n    console.error(\"TypeError occurred: \" + err);\n}).catch(function(err) {\n    console.error(\"Unknown error occurred: \" + err);\n}).finally(function(){\n    console.log(\"Finally the query succeeded or failed.\");\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$82"}}]}]]}]}]}]
65:["$","h5","mdx-146",{"children":"More about Promises"}]
66:["$","$L79","mdx-153",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-148",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-147",{"href":"http://www.html5rocks.com/en/tutorials/es6/promises/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"http://www.html5rocks.com/en/tutorials/es6/promises/"}]}],"\n",["$","$L7a","mdx-150",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-149",{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"\n",["$","$L7a","mdx-152",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L77","mdx-151",{"href":"http://promises-aplus.github.io/promises-spec/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"http://promises-aplus.github.io/promises-spec/"}]}],"\n"]}]
67:["$","$L20","mdx-154",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"WhereClause"}]
68:["$","$L20","mdx-156",{"variant":"body1","component":"div","paragraph":true,"children":["You can retrieve objects from your ",["$","$L77","mdx-155",{"href":"/docs/Table/Table","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table"}]," instances using two methods:"]}]
69:["$","$L79","mdx-161",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-158",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","$L77","mdx-157",{"href":"/docs/Table/Table.get()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.get()"}]," - retrieve an object by its primary key."]}],"\n",["$","$L7a","mdx-160",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","$L77","mdx-159",{"href":"/docs/Table/Table.where()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Table.where()"}]," - do an advanced query."]}],"\n"]}]
6a:["$","$L20","mdx-162",{"variant":"body1","component":"div","paragraph":true,"children":"Example of a get() query:"}]
83:T4b4,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Friend number 2: "</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
6b:["$","$1","150",{"children":["$","$L1f","mdx-163",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.get(2).then(function(friend) {\n  console.log(\"Friend number 2: \" + JSON.stringify(friend));\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$83"}}]}]]}]}]}]
6c:["$","$L20","mdx-164",{"variant":"body1","component":"div","paragraph":true,"children":"Example of a simple where() query:"}]
84:T519,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'shoeSize'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">above</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"I have "</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">" friends with shoesize above 37!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
6d:["$","$1","154",{"children":["$","$L1f","mdx-165",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.where('shoeSize').above(37).count(function(count) {\n    console.log(\"I have \" + count + \" friends with shoesize above 37!\");\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$84"}}]}]]}]}]}]
6e:["$","$L20","mdx-166",{"variant":"body1","component":"div","paragraph":true,"children":"Example of an advanced where() query:"}]
85:Tabc,db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'shoeSize'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Arnold'</span><span class="token punctuation">,</span><span class="token string">'Ingemar'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> friend<span class="token punctuation">.</span>isCloseFriend<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">friend</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
6f:["$","$1","158",{"children":["$","$L1f","mdx-167",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.friends.where('shoeSize')\n    .between(37, 40)\n    .or('name')\n    .anyOf(['Arnold','Ingemar'])\n    .and(function(friend) { return friend.isCloseFriend; })\n    .limit(10)\n    .each(function(friend){\n        console.log(JSON.stringify(friend));\n    });\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$85"}}]}]]}]}]}]
70:["$","$L20","mdx-170",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":[["$","$L77","mdx-168",{"href":"/docs/Collection/Collection.and()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"AND"}]," and ",["$","$L77","mdx-169",{"href":"/docs/Collection/Collection.or()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"OR"}]]}]
71:["$","$L20","mdx-172",{"variant":"body1","component":"div","paragraph":true,"children":["Native indexedDB has no support for logical AND or OR operations. Dexie implements this in two different manner, which makes sense for their different purposes in regard to performance. Dexie implements logical OR by executing two different requests simultaneously and act on the union of these request (more about this in ",["$","$L77","mdx-171",{"href":"http://www.codeproject.com/Articles/744986/How-to-do-some-magic-with-indexedDB","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"this article"}]," )."]}]
72:["$","$L20","mdx-176",{"variant":"body1","component":"div","paragraph":true,"children":["The ",["$","$L1f","mdx-173",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"or()"}]," method takes a string argument and then works the same as ",["$","$L1f","mdx-174",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"where()"}],", whereas the ",["$","$L1f","mdx-175",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"and()"}]," method takes a function argument (a filter) and filters the results in an iteration sequence."]}]
73:["$","$L20","mdx-177",{"variant":"body1","component":"div","paragraph":true,"children":"So why is and() and or() implemented differently? The reason is that:"}]
74:["$","$L79","mdx-183",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L7a","mdx-179",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Logical OR ",["$","em","mdx-178",{"children":"cannot"}]," be done by filtering - we must query the database with two queries to get it."]}],"\n",["$","$L7a","mdx-182",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["We would gain no performance by letting the database handle Logical AND (launching two separate queries and the filter away entries that don't exist in both collections). The best pick for AND is undoubtedly a plain javascript filter. It also makes it obvious for the caller that it is important to pick a good index in the ",["$","$L1f","mdx-180",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"where()"}]," method and filter out the rest in the ",["$","$L1f","mdx-181",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"and()"}]," filter."]}],"\n"]}]
75:["$","$L20","mdx-185",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":["$","$L77","mdx-184",{"href":"/docs/Tutorial","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Back to Tutorial"}]}]
76:["$","$L1f",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L20",null,{"variant":"caption","color":"text.secondary","children":"Tutorial/Design"}],["$","$L20",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/15/2025"]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:null
86:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
17:{"metadata":[["$","title","0",{"children":"Design | Dexie.js Documentation - Offline-First Database | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"Design documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie.js,indexeddb,offline first,javascript database,browser database"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie.js, indexeddb, offline first, javascript database, browser database"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/docs/Tutorial/Design"}],["$","meta","13",{"property":"og:title","content":"Design - Dexie.js Documentation"}],["$","meta","14",{"property":"og:description","content":"Design documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/docs/Tutorial/Design"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"Design - Dexie.js Documentation"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"Design - Dexie.js Docs"}],["$","meta","23",{"name":"twitter:description","content":"Design documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$L86","26",{}]],"error":null,"digest":"$undefined"}
1c:"$17:metadata"
