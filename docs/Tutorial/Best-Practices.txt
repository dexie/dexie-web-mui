1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
4:I[17350,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
5:I[11054,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
6:I[53675,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
7:I[45678,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
10:I[68027,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"93xV5AFzuCIH-ZmW3bTY9","p":"","c":["","docs","Tutorial","Best-Practices"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","Tutorial/Best-Practices","c"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/40c7d64eb6baa423.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/979a509c88d32a4e.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/1ee5528f2863dd7c.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/cd47604cae0ad19f.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/a8730058447906a4.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["docs","$Lc",{"children":[["slug","Tutorial/Best-Practices","c"],"$Ld",{"children":["__PAGE__","$Le",{},null,false]},null,false]},null,false]},null,false],"$Lf",false]],"m":"$undefined","G":["$10",["$L11"]],"s":false,"S":true}
12:I[13642,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
14:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
16:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
18:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1a:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1b:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L12",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":["$L13",[["$","script","script-0",{"src":"/_next/static/chunks/1b8d91388f6c6c81.js","async":true,"nonce":"$undefined"}]],["$","$L14",null,{"children":["$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}]
f:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1d:I[99748,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
13:["$","$L1d",null,{"navigation":{"API-Reference":{"title":"API Reference","slug":"API-Reference","layout":"docs"},"Collection":{"Collection.and()":{"title":"Collection.and()","slug":"Collection/Collection.and()","layout":"docs"},"Collection.clone()":{"title":"Collection.clone()","slug":"Collection/Collection.clone()","layout":"docs"},"Collection.count()":{"title":"Collection.count()","slug":"Collection/Collection.count()","layout":"docs"},"Collection.delete()":{"title":"Collection.delete()","slug":"Collection/Collection.delete()","layout":"docs"},"Collection.desc()":{"title":"Collection.desc()","slug":"Collection/Collection.desc()","layout":"docs"},"Collection.distinct()":{"title":"Collection.distinct()","slug":"Collection/Collection.distinct()","layout":"docs"},"Collection.each()":{"title":"Collection.each()","slug":"Collection/Collection.each()","layout":"docs"},"Collection.eachKey()":{"title":"Collection.eachKey()","slug":"Collection/Collection.eachKey()","layout":"docs"},"Collection.eachPrimaryKey()":{"title":"Collection.eachPrimaryKey()","slug":"Collection/Collection.eachPrimaryKey()","layout":"docs"},"Collection.eachUniqueKey()":{"title":"Collection.eachUniqueKey()","slug":"Collection/Collection.eachUniqueKey()","layout":"docs"},"Collection.filter()":{"title":"Collection.filter()","slug":"Collection/Collection.filter()","layout":"docs"},"Collection.first()":{"title":"Collection.first()","slug":"Collection/Collection.first()","layout":"docs"},"Collection.keys()":{"title":"Collection.keys()","slug":"Collection/Collection.keys()","layout":"docs"},"Collection.last()":{"title":"Collection.last()","slug":"Collection/Collection.last()","layout":"docs"},"Collection.limit()":{"title":"Collection.limit()","slug":"Collection/Collection.limit()","layout":"docs"},"Collection":{"title":"Collection","slug":"Collection/Collection","layout":"docs"},"Collection.modify()":{"title":"Collection.modify()","slug":"Collection/Collection.modify()","layout":"docs"},"Collection.offset()":{"title":"Collection.offset()","slug":"Collection/Collection.offset()","layout":"docs"},"Collection.or()":{"title":"Collection.or()","slug":"Collection/Collection.or()","layout":"docs"},"Collection.primaryKeys()":{"title":"Collection.primaryKeys()","slug":"Collection/Collection.primaryKeys()","layout":"docs"},"Collection.raw()":{"title":"Collection.raw()","slug":"Collection/Collection.raw()","layout":"docs"},"Collection.reverse()":{"title":"Collection.reverse()","slug":"Collection/Collection.reverse()","layout":"docs"},"Collection.sortBy()":{"title":"Collection.sortBy()","slug":"Collection/Collection.sortBy()","layout":"docs"},"Collection.toArray()":{"title":"Collection.toArray()","slug":"Collection/Collection.toArray()","layout":"docs"},"Collection.uniqueKeys()":{"title":"Collection.uniqueKeys()","slug":"Collection/Collection.uniqueKeys()","layout":"docs"},"Collection.until()":{"title":"Collection.until()","slug":"Collection/Collection.until()","layout":"docs"}},"Compound-Index":{"title":"Compound Index","slug":"Compound-Index","layout":"docs"},"DBCore":{"DBCore":{"title":"DBCore","slug":"DBCore/DBCore","layout":"docs"},"DBCoreAddRequest":{"title":"DBCoreAddRequest","slug":"DBCore/DBCoreAddRequest","layout":"docs"},"DBCoreCountRequest":{"title":"DBCoreCountRequest","slug":"DBCore/DBCoreCountRequest","layout":"docs"},"DBCoreCursor":{"title":"DBCoreCursor","slug":"DBCore/DBCoreCursor","layout":"docs"},"DBCoreDeleteRangeRequest":{"title":"DBCoreDeleteRangeRequest","slug":"DBCore/DBCoreDeleteRangeRequest","layout":"docs"},"DBCoreDeleteRequest":{"title":"DBCoreDeleteRequest","slug":"DBCore/DBCoreDeleteRequest","layout":"docs"},"DBCoreGetManyRequest":{"title":"DBCoreGetManyRequest","slug":"DBCore/DBCoreGetManyRequest","layout":"docs"},"DBCoreGetRequest":{"title":"DBCoreGetRequest","slug":"DBCore/DBCoreGetRequest","layout":"docs"},"DBCoreIndex":{"title":"DBCoreIndex","slug":"DBCore/DBCoreIndex","layout":"docs"},"DBCoreKeyRange":{"title":"DBCoreKeyRange","slug":"DBCore/DBCoreKeyRange","layout":"docs"},"DBCoreMutateRequest":{"title":"DBCoreMutateRequest","slug":"DBCore/DBCoreMutateRequest","layout":"docs"},"DBCoreMutateResponse":{"title":"DBCoreMutateResponse","slug":"DBCore/DBCoreMutateResponse","layout":"docs"},"DBCoreOpenCursorRequest":{"title":"DBCoreOpenCursorRequest","slug":"DBCore/DBCoreOpenCursorRequest","layout":"docs"},"DBCorePutRequest":{"title":"DBCorePutRequest","slug":"DBCore/DBCorePutRequest","layout":"docs"},"DBCoreQuery":{"title":"DBCoreQuery","slug":"DBCore/DBCoreQuery","layout":"docs"},"DBCoreQueryRequest":{"title":"DBCoreQueryRequest","slug":"DBCore/DBCoreQueryRequest","layout":"docs"},"DBCoreQueryResponse":{"title":"DBCoreQueryResponse","slug":"DBCore/DBCoreQueryResponse","layout":"docs"},"DBCoreRangeType":{"title":"DBCoreRangeType","slug":"DBCore/DBCoreRangeType","layout":"docs"},"DBCoreSchema":{"title":"DBCoreSchema","slug":"DBCore/DBCoreSchema","layout":"docs"},"DBCoreTable":{"title":"DBCoreTable","slug":"DBCore/DBCoreTable","layout":"docs"},"DBCoreTableSchema":{"title":"DBCoreTableSchema","slug":"DBCore/DBCoreTableSchema","layout":"docs"},"DBCoreTransaction":{"title":"DBCoreTransaction","slug":"DBCore/DBCoreTransaction","layout":"docs"},"DBCoreTransactionMode":{"title":"DBCoreTransactionMode","slug":"DBCore/DBCoreTransactionMode","layout":"docs"}},"Deprecations":{"title":"Deprecations","slug":"Deprecations","layout":"docs"},"DerivedWork":{"title":"Derived Work","slug":"DerivedWork","layout":"docs"},"Dexie":{"Dexie.[table]":{"title":"Dexie.[table]","slug":"Dexie/Dexie.[table]","layout":"docs"},"Dexie.addons":{"title":"Dexie.addons","slug":"Dexie/Dexie.addons","layout":"docs"},"Dexie.async()":{"title":"Dexie.async()","slug":"Dexie/Dexie.async()","layout":"docs"},"Dexie.backendDB()":{"title":"Dexie.backendDB()","slug":"Dexie/Dexie.backendDB()","layout":"docs"},"Dexie.close()":{"title":"Dexie.close()","slug":"Dexie/Dexie.close()","layout":"docs"},"Dexie.currentTransaction":{"title":"Dexie.currentTransaction","slug":"Dexie/Dexie.currentTransaction","layout":"docs"},"Dexie.debug":{"title":"Dexie.debug","slug":"Dexie/Dexie.debug","layout":"docs"},"Dexie.deepClone()":{"title":"Dexie.deepClone()","slug":"Dexie/Dexie.deepClone()","layout":"docs"},"Dexie.defineClass()":{"title":"Dexie.defineClass()","slug":"Dexie/Dexie.defineClass()","layout":"docs"},"Dexie.delByKeyPath()":{"title":"Dexie.delByKeyPath()","slug":"Dexie/Dexie.delByKeyPath()","layout":"docs"},"Dexie.delete()":{"title":"Dexie.delete()","slug":"Dexie/Dexie.delete()","layout":"docs"},"Dexie.derive()":{"title":"Dexie.derive()","slug":"Dexie/Dexie.derive()","layout":"docs"},"Dexie.events()":{"title":"Dexie.events()","slug":"Dexie/Dexie.events()","layout":"docs"},"Dexie.exists()":{"title":"Dexie.exists()","slug":"Dexie/Dexie.exists()","layout":"docs"},"Dexie.extend()":{"title":"Dexie.extend()","slug":"Dexie/Dexie.extend()","layout":"docs"},"Dexie.fakeAutoComplete()":{"title":"Dexie.fakeAutoComplete()","slug":"Dexie/Dexie.fakeAutoComplete()","layout":"docs"},"Dexie.getByKeyPath()":{"title":"Dexie.getByKeyPath()","slug":"Dexie/Dexie.getByKeyPath()","layout":"docs"},"Dexie.getDatabaseNames()":{"title":"Dexie.getDatabaseNames()","slug":"Dexie/Dexie.getDatabaseNames()","layout":"docs"},"Dexie.hasFailed()":{"title":"Dexie.hasFailed()","slug":"Dexie/Dexie.hasFailed()","layout":"docs"},"Dexie.ignoreTransaction()":{"title":"Dexie.ignoreTransaction()","slug":"Dexie/Dexie.ignoreTransaction()","layout":"docs"},"Dexie.isOpen()":{"title":"Dexie.isOpen()","slug":"Dexie/Dexie.isOpen()","layout":"docs"},"Dexie":{"title":"Dexie Constructor","slug":"Dexie/Dexie","layout":"docs"},"Dexie.name":{"title":"Dexie.name","slug":"Dexie/Dexie.name","layout":"docs"},"Dexie.on()":{"title":"Dexie.on()","slug":"Dexie/Dexie.on()","layout":"docs"},"Dexie.on.blocked":{"title":"Dexie.on.blocked","slug":"Dexie/Dexie.on.blocked","layout":"docs"},"Dexie.on.close":{"title":"Dexie.on.close","slug":"Dexie/Dexie.on.close","layout":"docs"},"Dexie.on.error":{"title":"Dexie.on.error","slug":"Dexie/Dexie.on.error","layout":"docs"},"Dexie.on.populate-(old-version)":{"title":"Dexie.on.populate-(old-version)","slug":"Dexie/Dexie.on.populate-(old-version)","layout":"docs"},"Dexie.on.populate":{"title":"Dexie.on.populate","slug":"Dexie/Dexie.on.populate","layout":"docs"},"Dexie.on.ready":{"title":"Dexie.on.ready","slug":"Dexie/Dexie.on.ready","layout":"docs"},"Dexie.on.storagemutated":{"title":"Dexie.on.storagemutated","slug":"Dexie/Dexie.on.storagemutated","layout":"docs"},"Dexie.on.versionchange":{"title":"Dexie.on.versionchange","slug":"Dexie/Dexie.on.versionchange","layout":"docs"},"Dexie.open()":{"title":"Dexie.open()","slug":"Dexie/Dexie.open()","layout":"docs"},"Dexie.override()":{"title":"Dexie.override()","slug":"Dexie/Dexie.override()","layout":"docs"},"Dexie.semVer":{"title":"Dexie.semVer","slug":"Dexie/Dexie.semVer","layout":"docs"},"Dexie.setByKeyPath()":{"title":"Dexie.setByKeyPath()","slug":"Dexie/Dexie.setByKeyPath()","layout":"docs"},"Dexie.shallowClone()":{"title":"Dexie.shallowClone()","slug":"Dexie/Dexie.shallowClone()","layout":"docs"},"Dexie.spawn()":{"title":"Dexie.spawn()","slug":"Dexie/Dexie.spawn()","layout":"docs"},"Dexie.table()":{"title":"Dexie.table()","slug":"Dexie/Dexie.table()","layout":"docs"},"Dexie.tables":{"title":"Dexie.tables","slug":"Dexie/Dexie.tables","layout":"docs"},"Dexie.transaction()-(old-version)":{"title":"Dexie.transaction()-(old-version)","slug":"Dexie/Dexie.transaction()-(old-version)","layout":"docs"},"Dexie.transaction()":{"title":"Dexie.transaction()","slug":"Dexie/Dexie.transaction()","layout":"docs"},"Dexie.use()":{"title":"Dexie.use()","slug":"Dexie/Dexie.use()","layout":"docs"},"Dexie.verno":{"title":"Dexie.verno","slug":"Dexie/Dexie.verno","layout":"docs"},"Dexie.version()":{"title":"Dexie.version()","slug":"Dexie/Dexie.version()","layout":"docs"},"Dexie.version":{"title":"Dexie.version","slug":"Dexie/Dexie.version","layout":"docs"},"Dexie.vip()":{"title":"Dexie.vip()","slug":"Dexie/Dexie.vip()","layout":"docs"},"Dexie.waitFor()":{"title":"Dexie.waitFor()","slug":"Dexie/Dexie.waitFor()","layout":"docs"}},"Dexie.js":{"title":"Dexie.js","slug":"Dexie.js","layout":"docs"},"DexieErrors":{"Dexie.AbortError":{"title":"Dexie.AbortError","slug":"DexieErrors/Dexie.AbortError","layout":"docs"},"Dexie.BulkError":{"title":"Dexie.BulkError","slug":"DexieErrors/Dexie.BulkError","layout":"docs"},"Dexie.ConstraintError":{"title":"Dexie.ConstraintError","slug":"DexieErrors/Dexie.ConstraintError","layout":"docs"},"Dexie.DataCloneError":{"title":"Dexie.DataCloneError","slug":"DexieErrors/Dexie.DataCloneError","layout":"docs"},"Dexie.DataError":{"title":"Dexie.DataError","slug":"DexieErrors/Dexie.DataError","layout":"docs"},"Dexie.DatabaseClosedError":{"title":"Dexie.DatabaseClosedError","slug":"DexieErrors/Dexie.DatabaseClosedError","layout":"docs"},"Dexie.IncompatiblePromiseError":{"title":"Dexie.IncompatiblePromiseError","slug":"DexieErrors/Dexie.IncompatiblePromiseError","layout":"docs"},"Dexie.InternalError":{"title":"Dexie.InternalError","slug":"DexieErrors/Dexie.InternalError","layout":"docs"},"Dexie.InvalidAccessError":{"title":"Dexie.InvalidAccessError","slug":"DexieErrors/Dexie.InvalidAccessError","layout":"docs"},"Dexie.InvalidArgumentError":{"title":"Dexie.InvalidArgumentError","slug":"DexieErrors/Dexie.InvalidArgumentError","layout":"docs"},"Dexie.InvalidStateError":{"title":"Dexie.InvalidStateError","slug":"DexieErrors/Dexie.InvalidStateError","layout":"docs"},"Dexie.InvalidTableError":{"title":"Dexie.InvalidTableError","slug":"DexieErrors/Dexie.InvalidTableError","layout":"docs"},"Dexie.MissingAPIError":{"title":"Dexie.MissingAPIError","slug":"DexieErrors/Dexie.MissingAPIError","layout":"docs"},"Dexie.ModifyError":{"title":"Dexie.ModifyError","slug":"DexieErrors/Dexie.ModifyError","layout":"docs"},"Dexie.NoSuchDatabaseError":{"title":"Dexie.NoSuchDatabaseErrorError","slug":"DexieErrors/Dexie.NoSuchDatabaseError","layout":"docs"},"Dexie.NotFoundError":{"title":"Dexie.NotFoundError","slug":"DexieErrors/Dexie.NotFoundError","layout":"docs"},"Dexie.OpenFailedError":{"title":"Dexie.OpenFailedError","slug":"DexieErrors/Dexie.OpenFailedError","layout":"docs"},"Dexie.PrematureCommitError":{"title":"Dexie.PrematureCommitError","slug":"DexieErrors/Dexie.PrematureCommitError","layout":"docs"},"Dexie.QuotaExceededError":{"title":"Dexie.QuotaExceededError","slug":"DexieErrors/Dexie.QuotaExceededError","layout":"docs"},"Dexie.ReadOnlyError":{"title":"Dexie.ReadOnlyError","slug":"DexieErrors/Dexie.ReadOnlyError","layout":"docs"},"Dexie.SchemaError":{"title":"Dexie.SchemaError","slug":"DexieErrors/Dexie.SchemaError","layout":"docs"},"Dexie.SubTransactionError":{"title":"Dexie.SubTransactionError","slug":"DexieErrors/Dexie.SubTransactionError","layout":"docs"},"Dexie.TimeoutError":{"title":"Dexie.TimeoutError","slug":"DexieErrors/Dexie.TimeoutError","layout":"docs"},"Dexie.TransactionInactiveError":{"title":"Dexie.TransactionInactiveError","slug":"DexieErrors/Dexie.TransactionInactiveError","layout":"docs"},"Dexie.UnknownError":{"title":"Dexie.UnknownError","slug":"DexieErrors/Dexie.UnknownError","layout":"docs"},"Dexie.UnsupportedError":{"title":"Dexie.UnsupportedError","slug":"DexieErrors/Dexie.UnsupportedError","layout":"docs"},"Dexie.UpgradeError":{"title":"Dexie.UpgradeError()","slug":"DexieErrors/Dexie.UpgradeError","layout":"docs"},"Dexie.VersionChangeError":{"title":"Dexie.VersionChangeError","slug":"DexieErrors/Dexie.VersionChangeError","layout":"docs"},"Dexie.VersionError":{"title":"Dexie.VersionError","slug":"DexieErrors/Dexie.VersionError","layout":"docs"},"DexieError":{"title":"DexieError","slug":"DexieErrors/DexieError","layout":"docs"}},"Download":{"title":"Download","slug":"Download","layout":"docs"},"EntityTable":{"title":"EntityTable","slug":"EntityTable","layout":"docs"},"ExportImport":{"dexie-export-import":{"title":"Export and Import Database","slug":"ExportImport/dexie-export-import","layout":"docs"}},"IndexSpec":{"title":"IndexSpec","slug":"IndexSpec","layout":"docs"},"Indexable-Type":{"title":"Indexable Type","slug":"Indexable-Type","layout":"docs"},"IndexedDB-on-Safari":{"title":"IndexedDB on Safari","slug":"IndexedDB-on-Safari","layout":"docs"},"MultiEntry-Index":{"title":"MultiEntry Index","slug":"MultiEntry-Index","layout":"docs"},"Observable":{"Dexie.Observable.DatabaseChange":{"title":"Dexie.Observable.DatabaseChange","slug":"Observable/Dexie.Observable.DatabaseChange","layout":"docs"},"Dexie.Observable":{"title":"Dexie.Observable","slug":"Observable/Dexie.Observable","layout":"docs"}},"Promise":{"Promise.PSD":{"title":"Promise.PSD","slug":"Promise/Promise.PSD","layout":"docs"},"Promise.catch()":{"title":"Promise.catch()","slug":"Promise/Promise.catch()","layout":"docs"},"Promise.finally()":{"title":"Promise.finally()","slug":"Promise/Promise.finally()","layout":"docs"},"Promise":{"title":"Promise","slug":"Promise/Promise","layout":"docs"},"Promise.on.error":{"title":"Promise.on.error","slug":"Promise/Promise.on.error","layout":"docs"},"Promise.onuncatched":{"title":"Promise.onuncatched","slug":"Promise/Promise.onuncatched","layout":"docs"},"unhandledrejection-event":{"title":"unhandledrejection-event","slug":"Promise/unhandledrejection-event","layout":"docs"}},"PropModification":{"add()":{"title":"Consistent add() operator","slug":"PropModification/add()","layout":"docs"},"remove()":{"title":"Consistent remove() operator","slug":"PropModification/remove()","layout":"docs"},"replacePrefix()":{"title":"Consistent replacePrefix() operator","slug":"PropModification/replacePrefix()","layout":"docs"}},"Questions-and-Answers":{"title":"Questions and Answers","slug":"Questions-and-Answers","layout":"docs"},"Releasing-Dexie":{"title":"Releasing Dexie","slug":"Releasing-Dexie","layout":"docs"},"Samples":{"title":"Samples","slug":"Samples","layout":"docs-freestyle"},"Simplify-with-yield":{"title":"Simplify with yield","slug":"Simplify-with-yield","layout":"docs"},"StorageManager":{"title":"How To Use the StorageManager API","slug":"StorageManager","layout":"docs"},"Syncable":{"Dexie.Syncable.IDatabaseChange":{"title":"Dexie.Syncable.IDatabaseChange","slug":"Syncable/Dexie.Syncable.IDatabaseChange","layout":"docs"},"Dexie.Syncable.IPersistedContext":{"title":"Dexie.Syncable.IPersistentContext","slug":"Syncable/Dexie.Syncable.IPersistedContext","layout":"docs"},"Dexie.Syncable.ISyncProtocol":{"title":"Dexie.Syncable.ISyncProtocol","slug":"Syncable/Dexie.Syncable.ISyncProtocol","layout":"docs"},"Dexie.Syncable.StatusTexts":{"title":"Dexie.Syncable.StatusTexts","slug":"Syncable/Dexie.Syncable.StatusTexts","layout":"docs"},"Dexie.Syncable.Statuses":{"title":"Dexie.Syncable.Statuses","slug":"Syncable/Dexie.Syncable.Statuses","layout":"docs"},"Dexie.Syncable.js":{"title":"Dexie.Syncable","slug":"Syncable/Dexie.Syncable.js","layout":"docs"},"Dexie.Syncable.registerSyncProtocol()":{"title":"Dexie.Syncable.registerSyncProtocol()","slug":"Syncable/Dexie.Syncable.registerSyncProtocol()","layout":"docs"},"db.syncable.connect()":{"title":"db.syncable.connect()","slug":"Syncable/db.syncable.connect()","layout":"docs"},"db.syncable.delete()":{"title":"db.syncable.delete()","slug":"Syncable/db.syncable.delete()","layout":"docs"},"db.syncable.disconnect()":{"title":"db.syncable.disconnect()","slug":"Syncable/db.syncable.disconnect()","layout":"docs"},"db.syncable.getOptions()":{"title":"db.syncable.getOptions()","slug":"Syncable/db.syncable.getOptions()","layout":"docs"},"db.syncable.getStatus()":{"title":"db.syncable.getStatus()","slug":"Syncable/db.syncable.getStatus()","layout":"docs"},"db.syncable.list()":{"title":"db.syncable.list()","slug":"Syncable/db.syncable.list()","layout":"docs"},"db.syncable.on('statusChanged')":{"title":"db.syncable.on('statusChanged')","slug":"Syncable/db.syncable.on('statusChanged')","layout":"docs"},"db.syncable.setFilter()":{"title":"db.syncable.setFilter()","slug":"Syncable/db.syncable.setFilter()","layout":"docs"}},"Table":{"Table.add()":{"title":"Table.add()","slug":"Table/Table.add()","layout":"docs"},"Table.bulkAdd()":{"title":"Table.bulkAdd()","slug":"Table/Table.bulkAdd()","layout":"docs"},"Table.bulkDelete()":{"title":"Table.bulkDelete()","slug":"Table/Table.bulkDelete()","layout":"docs"},"Table.bulkGet()":{"title":"Table.bulkGet()","slug":"Table/Table.bulkGet()","layout":"docs"},"Table.bulkPut()":{"title":"Table.bulkPut()","slug":"Table/Table.bulkPut()","layout":"docs"},"Table.bulkUpdate()":{"title":"Table.bulkUpdate()","slug":"Table/Table.bulkUpdate()","layout":"docs"},"Table.clear()":{"title":"Table.clear()","slug":"Table/Table.clear()","layout":"docs"},"Table.count()":{"title":"Table.count()","slug":"Table/Table.count()","layout":"docs"},"Table.defineClass()":{"title":"Table.defineClass()","slug":"Table/Table.defineClass()","layout":"docs"},"Table.delete()":{"title":"Table.delete()","slug":"Table/Table.delete()","layout":"docs"},"Table.each()":{"title":"Table.each()","slug":"Table/Table.each()","layout":"docs"},"Table.filter()":{"title":"Table.filter()","slug":"Table/Table.filter()","layout":"docs"},"Table.get()":{"title":"Table.get()","slug":"Table/Table.get()","layout":"docs"},"Table.hook('creating')":{"title":"Table.hook('creating')","slug":"Table/Table.hook('creating')","layout":"docs"},"Table.hook('deleting')":{"title":"Table.hook('deleting')","slug":"Table/Table.hook('deleting')","layout":"docs"},"Table.hook('reading')":{"title":"Table.hook('reading')","slug":"Table/Table.hook('reading')","layout":"docs"},"Table.hook('updating')":{"title":"Table.hook('updating')","slug":"Table/Table.hook('updating')","layout":"docs"},"Table.limit()":{"title":"Table.limit()","slug":"Table/Table.limit()","layout":"docs"},"Table.mapToClass()":{"title":"Table.mapToClass()","slug":"Table/Table.mapToClass()","layout":"docs"},"Table":{"title":"Table","slug":"Table/Table","layout":"docs"},"Table.name":{"title":"Table.name","slug":"Table/Table.name","layout":"docs"},"Table.offset()":{"title":"Table.offset()","slug":"Table/Table.offset()","layout":"docs"},"Table.orderBy()":{"title":"Table.orderBy()","slug":"Table/Table.orderBy()","layout":"docs"},"Table.put()":{"title":"Table.put()","slug":"Table/Table.put()","layout":"docs"},"Table.reverse()":{"title":"Table.reverse()","slug":"Table/Table.reverse()","layout":"docs"},"Table.schema":{"title":"Table.schema","slug":"Table/Table.schema","layout":"docs"},"Table.toArray()":{"title":"Table.toArray()","slug":"Table/Table.toArray()","layout":"docs"},"Table.toCollection()":{"title":"Table.toCollection()","slug":"Table/Table.toCollection()","layout":"docs"},"Table.update()":{"title":"Table.update()","slug":"Table/Table.update()","layout":"docs"},"Table.where()":{"title":"Table.where()","slug":"Table/Table.where()","layout":"docs"}},"TableSchema":{"title":"Table Schema","slug":"TableSchema","layout":"docs"},"The-Main-Limitations-of-IndexedDB":{"title":"The main limitations of IndexedDB","slug":"The-Main-Limitations-of-IndexedDB","layout":"docs"},"The-Three-Main-Limitations-of-IndexedDB":{"title":"The three main limitations of IndexedDB","slug":"The-Three-Main-Limitations-of-IndexedDB","layout":"redirect"},"Transaction":{"Transaction.abort()":{"title":"Transaction.abort()","slug":"Transaction/Transaction.abort()","layout":"docs"},"Transaction":{"title":"Transaction","slug":"Transaction/Transaction","layout":"docs"},"Transaction.on.abort":{"title":"Transaction.on.abort","slug":"Transaction/Transaction.on.abort","layout":"docs"},"Transaction.on.complete":{"title":"Transaction.on.complete","slug":"Transaction/Transaction.on.complete","layout":"docs"},"Transaction.on.error":{"title":"Transaction.on.error","slug":"Transaction/Transaction.on.error","layout":"docs"},"Transaction.table()":{"title":"Transaction.table()","slug":"Transaction/Transaction.table()","layout":"docs"}},"Tutorial":{"Angular":{"title":"Get started with Dexie in Angular","slug":"Tutorial/Angular","layout":"docs"},"Best-Practices":{"title":"Best Practices","slug":"Tutorial/Best-Practices","layout":"docs"},"Building-Addons":{"title":"Building Addons","slug":"Tutorial/Building-Addons","layout":"docs"},"Consuming-dexie-as-a-module":{"title":"Consuming Dexie as a module","slug":"Tutorial/Consuming-dexie-as-a-module","layout":"docs"},"Design":{"title":"Design","slug":"Tutorial/Design","layout":"docs"},"Getting-started":{"title":"Getting Started with Dexie.js","slug":"Tutorial/Getting-started","layout":"docs-freestyle"},"Hello-World":{"title":"Hello World","slug":"Tutorial/Hello-World","layout":"docs"},"Migrating-existing-DB-to-Dexie":{"title":"Migrating existing DB to Dexie","slug":"Tutorial/Migrating-existing-DB-to-Dexie","layout":"docs"},"React":{"title":"Get started with Dexie in React","slug":"Tutorial/React","layout":"docs"},"Svelte":{"title":"Get started with Dexie in Svelte","slug":"Tutorial/Svelte","layout":"docs"},"Understanding-the-basics":{"title":"Understanding the basics","slug":"Tutorial/Understanding-the-basics","layout":"docs"},"Vue":{"title":"Get started with Dexie in Vue","slug":"Tutorial/Vue","layout":"docs"},"index":{"title":"Tutorial","slug":"Tutorial/index","layout":"docs"}},"Typescript-old":{"title":"Typescript (old)","slug":"Typescript-old","layout":"docs"},"Typescript":{"title":"Typescript","slug":"Typescript","layout":"docs"},"Version":{"Version":{"title":"Version","slug":"Version/Version","layout":"docs"},"Version.stores()":{"title":"Version.stores()","slug":"Version/Version.stores()","layout":"docs"},"Version.upgrade()":{"title":"Version.upgrade()","slug":"Version/Version.upgrade()","layout":"docs"}},"WhereClause":{"WhereClause.above()":{"title":"WhereClause.above()","slug":"WhereClause/WhereClause.above()","layout":"docs"},"WhereClause.aboveOrEqual()":{"title":"WhereClause.aboveOrEqual()","slug":"WhereClause/WhereClause.aboveOrEqual()","layout":"docs"},"WhereClause.anyOf()":{"title":"WhereClause.anyOf()","slug":"WhereClause/WhereClause.anyOf()","layout":"docs"},"WhereClause.anyOfIgnoreCase()":{"title":"WhereClause.anyOfIgnoreCase()","slug":"WhereClause/WhereClause.anyOfIgnoreCase()","layout":"docs"},"WhereClause.below()":{"title":"WhereClause.below()","slug":"WhereClause/WhereClause.below()","layout":"docs"},"WhereClause.belowOrEqual()":{"title":"WhereClause.belowOrEqual()","slug":"WhereClause/WhereClause.belowOrEqual()","layout":"docs"},"WhereClause.between()":{"title":"WhereClause.between()","slug":"WhereClause/WhereClause.between()","layout":"docs"},"WhereClause.equals()":{"title":"WhereClause.equals()","slug":"WhereClause/WhereClause.equals()","layout":"docs"},"WhereClause.equalsIgnoreCase()":{"title":"WhereClause.equalsIgnoreCase()","slug":"WhereClause/WhereClause.equalsIgnoreCase()","layout":"docs"},"WhereClause.inAnyRange()":{"title":"WhereClause.inAnyRange()","slug":"WhereClause/WhereClause.inAnyRange()","layout":"docs"},"WhereClause":{"title":"WhereClause","slug":"WhereClause/WhereClause","layout":"docs"},"WhereClause.noneOf()":{"title":"WhereClause.noneOf()","slug":"WhereClause/WhereClause.noneOf()","layout":"docs"},"WhereClause.notEqual()":{"title":"WhereClause.notEqual()","slug":"WhereClause/WhereClause.notEqual()","layout":"docs"},"WhereClause.startsWith()":{"title":"WhereClause.startsWith()","slug":"WhereClause/WhereClause.startsWith()","layout":"docs"},"WhereClause.startsWithAnyOf()":{"title":"WhereClause.startsWithAnyOf()","slug":"WhereClause/WhereClause.startsWithAnyOf()","layout":"docs"},"WhereClause.startsWithAnyOfIgnoreCase()":{"title":"WhereClause.startsWithAnyOfIgnoreCase()","slug":"WhereClause/WhereClause.startsWithAnyOfIgnoreCase()","layout":"docs"},"WhereClause.startsWithIgnoreCase()":{"title":"WhereClause.startsWithIgnoreCase()","slug":"WhereClause/WhereClause.startsWithIgnoreCase()","layout":"docs"}},"Y.js":{"Y.js":{"title":"Y.js","slug":"Y.js/Y.js","layout":"docs"},"y-dexie":{"title":"y-dexie","slug":"Y.js/y-dexie","layout":"docs"}},"dexie-react-hooks":{"useLiveQuery()":{"title":"useLiveQuery()","slug":"dexie-react-hooks/useLiveQuery()","layout":"docs"},"useObservable()":{"title":"useObservable()","slug":"dexie-react-hooks/useObservable()","layout":"docs"},"usePermissions()":{"title":"usePermissions()","slug":"dexie-react-hooks/usePermissions()","layout":"docs"}},"inbound":{"title":"Inbound","slug":"inbound","layout":"docs"},"index":{"title":"Docs Home","slug":"index","layout":"docs"},"libs":{"dexie-react-hooks":{"title":"dexie-react-hooks","slug":"libs/dexie-react-hooks","layout":"docs"}},"liveQuery()":{"title":"liveQuery()","slug":"liveQuery()","layout":"docs"},"safari-issues":{"title":"safari-issues","slug":"safari-issues","layout":"$undefined"}},"currentSlug":"Tutorial/Best-Practices","pageTitle":"Best Practices","children":"$L1e"}]
1f:I[19646,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
20:I[26863,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
21:I[63876,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
22:Td50,<span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Important: Understand why we use 'return' here and what we actually return!</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">aFriend</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> aFriend<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token comment">// Important: Understand what 'return' means here!</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">aFriendsId</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token comment">// Important: Understand what it means to return another Promise here:</span>
        <span class="token keyword">return</span> <span class="token function">fetch</span> <span class="token punctuation">(</span><span class="token string">'https://blablabla/friends/'</span> <span class="token operator">+</span> aFriendsId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token comment">// ...and here:</span>
        <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Important: Understand how you would call and consume the doSomething() function.</span>
1e:["$","$L1f",null,{"component":"article","children":[["$","$L1f",null,{"component":"header","sx":{"mb":5},"children":["$","$L20",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"Best Practices"}]}],["$","$L1f",null,{"className":"docs-content","children":["$","$L1f",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L20","mdx-1",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"1. Understand Promises"}],"\n",["$","$L20","mdx-2",{"variant":"body1","component":"div","paragraph":true,"children":"Make sure you learn at least the basic practices of A+ promises before diving too deep into Dexie."}],"\n",["$","$L20","mdx-3",{"variant":"body1","component":"div","paragraph":true,"children":"Here's a little test. Please review the code below and then ask yourself if you understood what it was doing..."}],"\n",["$","$1","6",{"children":["$","$L1f","mdx-4",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function doSomething() {\n    // Important: Understand why we use 'return' here and what we actually return!\n    return db.friends.where('name').startsWith('A').first().then((aFriend) => {\n        return aFriend.id; // Important: Understand what 'return' means here!\n    }).then ((aFriendsId) => {\n        // Important: Understand what it means to return another Promise here:\n        return fetch ('https://blablabla/friends/' + aFriendsId);\n    }).then ((response) => {\n        // ...and here:\n        return response.json();\n    });\n}\n\n// Important: Understand how you would call and consume the doSomething() function.\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$22"}}]}]]}]}]}],"\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n"]}]}],"$L54"]}]
55:I[32412,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
56:I[65801,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
57:I[72729,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
23:["$","$L20","mdx-5",{"variant":"body1","component":"div","paragraph":true,"children":"Was there any of the \"Understand\" parts that you didn't understand? Then you would benefit from learning a little about promises. This will be useful knowledge whatever lib you'll be using. Some links to dive into:"}]
24:["$","$L55","mdx-10",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L56","mdx-7",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L57","mdx-6",{"href":"https://web.dev/articles/promises","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://web.dev/articles/promises"}]}],"\n",["$","$L56","mdx-9",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L57","mdx-8",{"href":"https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html"}]}],"\n"]}]
25:["$","$L20","mdx-11",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"2. Be wise when catching promises!"}]
26:["$","$L20","mdx-12",{"variant":"body1","component":"div","paragraph":true,"children":"Short Version:"}]
58:T439,Top<span class="token operator">-</span>level <span class="token function">code</span> <span class="token punctuation">(</span>such <span class="token keyword">as</span> on event handlers<span class="token punctuation">)</span> is where you should catch promises<span class="token punctuation">.</span>
Everywhere <span class="token keyword">else</span><span class="token punctuation">,</span> you should <span class="token keyword">return</span> promises to your callers rather than
catching them<span class="token punctuation">,</span> <span class="token literal-property property">unless</span><span class="token operator">:</span>
   <span class="token operator">...</span>you really handle the <span class="token function">error</span> <span class="token punctuation">(</span>not just log it<span class="token punctuation">)</span>
   <span class="token operator">...</span>you just want to log it<span class="token punctuation">,</span> but then also re<span class="token operator">-</span><span class="token keyword">throw</span> it<span class="token punctuation">.</span> 
27:["$","$1","16",{"children":["$","$L1f","mdx-13",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"Top-level code (such as on event handlers) is where you should catch promises.\nEverywhere else, you should return promises to your callers rather than\ncatching them, unless:\n   ...you really handle the error (not just log it)\n   ...you just want to log it, but then also re-throw it. \n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$58"}}]}]]}]}]}]
28:["$","$L20","mdx-14",{"variant":"body1","component":"div","paragraph":true,"children":"Long Version:"}]
29:["$","$L20","mdx-15",{"variant":"body1","component":"div","paragraph":true,"children":"It's bad practice to do this everywhere:"}]
59:T63a,<span class="token keyword">function</span> <span class="token function">somePromiseReturningFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'foo'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
2a:["$","$1","22",{"children":["$","$L1f","mdx-16",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function somePromiseReturningFunc() {\n    return db.friends.add({\n        name: 'foo',\n        age: 40\n    }).catch ((err) => {\n        console.log(err);\n    });\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$59"}}]}]]}]}]}]
2b:["$","$L20","mdx-17",{"variant":"body1","component":"div","paragraph":true,"children":"It's much better to do just this:"}]
5a:T4ad,<span class="token keyword">function</span> <span class="token function">somePromiseReturningFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'foo'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Don't catch! The caller wouldn't find out that an error occurred if you do!</span>
    <span class="token comment">// We are returning a Promise, aren't we? Let caller catch it instead!</span>
<span class="token punctuation">}</span>
2c:["$","$1","26",{"children":["$","$L1f","mdx-18",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function somePromiseReturningFunc() {\n    return db.friends.add({\n        name: 'foo',\n        age: 40\n    });\n    // Don't catch! The caller wouldn't find out that an error occurred if you do!\n    // We are returning a Promise, aren't we? Let caller catch it instead!\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5a"}}]}]]}]}]}]
2d:["$","$L20","mdx-19",{"variant":"body1","component":"div","paragraph":true,"children":"If you catch a promise, your resulting promise will be considered successful. It's like doing try..catch in a function where it should be done from the caller, or caller's caller instead. Your flow would continue even after the error has occurred."}]
2e:["$","$L20","mdx-20",{"variant":"body1","component":"div","paragraph":true,"children":"In transaction scopes, it is even more important to NOT catch promises because if you do, transaction will commit! Catching a promise should mean you have a way to handle the error gracefully. If you don't have that, don't catch it!"}]
5b:T1114,<span class="token keyword">function</span> <span class="token function">myDataOperations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'foo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token literal-property property">daddy</span><span class="token operator">:</span> id<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pets</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token operator">...</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Don't catch! Transaction SHOULD abort if error occur, shouldn't it?</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Don't catch! Let the caller catch us instead! I mean we are returning a promise, aren't we?!</span>
<span class="token punctuation">}</span>
2f:["$","$1","32",{"children":["$","$L1f","mdx-21",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function myDataOperations() {\n    return db.transaction('rw', db.friends, db.pets, () => {\n        return db.friends.add({name: 'foo'}).then(function(id){\n            return db.pets.add({name: 'bar', daddy: id});\n        }).then (() => {\n            return db.pets.where('name').startsWith('b').toArray();\n        }).then ((pets) => {\n            ....\n        }); // Don't catch! Transaction SHOULD abort if error occur, shouldn't it?\n\n    }); // Don't catch! Let the caller catch us instead! I mean we are returning a promise, aren't we?!\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5b"}}]}]]}]}]}]
30:["$","$L20","mdx-23",{"variant":"body1","component":"div","paragraph":true,"children":["But on an event handler or other root-level scope, always catch! Why?! Because you are the last one to catch it since you are NOT returning Promise! You have no caller that expects a promise and you are the sole responsible of catching and informing the user about any error. If you don't catch it anywhere, an error will end-up in the standard ",["$","$L57","mdx-22",{"href":"/docs/Promise/unhandledrejection-event","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"unhandledrejection"}]," event."]}]
5c:T57f,<span class="token function">somePromiseReturningFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'appErrorLabel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> error<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
31:["$","$1","36",{"children":["$","$L1f","mdx-24",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"somePromiseReturningFunc().catch((error) => {\n    document.getElementById('appErrorLabel').innerText = error.toString();\n    console.error(error + '');\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5c"}}]}]]}]}]}]
32:["$","$L20","mdx-25",{"variant":"body1","component":"div","paragraph":true,"children":"Sometimes you really WANT to handle an explicit error because you know it can happen and you have a way to work around it."}]
5d:Tadc,<span class="token keyword">function</span> <span class="token function">getTaylorSwift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'[firstName+lastName]'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Taylor'</span><span class="token punctuation">,</span> <span class="token string">'Swift'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token string">'DataError'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// May fail in IE/Edge because it lacks support for compound keys.</span>
      <span class="token comment">// Use a fallback method:</span>
      <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'firstName'</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">'Taylor'</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token parameter">friend</span> <span class="token operator">=></span> friend<span class="token punctuation">.</span>lastName <span class="token operator">===</span> <span class="token string">'Swift'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
33:["$","$1","40",{"children":["$","$L1f","mdx-26",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function getTaylorSwift() {\n  return db.friends\n    .where('[firstName+lastName]')\n    .equals(['Taylor', 'Swift'])\n    .first()\n    .catch('DataError', function (err) {\n      // May fail in IE/Edge because it lacks support for compound keys.\n      // Use a fallback method:\n      return db.friends\n        .where('firstName')\n        .equals('Taylor')\n        .and(friend => friend.lastName === 'Swift');\n    });\n}\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5d"}}]}]]}]}]}]
34:["$","$L20","mdx-27",{"variant":"body1","component":"div","paragraph":true,"children":"In the above example, we are handling the error because we know it may happen and we have a way to solve that."}]
35:["$","$L20","mdx-28",{"variant":"body1","component":"div","paragraph":true,"children":"What about if you want to log stuff for debugging purpose? Just remember to rethrow the error if you do."}]
5e:T1229,<span class="token keyword">function</span> <span class="token function">myFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'foo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to add foo!: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> err<span class="token punctuation">;</span> <span class="token comment">// Re-throw the error to abort flow!</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token literal-property property">daddy</span><span class="token operator">:</span> id<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to add bar!: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> err<span class="token punctuation">;</span> <span class="token comment">// Re-throw the error!</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
36:["$","$1","46",{"children":["$","$L1f","mdx-29",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"function myFunc() {\n    return Promise.resolve().then(() => {\n        return db.friends.add({name: 'foo'});\n    }).catch((err) => {\n        console.error(\"Failed to add foo!: \" + err);\n        throw err; // Re-throw the error to abort flow!\n    }).then((id) => {\n        return db.pets.add({name: 'bar', daddy: id});\n    }).catch((err) => {\n        console.error(\"Failed to add bar!: \" + err);\n        throw err; // Re-throw the error!\n    }).then (() => {\n        ...\n    });\n};\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5e"}}]}]]}]}]}]
37:["$","$L20","mdx-30",{"variant":"body1","component":"div","paragraph":true,"children":"An equivalent async / await example:"}]
5f:Tcaf,<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">myFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> id<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    id <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'foo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to add foo!: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span> <span class="token comment">// Re-throw the error to abort flow!</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token literal-property property">daddy</span><span class="token operator">:</span> id<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to add bar!: "</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span> <span class="token comment">// Re-throw the error!</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
38:["$","$1","50",{"children":["$","$L1f","mdx-31",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"async function myFunc() {\n  let id;\n  try {\n    id = await db.friends.add({name: 'foo'});\n  } catch (err) {\n    console.error(\"Failed to add foo!: \" + err);\n    throw err; // Re-throw the error to abort flow!\n  }\n  try {\n    await db.pets.add({name: 'bar', daddy: id});\n  } catch (err) {\n    console.error(\"Failed to add bar!: \" + err);\n    throw err; // Re-throw the error!\n  }\n  ...\n};\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$5f"}}]}]]}]}]}]
39:["$","$L20","mdx-32",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"3. Avoid using other async APIs inside transactions"}]
3a:["$","$L20","mdx-33",{"variant":"body1","component":"div","paragraph":true,"children":"IndexedDB will commit a transaction as soon as it isn't used within a tick. This means that you MUST NOT call any other async API (at least not wait for it to finish) within a transaction scope. If you do, you will get a TransactionInactiveError thrown at you as soon as you try to use the transaction after having waited for the other async API."}]
3b:["$","$L20","mdx-35",{"variant":"body1","component":"div","paragraph":true,"children":["In case you really need to call a short-lived async-API, Dexie can actually keep your transaction alive for you if you use ",["$","$L57","mdx-34",{"href":"https://dexie.org/docs/Dexie/Dexie.waitFor()","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Dexie.waitFor()"}]," but it is not a recommendation to use it unless for very short async calls where there is no other way around (such as Crypto calls)."]}]
3c:["$","$L20","mdx-36",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"4. Use the global Promise within transactions!"}]
3d:["$","$L20","mdx-38",{"variant":"body1","component":"div","paragraph":true,"children":["Make sure to use the ",["$","strong","mdx-37",{"children":"global"}]," promise (window.Promise) within transactions. You may use a Promise polyfill for old browsers like IE10/IE11, but just make sure to put it on window.Promise in your page bootstrap."]}]
3e:["$","$L20","mdx-39",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"OK:"}]
60:T7f6,<span class="token keyword">import</span> PromisePolyfill <span class="token keyword">from</span> <span class="token string">'promise-polyfill-of-your-choice'</span><span class="token punctuation">;</span> 

<span class="token comment">// To add to window</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>Promise<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span>Promise <span class="token operator">=</span> PromisePolyfill<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>

db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>
    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
3f:["$","$1","64",{"children":["$","$L1f","mdx-40",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"import PromisePolyfill from 'promise-polyfill-of-your-choice'; \n\n// To add to window\nif (!window.Promise) {\n  window.Promise = PromisePolyfill;\n}\n...\n\ndb.transaction(..., ()=>{\n    Promise.all()\n    Promise.race()\n    new Promise((resolve, reject) => { ... })\n})\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$60"}}]}]]}]}]}]
40:["$","$L20","mdx-41",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"NOT OK:"}]
61:T5b2,<span class="token keyword">import</span> Promise form <span class="token string">'promise-polyfill-of-your-choice'</span><span class="token punctuation">;</span> 

db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>
    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
41:["$","$1","68",{"children":["$","$L1f","mdx-42",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"import Promise form 'promise-polyfill-of-your-choice'; \n\ndb.transaction(..., ()=>{\n    Promise.all()\n    Promise.race()\n    new Promise((resolve, reject) => { ... })\n})\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$61"}}]}]]}]}]}]
42:["$","$L20","mdx-43",{"variant":"body1","component":"div","paragraph":true,"children":"In the case you write a library (not an app) and you want your library to work on old browsers without requiring a Promise polyfill, it is still safe to use Dexie.Promise:"}]
43:["$","$L20","mdx-44",{"variant":"h4","component":"h4","gutterBottom":true,"sx":{"mt":3},"children":"STILL ALSO OK:"}]
62:T594,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>
    Dexie<span class="token punctuation">.</span>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    Dexie<span class="token punctuation">.</span>Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">new</span> <span class="token class-name">Dexie<span class="token punctuation">.</span>Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
44:["$","$1","74",{"children":["$","$L1f","mdx-45",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.transaction(..., ()=>{\n    Dexie.Promise.all()\n    Dexie.Promise.race()\n    new Dexie.Promise((resolve, reject) => { ... })\n})\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$62"}}]}]]}]}]}]
45:["$","$L20","mdx-46",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"5. Use transaction() scopes whenever you plan to make more than one operation"}]
46:["$","$L20","mdx-47",{"variant":"body1","component":"div","paragraph":true,"children":"Whenever you are going to do more than a single operation on your database in a sequence, use a transaction. This will not only encapsulate your changes into an atomic operation, but also optimize your code! Internally, non-transactional operations also use a transaction but it is only used in the single operation, so if you surround your code within a transaction, you will perform less costly operations in total."}]
47:["$","$L20","mdx-48",{"variant":"body1","component":"div","paragraph":true,"children":"Using transactions gives you the following benefits:"}]
48:["$","$L55","mdx-55",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L56","mdx-49",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Robustness: If any error occur, transaction will be rolled back!"}],"\n",["$","$L56","mdx-50",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Simpler code: You may do all operations sequentially - they get queued on the transaction."}],"\n",["$","$L56","mdx-51",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"One single line to catch them all - exceptions, errors wherever they occur."}],"\n",["$","$L56","mdx-52",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"You can just fire off database operations without handling returned promises. The transaction block will catch any error explicitly."}],"\n",["$","$L56","mdx-53",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Faster execution"}],"\n",["$","$L56","mdx-54",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Remember that a browser can close down at any moment. Think about what would happen if the user closes the browser somewhere between your operations. Would that lead to an invalid state? If so, use a transaction - that will make all operations abort if browser is closed between operations."}],"\n"]}]
49:["$","$L20","mdx-56",{"variant":"body1","component":"div","paragraph":true,"children":"Here is how you enter a transaction block:"}]
63:T460,db.transaction("rw", db.friends, db.pets, () => {
    db.friends.add({name: "Måns", isCloseFriend: 1}); // unhandled promise = ok!
    db.friends.add({name: "Nils", isCloseFriend: 1}); // unhandled promise = ok!
    db.friends.add({name: "Jon", isCloseFriend: 1});  // unhandled promise = ok!
    db.pets.add({name: "Josephina", kind: "dog"});    // unhandled promise = ok!
    // If any of the promises above fails, transaction will abort and it's promise
    // reject.

    // Since we are in a transaction, we can query the table right away and
    // still get the results of the write operations above.
    let promise = db.friends.where("isCloseFriend").equals(1).toArray();

    // Make the transaction resolve with the last promise result
    return promise;

}).then((closeFriends) => {

    // Transaction complete.
    console.log("My close friends: " + JSON.stringify(closeFriends));

}).catch((error) => {

    // Log or display the error.
    console.error(error);
    // Notice that when using a transaction, it's enough to catch
    // the transaction Promise instead of each db operation promise.
});
64:T1a41,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">"rw"</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> db<span class="token punctuation">.</span>pets<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Måns"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// unhandled promise = ok!</span>
    db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Nils"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// unhandled promise = ok!</span>
    db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Jon"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// unhandled promise = ok!</span>
    db<span class="token punctuation">.</span>pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Josephina"</span><span class="token punctuation">,</span> <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token string">"dog"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// unhandled promise = ok!</span>
    <span class="token comment">// If any of the promises above fails, transaction will abort and it's promise</span>
    <span class="token comment">// reject.</span>

    <span class="token comment">// Since we are in a transaction, we can query the table right away and</span>
    <span class="token comment">// still get the results of the write operations above.</span>
    <span class="token keyword">let</span> promise <span class="token operator">=</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">"isCloseFriend"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Make the transaction resolve with the last promise result</span>
    <span class="token keyword">return</span> promise<span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">closeFriends</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>

    <span class="token comment">// Transaction complete.</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"My close friends: "</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>closeFriends<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>

    <span class="token comment">// Log or display the error.</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Notice that when using a transaction, it's enough to catch</span>
    <span class="token comment">// the transaction Promise instead of each db operation promise.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
4a:["$","$1","86",{"children":["$","$L1f","mdx-57",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"$63"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$64"}}]}]]}]}]}]
4b:["$","$L20","mdx-58",{"variant":"body1","component":"div","paragraph":true,"children":"Notes:"}]
4c:["$","$L55","mdx-67",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L56","mdx-62",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","$L1f","mdx-59",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"friends"}]," and ",["$","$L1f","mdx-60",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"pets"}]," are objectStores registered using ",["$","$L57","mdx-61",{"href":"/docs/Version/Version.stores()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Version.stores()"}]," method."]}],"\n",["$","$L56","mdx-65",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","$L1f","mdx-63",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"rw\""}]," should be replaced with ",["$","$L1f","mdx-64",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"\"r\""}]," if you are just going to read from database."]}],"\n",["$","$L56","mdx-66",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Also errors occurring in nested callbacks in the block will be caught by the catch() method."}],"\n"]}]
4d:["$","$L20","mdx-68",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"6. Rethrow errors if transaction should be aborted"}]
4e:["$","$L20","mdx-69",{"variant":"body1","component":"div","paragraph":true,"children":"Saying this again."}]
4f:["$","$L20","mdx-70",{"variant":"body1","component":"div","paragraph":true,"children":"When you catch database operations explicitly for logging purpose, transaction will not abort unless you rethrow the error or return the rejected Promise."}]
65:T1004,db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">"rw"</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Måns"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
              console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Couldn't add Måns to the database"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// If not rethrowing here, error will be regarded as "handled"</span>
              <span class="token comment">// and transaction would not abort.</span>
              <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">add</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Nils"</span><span class="token punctuation">,</span> <span class="token literal-property property">isCloseFriend</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
   <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// transaction committed</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// transaction failed</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
50:["$","$1","98",{"children":["$","$L1f","mdx-71",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L21",null,{"code":"db.transaction(\"rw\", db.friends, () => {\n    return Promise.all([\n        db.friends.add ({name: \"Måns\", isCloseFriend: 1})\n          .catch((error) => {\n              console.error(\"Couldn't add Måns to the database\");\n              // If not rethrowing here, error will be regarded as \"handled\"\n              // and transaction would not abort.\n              throw error;\n          }),\n        db.friends.add ({name: \"Nils\", isCloseFriend: 1})\n   ]);\n}).then(function () {\n    // transaction committed\n}).catch(function (error) {\n    // transaction failed\n});\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"$65"}}]}]]}]}]}]
51:["$","$L20","mdx-72",{"variant":"body1","component":"div","paragraph":true,"children":"If not rethrowing the error, Nils would be successfully added and transaction would commit since the error is regarded as handled when you catch the database operation."}]
52:["$","$L20","mdx-75",{"variant":"body1","component":"div","paragraph":true,"children":["An alternate way of rethrowing the error is to replace ",["$","$L1f","mdx-73",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"throw error;"}]," with ",["$","$L1f","mdx-74",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"return Promise.reject(error)"}],"."]}]
53:["$","$L20","mdx-77",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":["$","$L57","mdx-76",{"href":"/docs/Tutorial","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Back to Tutorial"}]}]
54:["$","$L1f",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L20",null,{"variant":"caption","color":"text.secondary","children":"Tutorial/Best-Practices"}],["$","$L20",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/15/2025"]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:null
66:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
17:{"metadata":[["$","title","0",{"children":"Best Practices | Dexie.js Documentation - Offline-First Database | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"Best Practices documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie.js,indexeddb,offline first,javascript database,browser database"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie.js, indexeddb, offline first, javascript database, browser database"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/docs/Tutorial/Best-Practices"}],["$","meta","13",{"property":"og:title","content":"Best Practices - Dexie.js Documentation"}],["$","meta","14",{"property":"og:description","content":"Best Practices documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/docs/Tutorial/Best-Practices"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"Best Practices - Dexie.js Documentation"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"Best Practices - Dexie.js Docs"}],["$","meta","23",{"name":"twitter:description","content":"Best Practices documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$L66","26",{}]],"error":null,"digest":"$undefined"}
1c:"$17:metadata"
