1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
4:I[17350,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
5:I[11054,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
6:I[53675,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
7:I[45678,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
10:I[68027,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"Gg6yAqK42A5EtdtwenYlL","p":"","c":["","docs","dexie-react-hooks","useLiveQuery()"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","dexie-react-hooks/useLiveQuery()","c"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/5a665d09998d4862.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/5dd0231c54ee754c.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/8f22b4bf63a49712.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/68e80996639386d6.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/ff5f09f4edae29eb.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["docs","$Lc",{"children":[["slug","dexie-react-hooks/useLiveQuery()","c"],"$Ld",{"children":["__PAGE__","$Le",{},null,false]},null,false]},null,false]},null,false],"$Lf",false]],"m":"$undefined","G":["$10",["$L11"]],"s":false,"S":true}
12:I[13642,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js"],"default"]
14:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
16:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
18:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1a:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1b:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L12",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":["$L13",[["$","script","script-0",{"src":"/_next/static/chunks/067210b58f941f94.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/468ad4deeea646ae.js","async":true,"nonce":"$undefined"}]],["$","$L14",null,{"children":["$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}]
f:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1d:I[99748,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
13:["$","$L1d",null,{"navigation":{"API-Reference":{"title":"API Reference","slug":"API-Reference","layout":"docs"},"Collection":{"Collection.and()":{"title":"Collection.and()","slug":"Collection/Collection.and()","layout":"docs"},"Collection.clone()":{"title":"Collection.clone()","slug":"Collection/Collection.clone()","layout":"docs"},"Collection.count()":{"title":"Collection.count()","slug":"Collection/Collection.count()","layout":"docs"},"Collection.delete()":{"title":"Collection.delete()","slug":"Collection/Collection.delete()","layout":"docs"},"Collection.desc()":{"title":"Collection.desc()","slug":"Collection/Collection.desc()","layout":"docs"},"Collection.distinct()":{"title":"Collection.distinct()","slug":"Collection/Collection.distinct()","layout":"docs"},"Collection.each()":{"title":"Collection.each()","slug":"Collection/Collection.each()","layout":"docs"},"Collection.eachKey()":{"title":"Collection.eachKey()","slug":"Collection/Collection.eachKey()","layout":"docs"},"Collection.eachPrimaryKey()":{"title":"Collection.eachPrimaryKey()","slug":"Collection/Collection.eachPrimaryKey()","layout":"docs"},"Collection.eachUniqueKey()":{"title":"Collection.eachUniqueKey()","slug":"Collection/Collection.eachUniqueKey()","layout":"docs"},"Collection.filter()":{"title":"Collection.filter()","slug":"Collection/Collection.filter()","layout":"docs"},"Collection.first()":{"title":"Collection.first()","slug":"Collection/Collection.first()","layout":"docs"},"Collection.keys()":{"title":"Collection.keys()","slug":"Collection/Collection.keys()","layout":"docs"},"Collection.last()":{"title":"Collection.last()","slug":"Collection/Collection.last()","layout":"docs"},"Collection.limit()":{"title":"Collection.limit()","slug":"Collection/Collection.limit()","layout":"docs"},"Collection":{"title":"Collection","slug":"Collection/Collection","layout":"docs"},"Collection.modify()":{"title":"Collection.modify()","slug":"Collection/Collection.modify()","layout":"docs"},"Collection.offset()":{"title":"Collection.offset()","slug":"Collection/Collection.offset()","layout":"docs"},"Collection.or()":{"title":"Collection.or()","slug":"Collection/Collection.or()","layout":"docs"},"Collection.primaryKeys()":{"title":"Collection.primaryKeys()","slug":"Collection/Collection.primaryKeys()","layout":"docs"},"Collection.raw()":{"title":"Collection.raw()","slug":"Collection/Collection.raw()","layout":"docs"},"Collection.reverse()":{"title":"Collection.reverse()","slug":"Collection/Collection.reverse()","layout":"docs"},"Collection.sortBy()":{"title":"Collection.sortBy()","slug":"Collection/Collection.sortBy()","layout":"docs"},"Collection.toArray()":{"title":"Collection.toArray()","slug":"Collection/Collection.toArray()","layout":"docs"},"Collection.uniqueKeys()":{"title":"Collection.uniqueKeys()","slug":"Collection/Collection.uniqueKeys()","layout":"docs"},"Collection.until()":{"title":"Collection.until()","slug":"Collection/Collection.until()","layout":"docs"}},"Compound-Index":{"title":"Compound Index","slug":"Compound-Index","layout":"docs"},"DBCore":{"DBCore":{"title":"DBCore","slug":"DBCore/DBCore","layout":"docs"},"DBCoreAddRequest":{"title":"DBCoreAddRequest","slug":"DBCore/DBCoreAddRequest","layout":"docs"},"DBCoreCountRequest":{"title":"DBCoreCountRequest","slug":"DBCore/DBCoreCountRequest","layout":"docs"},"DBCoreCursor":{"title":"DBCoreCursor","slug":"DBCore/DBCoreCursor","layout":"docs"},"DBCoreDeleteRangeRequest":{"title":"DBCoreDeleteRangeRequest","slug":"DBCore/DBCoreDeleteRangeRequest","layout":"docs"},"DBCoreDeleteRequest":{"title":"DBCoreDeleteRequest","slug":"DBCore/DBCoreDeleteRequest","layout":"docs"},"DBCoreGetManyRequest":{"title":"DBCoreGetManyRequest","slug":"DBCore/DBCoreGetManyRequest","layout":"docs"},"DBCoreGetRequest":{"title":"DBCoreGetRequest","slug":"DBCore/DBCoreGetRequest","layout":"docs"},"DBCoreIndex":{"title":"DBCoreIndex","slug":"DBCore/DBCoreIndex","layout":"docs"},"DBCoreKeyRange":{"title":"DBCoreKeyRange","slug":"DBCore/DBCoreKeyRange","layout":"docs"},"DBCoreMutateRequest":{"title":"DBCoreMutateRequest","slug":"DBCore/DBCoreMutateRequest","layout":"docs"},"DBCoreMutateResponse":{"title":"DBCoreMutateResponse","slug":"DBCore/DBCoreMutateResponse","layout":"docs"},"DBCoreOpenCursorRequest":{"title":"DBCoreOpenCursorRequest","slug":"DBCore/DBCoreOpenCursorRequest","layout":"docs"},"DBCorePutRequest":{"title":"DBCorePutRequest","slug":"DBCore/DBCorePutRequest","layout":"docs"},"DBCoreQuery":{"title":"DBCoreQuery","slug":"DBCore/DBCoreQuery","layout":"docs"},"DBCoreQueryRequest":{"title":"DBCoreQueryRequest","slug":"DBCore/DBCoreQueryRequest","layout":"docs"},"DBCoreQueryResponse":{"title":"DBCoreQueryResponse","slug":"DBCore/DBCoreQueryResponse","layout":"docs"},"DBCoreRangeType":{"title":"DBCoreRangeType","slug":"DBCore/DBCoreRangeType","layout":"docs"},"DBCoreSchema":{"title":"DBCoreSchema","slug":"DBCore/DBCoreSchema","layout":"docs"},"DBCoreTable":{"title":"DBCoreTable","slug":"DBCore/DBCoreTable","layout":"docs"},"DBCoreTableSchema":{"title":"DBCoreTableSchema","slug":"DBCore/DBCoreTableSchema","layout":"docs"},"DBCoreTransaction":{"title":"DBCoreTransaction","slug":"DBCore/DBCoreTransaction","layout":"docs"},"DBCoreTransactionMode":{"title":"DBCoreTransactionMode","slug":"DBCore/DBCoreTransactionMode","layout":"docs"}},"Deprecations":{"title":"Deprecations","slug":"Deprecations","layout":"docs"},"DerivedWork":{"title":"Derived Work","slug":"DerivedWork","layout":"docs"},"Dexie":{"Dexie.[table]":{"title":"Dexie.[table]","slug":"Dexie/Dexie.[table]","layout":"docs"},"Dexie.addons":{"title":"Dexie.addons","slug":"Dexie/Dexie.addons","layout":"docs"},"Dexie.async()":{"title":"Dexie.async()","slug":"Dexie/Dexie.async()","layout":"docs"},"Dexie.backendDB()":{"title":"Dexie.backendDB()","slug":"Dexie/Dexie.backendDB()","layout":"docs"},"Dexie.close()":{"title":"Dexie.close()","slug":"Dexie/Dexie.close()","layout":"docs"},"Dexie.currentTransaction":{"title":"Dexie.currentTransaction","slug":"Dexie/Dexie.currentTransaction","layout":"docs"},"Dexie.debug":{"title":"Dexie.debug","slug":"Dexie/Dexie.debug","layout":"docs"},"Dexie.deepClone()":{"title":"Dexie.deepClone()","slug":"Dexie/Dexie.deepClone()","layout":"docs"},"Dexie.defineClass()":{"title":"Dexie.defineClass()","slug":"Dexie/Dexie.defineClass()","layout":"docs"},"Dexie.delByKeyPath()":{"title":"Dexie.delByKeyPath()","slug":"Dexie/Dexie.delByKeyPath()","layout":"docs"},"Dexie.delete()":{"title":"Dexie.delete()","slug":"Dexie/Dexie.delete()","layout":"docs"},"Dexie.derive()":{"title":"Dexie.derive()","slug":"Dexie/Dexie.derive()","layout":"docs"},"Dexie.events()":{"title":"Dexie.events()","slug":"Dexie/Dexie.events()","layout":"docs"},"Dexie.exists()":{"title":"Dexie.exists()","slug":"Dexie/Dexie.exists()","layout":"docs"},"Dexie.extend()":{"title":"Dexie.extend()","slug":"Dexie/Dexie.extend()","layout":"docs"},"Dexie.fakeAutoComplete()":{"title":"Dexie.fakeAutoComplete()","slug":"Dexie/Dexie.fakeAutoComplete()","layout":"docs"},"Dexie.getByKeyPath()":{"title":"Dexie.getByKeyPath()","slug":"Dexie/Dexie.getByKeyPath()","layout":"docs"},"Dexie.getDatabaseNames()":{"title":"Dexie.getDatabaseNames()","slug":"Dexie/Dexie.getDatabaseNames()","layout":"docs"},"Dexie.hasFailed()":{"title":"Dexie.hasFailed()","slug":"Dexie/Dexie.hasFailed()","layout":"docs"},"Dexie.ignoreTransaction()":{"title":"Dexie.ignoreTransaction()","slug":"Dexie/Dexie.ignoreTransaction()","layout":"docs"},"Dexie.isOpen()":{"title":"Dexie.isOpen()","slug":"Dexie/Dexie.isOpen()","layout":"docs"},"Dexie":{"title":"Dexie Constructor","slug":"Dexie/Dexie","layout":"docs"},"Dexie.name":{"title":"Dexie.name","slug":"Dexie/Dexie.name","layout":"docs"},"Dexie.on()":{"title":"Dexie.on()","slug":"Dexie/Dexie.on()","layout":"docs"},"Dexie.on.blocked":{"title":"Dexie.on.blocked","slug":"Dexie/Dexie.on.blocked","layout":"docs"},"Dexie.on.close":{"title":"Dexie.on.close","slug":"Dexie/Dexie.on.close","layout":"docs"},"Dexie.on.error":{"title":"Dexie.on.error","slug":"Dexie/Dexie.on.error","layout":"docs"},"Dexie.on.populate-(old-version)":{"title":"Dexie.on.populate-(old-version)","slug":"Dexie/Dexie.on.populate-(old-version)","layout":"docs"},"Dexie.on.populate":{"title":"Dexie.on.populate","slug":"Dexie/Dexie.on.populate","layout":"docs"},"Dexie.on.ready":{"title":"Dexie.on.ready","slug":"Dexie/Dexie.on.ready","layout":"docs"},"Dexie.on.storagemutated":{"title":"Dexie.on.storagemutated","slug":"Dexie/Dexie.on.storagemutated","layout":"docs"},"Dexie.on.versionchange":{"title":"Dexie.on.versionchange","slug":"Dexie/Dexie.on.versionchange","layout":"docs"},"Dexie.open()":{"title":"Dexie.open()","slug":"Dexie/Dexie.open()","layout":"docs"},"Dexie.override()":{"title":"Dexie.override()","slug":"Dexie/Dexie.override()","layout":"docs"},"Dexie.semVer":{"title":"Dexie.semVer","slug":"Dexie/Dexie.semVer","layout":"docs"},"Dexie.setByKeyPath()":{"title":"Dexie.setByKeyPath()","slug":"Dexie/Dexie.setByKeyPath()","layout":"docs"},"Dexie.shallowClone()":{"title":"Dexie.shallowClone()","slug":"Dexie/Dexie.shallowClone()","layout":"docs"},"Dexie.spawn()":{"title":"Dexie.spawn()","slug":"Dexie/Dexie.spawn()","layout":"docs"},"Dexie.table()":{"title":"Dexie.table()","slug":"Dexie/Dexie.table()","layout":"docs"},"Dexie.tables":{"title":"Dexie.tables","slug":"Dexie/Dexie.tables","layout":"docs"},"Dexie.transaction()-(old-version)":{"title":"Dexie.transaction()-(old-version)","slug":"Dexie/Dexie.transaction()-(old-version)","layout":"docs"},"Dexie.transaction()":{"title":"Dexie.transaction()","slug":"Dexie/Dexie.transaction()","layout":"docs"},"Dexie.use()":{"title":"Dexie.use()","slug":"Dexie/Dexie.use()","layout":"docs"},"Dexie.verno":{"title":"Dexie.verno","slug":"Dexie/Dexie.verno","layout":"docs"},"Dexie.version()":{"title":"Dexie.version()","slug":"Dexie/Dexie.version()","layout":"docs"},"Dexie.version":{"title":"Dexie.version","slug":"Dexie/Dexie.version","layout":"docs"},"Dexie.vip()":{"title":"Dexie.vip()","slug":"Dexie/Dexie.vip()","layout":"docs"},"Dexie.waitFor()":{"title":"Dexie.waitFor()","slug":"Dexie/Dexie.waitFor()","layout":"docs"}},"Dexie.js":{"title":"Dexie.js","slug":"Dexie.js","layout":"docs"},"DexieErrors":{"Dexie.AbortError":{"title":"Dexie.AbortError","slug":"DexieErrors/Dexie.AbortError","layout":"docs"},"Dexie.BulkError":{"title":"Dexie.BulkError","slug":"DexieErrors/Dexie.BulkError","layout":"docs"},"Dexie.ConstraintError":{"title":"Dexie.ConstraintError","slug":"DexieErrors/Dexie.ConstraintError","layout":"docs"},"Dexie.DataCloneError":{"title":"Dexie.DataCloneError","slug":"DexieErrors/Dexie.DataCloneError","layout":"docs"},"Dexie.DataError":{"title":"Dexie.DataError","slug":"DexieErrors/Dexie.DataError","layout":"docs"},"Dexie.DatabaseClosedError":{"title":"Dexie.DatabaseClosedError","slug":"DexieErrors/Dexie.DatabaseClosedError","layout":"docs"},"Dexie.IncompatiblePromiseError":{"title":"Dexie.IncompatiblePromiseError","slug":"DexieErrors/Dexie.IncompatiblePromiseError","layout":"docs"},"Dexie.InternalError":{"title":"Dexie.InternalError","slug":"DexieErrors/Dexie.InternalError","layout":"docs"},"Dexie.InvalidAccessError":{"title":"Dexie.InvalidAccessError","slug":"DexieErrors/Dexie.InvalidAccessError","layout":"docs"},"Dexie.InvalidArgumentError":{"title":"Dexie.InvalidArgumentError","slug":"DexieErrors/Dexie.InvalidArgumentError","layout":"docs"},"Dexie.InvalidStateError":{"title":"Dexie.InvalidStateError","slug":"DexieErrors/Dexie.InvalidStateError","layout":"docs"},"Dexie.InvalidTableError":{"title":"Dexie.InvalidTableError","slug":"DexieErrors/Dexie.InvalidTableError","layout":"docs"},"Dexie.MissingAPIError":{"title":"Dexie.MissingAPIError","slug":"DexieErrors/Dexie.MissingAPIError","layout":"docs"},"Dexie.ModifyError":{"title":"Dexie.ModifyError","slug":"DexieErrors/Dexie.ModifyError","layout":"docs"},"Dexie.NoSuchDatabaseError":{"title":"Dexie.NoSuchDatabaseErrorError","slug":"DexieErrors/Dexie.NoSuchDatabaseError","layout":"docs"},"Dexie.NotFoundError":{"title":"Dexie.NotFoundError","slug":"DexieErrors/Dexie.NotFoundError","layout":"docs"},"Dexie.OpenFailedError":{"title":"Dexie.OpenFailedError","slug":"DexieErrors/Dexie.OpenFailedError","layout":"docs"},"Dexie.PrematureCommitError":{"title":"Dexie.PrematureCommitError","slug":"DexieErrors/Dexie.PrematureCommitError","layout":"docs"},"Dexie.QuotaExceededError":{"title":"Dexie.QuotaExceededError","slug":"DexieErrors/Dexie.QuotaExceededError","layout":"docs"},"Dexie.ReadOnlyError":{"title":"Dexie.ReadOnlyError","slug":"DexieErrors/Dexie.ReadOnlyError","layout":"docs"},"Dexie.SchemaError":{"title":"Dexie.SchemaError","slug":"DexieErrors/Dexie.SchemaError","layout":"docs"},"Dexie.SubTransactionError":{"title":"Dexie.SubTransactionError","slug":"DexieErrors/Dexie.SubTransactionError","layout":"docs"},"Dexie.TimeoutError":{"title":"Dexie.TimeoutError","slug":"DexieErrors/Dexie.TimeoutError","layout":"docs"},"Dexie.TransactionInactiveError":{"title":"Dexie.TransactionInactiveError","slug":"DexieErrors/Dexie.TransactionInactiveError","layout":"docs"},"Dexie.UnknownError":{"title":"Dexie.UnknownError","slug":"DexieErrors/Dexie.UnknownError","layout":"docs"},"Dexie.UnsupportedError":{"title":"Dexie.UnsupportedError","slug":"DexieErrors/Dexie.UnsupportedError","layout":"docs"},"Dexie.UpgradeError":{"title":"Dexie.UpgradeError()","slug":"DexieErrors/Dexie.UpgradeError","layout":"docs"},"Dexie.VersionChangeError":{"title":"Dexie.VersionChangeError","slug":"DexieErrors/Dexie.VersionChangeError","layout":"docs"},"Dexie.VersionError":{"title":"Dexie.VersionError","slug":"DexieErrors/Dexie.VersionError","layout":"docs"},"DexieError":{"title":"DexieError","slug":"DexieErrors/DexieError","layout":"docs"}},"Download":{"title":"Download","slug":"Download","layout":"docs"},"EntityTable":{"title":"EntityTable","slug":"EntityTable","layout":"docs"},"ExportImport":{"dexie-export-import":{"title":"Export and Import Database","slug":"ExportImport/dexie-export-import","layout":"docs"}},"IndexSpec":{"title":"IndexSpec","slug":"IndexSpec","layout":"docs"},"Indexable-Type":{"title":"Indexable Type","slug":"Indexable-Type","layout":"docs"},"IndexedDB-on-Safari":{"title":"IndexedDB on Safari","slug":"IndexedDB-on-Safari","layout":"docs"},"MultiEntry-Index":{"title":"MultiEntry Index","slug":"MultiEntry-Index","layout":"docs"},"Observable":{"Dexie.Observable.DatabaseChange":{"title":"Dexie.Observable.DatabaseChange","slug":"Observable/Dexie.Observable.DatabaseChange","layout":"docs"},"Dexie.Observable":{"title":"Dexie.Observable","slug":"Observable/Dexie.Observable","layout":"docs"}},"Promise":{"Promise.PSD":{"title":"Promise.PSD","slug":"Promise/Promise.PSD","layout":"docs"},"Promise.catch()":{"title":"Promise.catch()","slug":"Promise/Promise.catch()","layout":"docs"},"Promise.finally()":{"title":"Promise.finally()","slug":"Promise/Promise.finally()","layout":"docs"},"Promise":{"title":"Promise","slug":"Promise/Promise","layout":"docs"},"Promise.on.error":{"title":"Promise.on.error","slug":"Promise/Promise.on.error","layout":"docs"},"Promise.onuncatched":{"title":"Promise.onuncatched","slug":"Promise/Promise.onuncatched","layout":"docs"},"unhandledrejection-event":{"title":"unhandledrejection-event","slug":"Promise/unhandledrejection-event","layout":"docs"}},"PropModification":{"add()":{"title":"Consistent add() operator","slug":"PropModification/add()","layout":"docs"},"remove()":{"title":"Consistent remove() operator","slug":"PropModification/remove()","layout":"docs"},"replacePrefix()":{"title":"Consistent replacePrefix() operator","slug":"PropModification/replacePrefix()","layout":"docs"}},"Questions-and-Answers":{"title":"Questions and Answers","slug":"Questions-and-Answers","layout":"docs"},"Releasing-Dexie":{"title":"Releasing Dexie","slug":"Releasing-Dexie","layout":"docs"},"Samples":{"title":"Samples","slug":"Samples","layout":"docs-freestyle"},"Simplify-with-yield":{"title":"Simplify with yield","slug":"Simplify-with-yield","layout":"docs"},"StorageManager":{"title":"How To Use the StorageManager API","slug":"StorageManager","layout":"docs"},"Syncable":{"Dexie.Syncable.IDatabaseChange":{"title":"Dexie.Syncable.IDatabaseChange","slug":"Syncable/Dexie.Syncable.IDatabaseChange","layout":"docs"},"Dexie.Syncable.IPersistedContext":{"title":"Dexie.Syncable.IPersistentContext","slug":"Syncable/Dexie.Syncable.IPersistedContext","layout":"docs"},"Dexie.Syncable.ISyncProtocol":{"title":"Dexie.Syncable.ISyncProtocol","slug":"Syncable/Dexie.Syncable.ISyncProtocol","layout":"docs"},"Dexie.Syncable.StatusTexts":{"title":"Dexie.Syncable.StatusTexts","slug":"Syncable/Dexie.Syncable.StatusTexts","layout":"docs"},"Dexie.Syncable.Statuses":{"title":"Dexie.Syncable.Statuses","slug":"Syncable/Dexie.Syncable.Statuses","layout":"docs"},"Dexie.Syncable.js":{"title":"Dexie.Syncable","slug":"Syncable/Dexie.Syncable.js","layout":"docs"},"Dexie.Syncable.registerSyncProtocol()":{"title":"Dexie.Syncable.registerSyncProtocol()","slug":"Syncable/Dexie.Syncable.registerSyncProtocol()","layout":"docs"},"db.syncable.connect()":{"title":"db.syncable.connect()","slug":"Syncable/db.syncable.connect()","layout":"docs"},"db.syncable.delete()":{"title":"db.syncable.delete()","slug":"Syncable/db.syncable.delete()","layout":"docs"},"db.syncable.disconnect()":{"title":"db.syncable.disconnect()","slug":"Syncable/db.syncable.disconnect()","layout":"docs"},"db.syncable.getOptions()":{"title":"db.syncable.getOptions()","slug":"Syncable/db.syncable.getOptions()","layout":"docs"},"db.syncable.getStatus()":{"title":"db.syncable.getStatus()","slug":"Syncable/db.syncable.getStatus()","layout":"docs"},"db.syncable.list()":{"title":"db.syncable.list()","slug":"Syncable/db.syncable.list()","layout":"docs"},"db.syncable.on('statusChanged')":{"title":"db.syncable.on('statusChanged')","slug":"Syncable/db.syncable.on('statusChanged')","layout":"docs"},"db.syncable.setFilter()":{"title":"db.syncable.setFilter()","slug":"Syncable/db.syncable.setFilter()","layout":"docs"}},"Table":{"Table.add()":{"title":"Table.add()","slug":"Table/Table.add()","layout":"docs"},"Table.bulkAdd()":{"title":"Table.bulkAdd()","slug":"Table/Table.bulkAdd()","layout":"docs"},"Table.bulkDelete()":{"title":"Table.bulkDelete()","slug":"Table/Table.bulkDelete()","layout":"docs"},"Table.bulkGet()":{"title":"Table.bulkGet()","slug":"Table/Table.bulkGet()","layout":"docs"},"Table.bulkPut()":{"title":"Table.bulkPut()","slug":"Table/Table.bulkPut()","layout":"docs"},"Table.bulkUpdate()":{"title":"Table.bulkUpdate()","slug":"Table/Table.bulkUpdate()","layout":"docs"},"Table.clear()":{"title":"Table.clear()","slug":"Table/Table.clear()","layout":"docs"},"Table.count()":{"title":"Table.count()","slug":"Table/Table.count()","layout":"docs"},"Table.defineClass()":{"title":"Table.defineClass()","slug":"Table/Table.defineClass()","layout":"docs"},"Table.delete()":{"title":"Table.delete()","slug":"Table/Table.delete()","layout":"docs"},"Table.each()":{"title":"Table.each()","slug":"Table/Table.each()","layout":"docs"},"Table.filter()":{"title":"Table.filter()","slug":"Table/Table.filter()","layout":"docs"},"Table.get()":{"title":"Table.get()","slug":"Table/Table.get()","layout":"docs"},"Table.hook('creating')":{"title":"Table.hook('creating')","slug":"Table/Table.hook('creating')","layout":"docs"},"Table.hook('deleting')":{"title":"Table.hook('deleting')","slug":"Table/Table.hook('deleting')","layout":"docs"},"Table.hook('reading')":{"title":"Table.hook('reading')","slug":"Table/Table.hook('reading')","layout":"docs"},"Table.hook('updating')":{"title":"Table.hook('updating')","slug":"Table/Table.hook('updating')","layout":"docs"},"Table.limit()":{"title":"Table.limit()","slug":"Table/Table.limit()","layout":"docs"},"Table.mapToClass()":{"title":"Table.mapToClass()","slug":"Table/Table.mapToClass()","layout":"docs"},"Table":{"title":"Table","slug":"Table/Table","layout":"docs"},"Table.name":{"title":"Table.name","slug":"Table/Table.name","layout":"docs"},"Table.offset()":{"title":"Table.offset()","slug":"Table/Table.offset()","layout":"docs"},"Table.orderBy()":{"title":"Table.orderBy()","slug":"Table/Table.orderBy()","layout":"docs"},"Table.put()":{"title":"Table.put()","slug":"Table/Table.put()","layout":"docs"},"Table.reverse()":{"title":"Table.reverse()","slug":"Table/Table.reverse()","layout":"docs"},"Table.schema":{"title":"Table.schema","slug":"Table/Table.schema","layout":"docs"},"Table.toArray()":{"title":"Table.toArray()","slug":"Table/Table.toArray()","layout":"docs"},"Table.toCollection()":{"title":"Table.toCollection()","slug":"Table/Table.toCollection()","layout":"docs"},"Table.update()":{"title":"Table.update()","slug":"Table/Table.update()","layout":"docs"},"Table.upsert()":{"title":"Table.upsert()","slug":"Table/Table.upsert()","layout":"docs"},"Table.where()":{"title":"Table.where()","slug":"Table/Table.where()","layout":"docs"}},"TableSchema":{"title":"Table Schema","slug":"TableSchema","layout":"docs"},"The-Main-Limitations-of-IndexedDB":{"title":"The main limitations of IndexedDB","slug":"The-Main-Limitations-of-IndexedDB","layout":"docs"},"The-Three-Main-Limitations-of-IndexedDB":{"title":"The three main limitations of IndexedDB","slug":"The-Three-Main-Limitations-of-IndexedDB","layout":"redirect"},"Transaction":{"Transaction.abort()":{"title":"Transaction.abort()","slug":"Transaction/Transaction.abort()","layout":"docs"},"Transaction":{"title":"Transaction","slug":"Transaction/Transaction","layout":"docs"},"Transaction.on.abort":{"title":"Transaction.on.abort","slug":"Transaction/Transaction.on.abort","layout":"docs"},"Transaction.on.complete":{"title":"Transaction.on.complete","slug":"Transaction/Transaction.on.complete","layout":"docs"},"Transaction.on.error":{"title":"Transaction.on.error","slug":"Transaction/Transaction.on.error","layout":"docs"},"Transaction.table()":{"title":"Transaction.table()","slug":"Transaction/Transaction.table()","layout":"docs"}},"Tutorial":{"Angular":{"title":"Get started with Dexie in Angular","slug":"Tutorial/Angular","layout":"docs"},"Best-Practices":{"title":"Best Practices","slug":"Tutorial/Best-Practices","layout":"docs"},"Building-Addons":{"title":"Building Addons","slug":"Tutorial/Building-Addons","layout":"docs"},"Consuming-dexie-as-a-module":{"title":"Consuming Dexie as a module","slug":"Tutorial/Consuming-dexie-as-a-module","layout":"docs"},"Design":{"title":"Design","slug":"Tutorial/Design","layout":"docs"},"Dexie-Cloud":{"title":"Get started with Dexie Cloud","slug":"Tutorial/Dexie-Cloud","layout":"docs-dexie-cloud"},"Getting-started":{"title":"Getting Started with Dexie.js","slug":"Tutorial/Getting-started","layout":"docs-freestyle"},"Hello-World":{"title":"Hello World","slug":"Tutorial/Hello-World","layout":"docs"},"Migrating-existing-DB-to-Dexie":{"title":"Migrating existing DB to Dexie","slug":"Tutorial/Migrating-existing-DB-to-Dexie","layout":"docs"},"React":{"title":"Get started with Dexie in React","slug":"Tutorial/React","layout":"docs"},"Svelte":{"title":"Get started with Dexie in Svelte","slug":"Tutorial/Svelte","layout":"docs"},"Understanding-the-basics":{"title":"Understanding the basics","slug":"Tutorial/Understanding-the-basics","layout":"docs"},"Vue":{"title":"Get started with Dexie in Vue","slug":"Tutorial/Vue","layout":"docs"},"index":{"title":"Tutorial","slug":"Tutorial/index","layout":"docs"}},"Typescript-old":{"title":"Typescript (old)","slug":"Typescript-old","layout":"docs"},"Typescript":{"title":"Typescript","slug":"Typescript","layout":"docs"},"Version":{"Version":{"title":"Version","slug":"Version/Version","layout":"docs"},"Version.stores()":{"title":"Version.stores()","slug":"Version/Version.stores()","layout":"docs"},"Version.upgrade()":{"title":"Version.upgrade()","slug":"Version/Version.upgrade()","layout":"docs"}},"WhereClause":{"WhereClause.above()":{"title":"WhereClause.above()","slug":"WhereClause/WhereClause.above()","layout":"docs"},"WhereClause.aboveOrEqual()":{"title":"WhereClause.aboveOrEqual()","slug":"WhereClause/WhereClause.aboveOrEqual()","layout":"docs"},"WhereClause.anyOf()":{"title":"WhereClause.anyOf()","slug":"WhereClause/WhereClause.anyOf()","layout":"docs"},"WhereClause.anyOfIgnoreCase()":{"title":"WhereClause.anyOfIgnoreCase()","slug":"WhereClause/WhereClause.anyOfIgnoreCase()","layout":"docs"},"WhereClause.below()":{"title":"WhereClause.below()","slug":"WhereClause/WhereClause.below()","layout":"docs"},"WhereClause.belowOrEqual()":{"title":"WhereClause.belowOrEqual()","slug":"WhereClause/WhereClause.belowOrEqual()","layout":"docs"},"WhereClause.between()":{"title":"WhereClause.between()","slug":"WhereClause/WhereClause.between()","layout":"docs"},"WhereClause.equals()":{"title":"WhereClause.equals()","slug":"WhereClause/WhereClause.equals()","layout":"docs"},"WhereClause.equalsIgnoreCase()":{"title":"WhereClause.equalsIgnoreCase()","slug":"WhereClause/WhereClause.equalsIgnoreCase()","layout":"docs"},"WhereClause.inAnyRange()":{"title":"WhereClause.inAnyRange()","slug":"WhereClause/WhereClause.inAnyRange()","layout":"docs"},"WhereClause":{"title":"WhereClause","slug":"WhereClause/WhereClause","layout":"docs"},"WhereClause.noneOf()":{"title":"WhereClause.noneOf()","slug":"WhereClause/WhereClause.noneOf()","layout":"docs"},"WhereClause.notEqual()":{"title":"WhereClause.notEqual()","slug":"WhereClause/WhereClause.notEqual()","layout":"docs"},"WhereClause.startsWith()":{"title":"WhereClause.startsWith()","slug":"WhereClause/WhereClause.startsWith()","layout":"docs"},"WhereClause.startsWithAnyOf()":{"title":"WhereClause.startsWithAnyOf()","slug":"WhereClause/WhereClause.startsWithAnyOf()","layout":"docs"},"WhereClause.startsWithAnyOfIgnoreCase()":{"title":"WhereClause.startsWithAnyOfIgnoreCase()","slug":"WhereClause/WhereClause.startsWithAnyOfIgnoreCase()","layout":"docs"},"WhereClause.startsWithIgnoreCase()":{"title":"WhereClause.startsWithIgnoreCase()","slug":"WhereClause/WhereClause.startsWithIgnoreCase()","layout":"docs"}},"Y.js":{"Y.js":{"title":"Y.js","slug":"Y.js/Y.js","layout":"docs"},"y-dexie":{"title":"y-dexie","slug":"Y.js/y-dexie","layout":"docs"}},"dexie-react-hooks":{"useDocument()":{"title":"useDocument()","slug":"dexie-react-hooks/useDocument()","layout":"docs"},"useLiveQuery()":{"title":"useLiveQuery()","slug":"dexie-react-hooks/useLiveQuery()","layout":"docs"},"useObservable()":{"title":"useObservable()","slug":"dexie-react-hooks/useObservable()","layout":"docs"},"usePermissions()":{"title":"usePermissions()","slug":"dexie-react-hooks/usePermissions()","layout":"docs"}},"dexie-worker":{"dexie-worker":{"title":"dexie-worker","slug":"dexie-worker/dexie-worker","layout":"docs"}},"inbound":{"title":"Inbound","slug":"inbound","layout":"docs"},"index":{"title":"Docs Home","slug":"index","layout":"docs"},"libs":{"dexie-react-hooks":{"title":"dexie-react-hooks","slug":"libs/dexie-react-hooks","layout":"docs"}},"liveQuery()":{"title":"liveQuery()","slug":"liveQuery()","layout":"docs"},"safari-issues":{"title":"safari-issues","slug":"safari-issues","layout":"$undefined"}},"currentSlug":"dexie-react-hooks/useLiveQuery()","pageTitle":"useLiveQuery()","children":"$L1e"}]
1f:I[19646,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
20:I[26863,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
21:I[72729,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
22:I[63876,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
23:T6c8,
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useLiveQuery</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> TDefault<span class="token operator">=</span><span class="token keyword">undefined</span><span class="token operator">></span></span></span> <span class="token punctuation">(</span>
  <span class="token function-variable function">querier</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token operator">|</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  deps<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// ...like deps argument in useEffect() but defaults to empty array.</span>
  defaultResult<span class="token operator">?</span><span class="token operator">:</span> TDefault <span class="token comment">// Default value returned while data is loading</span>
<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> TDefault<span class="token punctuation">;</span>

1e:["$","$L1f",null,{"component":"article","children":[["$","$L1f",null,{"component":"header","sx":{"mb":5},"children":["$","$L20",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"useLiveQuery()"}]}],["$","$L1f",null,{"className":"docs-content","children":["$","$L1f",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L20","mdx-1",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Remarks"}],"\n",["$","$L20","mdx-2",{"variant":"body1","component":"div","paragraph":true,"children":"Observe IndexedDB data in your React component. Make the component re-render when the observed data changes."}],"\n",["$","$L20","mdx-3",{"variant":"h1","component":"h1","gutterBottom":true,"children":"See Also"}],"\n",["$","$L20","mdx-5",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-4",{"href":"https://dexie.org/docs/liveQuery()","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"liveQuery()"}]}],"\n",["$","$L20","mdx-6",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Dependencies"}],"\n",["$","$1","10",{"children":["$","$L1f","mdx-7",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"npm i react dexie dexie-react-hooks\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"npm i react dexie dexie<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>hooks\n"}}]}]]}]}]}],"\n",["$","$L20","mdx-8",{"variant":"body1","component":"div","paragraph":true,"children":"or"}],"\n",["$","$1","14",{"children":["$","$L1f","mdx-9",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"yarn add react dexie dexie-react-hooks\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"yarn add react dexie dexie<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>hooks\n"}}]}]]}]}]}],"\n",["$","$L20","mdx-10",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Syntax"}],"\n",["$","$1","18",{"children":["$","$L1f","mdx-11",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"\nexport function useLiveQuery<T, TDefault=undefined> (\n  querier: () => Promise<T> | T,\n  deps?: any[], // ...like deps argument in useEffect() but defaults to empty array.\n  defaultResult?: TDefault // Default value returned while data is loading\n) : T | TDefault;\n\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$23"}}]}]]}]}]}],"\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n"]}]}],"$L42"]}]
43:I[32412,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
44:I[65801,["/_next/static/chunks/5a665d09998d4862.js","/_next/static/chunks/5dd0231c54ee754c.js","/_next/static/chunks/8f22b4bf63a49712.js","/_next/static/chunks/68e80996639386d6.js","/_next/static/chunks/ff5f09f4edae29eb.js","/_next/static/chunks/067210b58f941f94.js","/_next/static/chunks/468ad4deeea646ae.js"],"default"]
24:["$","div","20",{"style":{"marginBottom":"24px","width":"fit-content","maxWidth":"100%","overflow":"auto","border":"1px solid rgba(255, 255, 255, 0.12)","borderRadius":"4px"},"children":["$","table",null,{"style":{"width":"100%","borderCollapse":"collapse"},"children":[["$","thead","1",{"children":["$","tr","1",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","th","1",{"style":{"padding":"16px","textAlign":"left","fontWeight":"bold","borderBottom":"2px solid rgba(255, 255, 255, 0.12)","backgroundColor":"rgba(255, 255, 255, 0.08)"},"children":["$","$L20",null,{"variant":"subtitle2","component":"span","children":"Parameter"}]}],["$","th","3",{"style":{"padding":"16px","textAlign":"left","fontWeight":"bold","borderBottom":"2px solid rgba(255, 255, 255, 0.12)","backgroundColor":"rgba(255, 255, 255, 0.08)"},"children":["$","$L20",null,{"variant":"subtitle2","component":"span","children":"Description"}]}]]}]}],["$","tbody","3",{"children":[["$","tr","1",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"querier"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Function that returns a final result (Promise)"}]]}],["$","tr","3",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"deps"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":["Variables that querier is dependent on (similar to the ",["$","$L1f","mdx-12",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"deps"}]," argument in ",["$","$L1f","mdx-13",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"useEffect()"}],")."]}]]}],["$","tr","5",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"defaultResult"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Result returned on initial render - before the promise have resolved."}]]}]]}]]}]}]
25:["$","$L20","mdx-14",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Rules for the querier function"}]
26:["$","$L43","mdx-18",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L44","mdx-15",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Don't call asynchronous API:s from it except Dexie's APIs."}],"\n",["$","$L44","mdx-17",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["If you really need to call other async API's (such as fetch() or webCrypto), wrap the returned promise through ",["$","$L1f","mdx-16",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"Promise.resolve()"}],". There's an example later in this page on how to do that."]}],"\n"]}]
27:["$","$L20","mdx-19",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Simple Example"}]
45:T112a,<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">"dexie"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useLiveQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"dexie-react-hooks"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./db"</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// React component</span>
<span class="token comment">//</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">OldFriendsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> friends <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> db<span class="token punctuation">.</span>friends
      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">above</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>friends<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// Still loading.</span>
  
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span> friends<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>friend <span class="token operator">=></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token plain-text">, </span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>age<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

28:["$","$1","28",{"children":["$","$L1f","mdx-20",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"import React from \"react\";\nimport Dexie from \"dexie\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { db } from \"./db\";\n\n//\n// React component\n//\nexport function OldFriendsList() {\n  const friends = useLiveQuery(\n    () => db.friends\n      .where('age')\n      .above(75)\n      .toArray()\n  );\n  \n  if (!friends) return null; // Still loading.\n  \n  return <ul>\n    { friends.map(friend =>\n        <li key={friend.id}>\n          {friend.name}, {friend.age}\n        </li>)\n    }\n  </ul>;\n}\n\n"}],["$","pre",null,{"className":"prism-tsx","children":["$","code",null,{"className":"prism-tsx code-highlight","dangerouslySetInnerHTML":{"__html":"$45"}}]}]]}]}]}]
29:["$","$L20","mdx-23",{"variant":"body1","component":"div","paragraph":true,"children":["$","em","mdx-21",{"children":["See also ",["$","$L21","mdx-22",{"href":"https://stackoverflow.com/questions/73526472/how-to-track-if-dexie-uselivequery-is-finished","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"this stackoverflow question (and answer)"}]," on how to determine whether a response is still loading or has returned an undefined result"]}]}]
2a:["$","$L20","mdx-24",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Persistent State Manager"}]
2b:["$","$L20","mdx-30",{"variant":"body1","component":"div","paragraph":true,"children":["The ",["$","$L1f","mdx-25",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"useLiveQuery()"}]," hook does not only load data - it ",["$","em","mdx-26",{"children":"observes"}]," the query for changes. This means that you can use Dexie as a persistent and RAM-sparse state manager in your React application since you don't keep entire database in RAM. If you add, update or delete a friend using Dexie methods for that (such as ",["$","$L21","mdx-27",{"href":"../Table/Table.add()","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Table.add"}],", ",["$","$L21","mdx-28",{"href":"../Table/Table.update()","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Table.update()"}],", ",["$","$L21","mdx-29",{"href":"../Table/Table.delete()","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Table.delete()"}],", ...etc), any component that observes the affected data will automatically rerender."]}]
2c:["$","$L20","mdx-31",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Fine grained observation"}]
2d:["$","$L20","mdx-32",{"variant":"body1","component":"div","paragraph":true,"children":"The observation is as fine-grained as it can possibly be - queries that would be affected by a modification will rerender - others not (with some exceptions - false positives happen but never false negatives). This is also true if your querier callback performs a series of awaited queries or multiple in parallel using Promise.all(). It can even contain if-statements or other conditional paths within it, determining additional queries to make before returning a final result - still, observation will function and never miss an update. No matter how simple or complex the query is - it will be monitored in detail so that if a single part of the query is affected by a change, the querier will be executed and the component will rerender."}]
2e:["$","$L20","mdx-33",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Limitations"}]
2f:["$","$L43","mdx-43",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L44","mdx-35",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","strong","mdx-34",{"children":"Changes must have been made using Dexie.js:"}]," This hook will only observe changes made using Dexie.js. Changes from devtools or another IndexedDB wrapper will not be observed. However, as long as changes were made using Dexie.js version 3.1 or later - be it from a service worker, web worker, other tab or window, the hook will react instantly to any changes affecting the query it observes. This functionality is built-in into Dexie.js itself and a react app will also be able to observe changes made from another app that does not have dexie-react-hooks installed. Since there is no native API for this kind of observation, Dexie made it a first-class citizen for all that use Dexie.js as persistence layer."]}],"\n",["$","$L44","mdx-40",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":[["$","strong","mdx-36",{"children":"Same origin only:"}]," IndexedDB is a per-origin database, meaning that offline data stored for one website cannot read data for another website unless they share the same ",["$","$L21","mdx-37",{"href":"https://developer.mozilla.org/en-US/docs/Glossary/Origin","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"origin"}],". useLiveQuery() will naturally have the same boundary between origins. Syncing data between origins, clients and different browsers or devices require another solution and can be accomplished using our addon ",["$","$L21","mdx-38",{"href":"https://dexie.org/cloud/docs/dexie-cloud-addon","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"dexie-cloud-addon"}]," and our commercial service ",["$","$L21","mdx-39",{"href":"https://dexie.org/cloud/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Dexie Cloud"}],"."]}],"\n",["$","$L44","mdx-42",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["Avoid calling other API's from your querier callback. See ",["$","$L21","mdx-41",{"href":"#calling-non-dexie-apis-from-querier","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Calling non-Dexie APIs from querier"}]," below."]}],"\n"]}]
30:["$","$L20","mdx-44",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Enhanced Example"}]
31:["$","$L20","mdx-45",{"variant":"body1","component":"div","paragraph":true,"children":"This example shows that..."}]
32:["$","$L43","mdx-51",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L44","mdx-46",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"you can observe the result of an arbitrary function that queries Dexie"}],"\n",["$","$L44","mdx-47",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"you can use a state from a useState() result within your querier function (just need to mention it in the deps array)"}],"\n",["$","$L44","mdx-48",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"the component will re-render if the data you are querying change"}],"\n",["$","$L44","mdx-49",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"the component will re-render if in-parameter to the query change."}],"\n",["$","$L44","mdx-50",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"the query will change when state change."}],"\n"]}]
46:T537,import React, { useState } from "react";
import { useLiveQuery } from "dexie-react-hooks";
import { db } from "../db";

export function FriendList() {
  const [maxAge, setMaxAge] = useState(21);

  // Query friends within a certain range decided by state:
  const friends = useLiveQuery(
    () => db.friends.where("age").belowOrEqual(maxAge).sortBy("id"),
    [maxAge] // because maxAge affects query!
  );

  // Example of another query in the same component.
  const friendCount = useLiveQuery(() => db.friends.count());

  // If default values are returned, queries are still loading:
  if (!friends || friendCount === undefined) return null;

  return (
    <div>
      <p>
        Your have <b>{friendCount}</b> friends in total.
      </p>
      <label>
        Please enter max age to query:
        <input
          type="number"
          value={maxAge}
          onChange={(ev) => setMaxAge(parseInt(ev.target.value, 10))}
        />
      </label>
      <ul>
        {friends.map((friend) => (
          <li key={friend.id}>
            {friend.name}, {friend.age}
            <button
              onClick={() =>
                db.friends.where({ id: friend.id }).modify((f) => ++f.age)
              }
            >
              Birthday!
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}
47:T2a19,<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useLiveQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"dexie-react-hooks"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../db"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">FriendList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>maxAge<span class="token punctuation">,</span> setMaxAge<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Query friends within a certain range decided by state:</span>
  <span class="token keyword">const</span> friends <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">belowOrEqual</span><span class="token punctuation">(</span>maxAge<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>maxAge<span class="token punctuation">]</span> <span class="token comment">// because maxAge affects query!</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Example of another query in the same component.</span>
  <span class="token keyword">const</span> friendCount <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// If default values are returned, queries are still loading:</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>friends <span class="token operator">||</span> friendCount <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
        Your have </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>friendCount<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token plain-text"> friends in total.
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token plain-text">
        Please enter max age to query:
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>maxAge<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>friends<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token plain-text">, </span><span class="token punctuation">{</span>friend<span class="token punctuation">.</span>age<span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>
                db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> friend<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">++</span>f<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
              <span class="token punctuation">}</span></span>
            <span class="token punctuation">></span></span><span class="token plain-text">
              Birthday!
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
33:["$","$1","50",{"children":["$","$L1f","mdx-52",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"$46"}],["$","pre",null,{"className":"prism-tsx","children":["$","code",null,{"className":"prism-tsx code-highlight","dangerouslySetInnerHTML":{"__html":"$47"}}]}]]}]}]}]
34:["$","$L20","mdx-54",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-53",{"href":"https://codesandbox.io/s/empty-sky-lnv0q?file=/src/components/FriendList.tsx","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Open in codesandbox"}]}]
35:["$","$L20","mdx-55",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Decoupling"}]
36:["$","$L20","mdx-56",{"variant":"body1","component":"div","paragraph":true,"children":"The expression passed to useLiveQuery() must be a function that returns a promise. If you need to decouple your component from the db, you can provide the querying functions as callbacks instead:"}]
48:T183e,<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">FriendList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>getFriendCount<span class="token punctuation">,</span> getFriendsByAge<span class="token punctuation">,</span> onBirthdayClick<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>

  <span class="token keyword">const</span> friendCount <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span>getFriendCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> friends <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getFriendsByAge</span><span class="token punctuation">(</span>maxAge<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>maxAge<span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token operator">...</span>
      <span class="token comment">// And the button's onClick event:</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">...</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">onBirthdayClick</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token punctuation">}</span>

<span class="token comment">// ...and implement the callback elsewhere...</span>

<span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> <span class="token function-variable function">getFriendCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">const</span> <span class="token function-variable function">getFriendsByAge</span> <span class="token operator">=</span> maxAge <span class="token operator">=></span>
    db<span class="token punctuation">.</span>friends
      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">belowOrEqual</span><span class="token punctuation">(</span>maxAge<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">const</span> <span class="token function-variable function">onBirthdayClick</span> <span class="token operator">=</span> friend <span class="token operator">=></span>
    db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> friend<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span>f <span class="token operator">=></span> <span class="token operator">++</span>f<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FriendList</span></span>
    <span class="token attr-name">fetchFriendCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>getFriendCount<span class="token punctuation">}</span></span>
    <span class="token attr-name">fetchFriendsByAge</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>getFriendsByAge<span class="token punctuation">}</span></span>
    <span class="token attr-name">onBirthdayClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onBirthdayClick<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

37:["$","$1","58",{"children":["$","$L1f","mdx-57",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export function FriendList({getFriendCount, getFriendsByAge, onBirthdayClick}) {\n  ...\n\n  const friendCount = useLiveQuery(getFriendCount);\n\n  const friends = useLiveQuery(\n    () => getFriendsByAge(maxAge), [maxAge]\n  );\n\n  ...\n      // And the button's onClick event:\n      <button ... onClick={()=>onBirthdayClick(friend)}>...</button>\n}\n\n// ...and implement the callback elsewhere...\n\nfunction App () {\n   const getFriendCount = () => db.friends.count();\n\n   const getFriendsByAge = maxAge =>\n    db.friends\n      .where('age')\n      .belowOrEqual(maxAge)\n      .sortBy('id');\n\n   const onBirthdayClick = friend =>\n    db.friends.where({ id: friend.id }).modify(f => ++f.age);\n   \n  return <FriendList\n    fetchFriendCount={getFriendCount}\n    fetchFriendsByAge={getFriendsByAge}\n    onBirthdayClick={onBirthdayClick} />;\n}\n\n"}],["$","pre",null,{"className":"prism-tsx","children":["$","code",null,{"className":"prism-tsx code-highlight","dangerouslySetInnerHTML":{"__html":"$48"}}]}]]}]}]}]
38:["$","$L20","mdx-58",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Calling non-Dexie API:s from querier"}]
39:["$","$L20","mdx-64",{"variant":"body1","component":"div","paragraph":true,"children":["If your querier callback needs to call asynchronous non-Dexie APIs to resolve its result, the promises returned by those non-Dexie API:s needs to be wrapped using ",["$","$L1f","mdx-59",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"Promise.resolve()"}],". This is needed in order to keep the observation context alive between async calls. Even though APIs like ",["$","$L1f","mdx-60",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"fetch()"}],", ",["$","$L1f","mdx-61",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"webCrypto"}]," etc already returns promises, this is still needed in order for useLiveQuery() to function properly. It might feel unnecessary to wrap it with ",["$","$L1f","mdx-62",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"Promise.resolve()"}]," when it's already a promise being returned, but this is a rule that needs to be followed when using ",["$","$L1f","mdx-63",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"useLiveQuery()"}]," with non-Dexie APIs. As of Dexie 3.2.0, you might not notice any warning or error if not following this rule but in a future version of Dexie, it might start throwing some explanatory error if this rule has been forgotten."]}]
49:T1131,<span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> friendWithMetaData <span class="token operator">=</span> <span class="token function">useLiveQuery</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    
    <span class="token comment">// Normal Dexie call:</span>
    <span class="token keyword">const</span> friend <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Calling non-Dexie API - always wrap with Promise.resolve():</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> friendMetaData <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span> <span class="token punctuation">(</span>
        <span class="token comment">// Ok to call fetch if we wrap it with Promise.resolve()</span>
        <span class="token function">fetch</span><span class="token punctuation">(</span>friend<span class="token punctuation">.</span>metaDataUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      friend<span class="token punctuation">.</span>metaData <span class="token operator">=</span> friendMetaData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      friend<span class="token punctuation">.</span>metaData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> friend<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token operator">&lt;</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>Name<span class="token operator">:</span> <span class="token punctuation">{</span>friendWithMetaData<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>FooBar<span class="token operator">:</span> <span class="token punctuation">{</span>friendWithMetaData<span class="token punctuation">.</span>metaData<span class="token operator">?.</span>fooBar<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
3a:["$","$1","64",{"children":["$","$L1f","mdx-65",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"function MyComponent(id) {\n  const friendWithMetaData = useLiveQuery(async () => {\n    \n    // Normal Dexie call:\n    const friend = await db.friends.get(id);\n    \n    // Calling non-Dexie API - always wrap with Promise.resolve():\n    try {\n      const friendMetaData = await Promise.resolve (\n        // Ok to call fetch if we wrap it with Promise.resolve()\n        fetch(friend.metaDataUrl).then(res => res.json())\n      );\n      friend.metaData = friendMetaData;\n    } catch (error) {\n      friend.metaData = null;\n    }\n    return friend;\n  }, [id]);\n  \n  return <>\n    <p>Name: {friendWithMetaData.name}</p>\n    <p>FooBar: {friendWithMetaData.metaData?.fooBar}</p>\n  </>;\n}\n  \n"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"$49"}}]}]]}]}]}]
3b:["$","$L20","mdx-66",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Playgrounds"}]
3c:["$","$L20","mdx-68",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-67",{"href":"https://stackblitz.com/edit/dexie-todo-list?file=components/TodoListView.tsx","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Another sample using useLiveQuery() on Stackblitz"}]}]
3d:["$","$L20","mdx-70",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-69",{"href":"https://codesandbox.io/s/empty-sky-lnv0q?file=/src/components/FriendList.tsx","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"The sample from this page in CodeSandbox"}]}]
3e:["$","$L20","mdx-71",{"variant":"h1","component":"h1","gutterBottom":true,"children":"See also"}]
3f:["$","$L20","mdx-73",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-72",{"href":"/docs/liveQuery()","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"liveQuery()"}]}]
40:["$","$L20","mdx-75",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-74",{"href":"https://medium.com/dexie-js/awesome-react-integration-coming-f212c2273d05","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"A blog post about this"}]}]
41:["$","$L20","mdx-77",{"variant":"body1","component":"div","paragraph":true,"children":["$","$L21","mdx-76",{"href":"/docs/Dexie/Dexie.on.storagemutated","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"Dexie.on.storagemutated"}]}]
42:["$","$L1f",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L20",null,{"variant":"caption","color":"text.secondary","children":"dexie-react-hooks/useLiveQuery()"}],["$","$L20",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/21/2025"]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:null
4a:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
17:{"metadata":[["$","title","0",{"children":"useLiveQuery() | Dexie.js Documentation - Offline-First Database | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"Dexie.js liveQuery() enables reactive database queries. Automatically update React, Vue, Angular components when IndexedDB data changes."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie.js,indexeddb,offline first,javascript database,browser database,react offline,react indexeddb,react database,reactive queries,live queries,real time updates"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie.js, indexeddb, offline first, javascript database, browser database, react offline, react indexeddb, react database, reactive queries, live queries, real time updates"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/docs/dexie-react-hooks/useLiveQuery()"}],["$","meta","13",{"property":"og:title","content":"useLiveQuery() - Dexie.js Documentation"}],["$","meta","14",{"property":"og:description","content":"Dexie.js liveQuery() enables reactive database queries. Automatically update React, Vue, Angular components when IndexedDB data changes."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/docs/dexie-react-hooks/useLiveQuery()"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"useLiveQuery() - Dexie.js Documentation"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"useLiveQuery() - Dexie.js Docs"}],["$","meta","23",{"name":"twitter:description","content":"Dexie.js liveQuery() enables reactive database queries. Automatically update React, Vue, Angular components when IndexedDB data changes."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$L4a","26",{}]],"error":null,"digest":"$undefined"}
1c:"$17:metadata"
