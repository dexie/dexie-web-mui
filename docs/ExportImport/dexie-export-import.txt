1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
4:I[17350,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
5:I[11054,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
6:I[53675,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
7:I[45678,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
10:I[68027,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"93xV5AFzuCIH-ZmW3bTY9","p":"","c":["","docs","ExportImport","dexie-export-import"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","ExportImport/dexie-export-import","c"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/40c7d64eb6baa423.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/979a509c88d32a4e.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/1ee5528f2863dd7c.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/cd47604cae0ad19f.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/a8730058447906a4.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["docs","$Lc",{"children":[["slug","ExportImport/dexie-export-import","c"],"$Ld",{"children":["__PAGE__","$Le",{},null,false]},null,false]},null,false]},null,false],"$Lf",false]],"m":"$undefined","G":["$10",["$L11"]],"s":false,"S":true}
12:I[13642,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
14:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
16:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
18:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1a:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1b:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L12",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":["$L13",[["$","script","script-0",{"src":"/_next/static/chunks/1b8d91388f6c6c81.js","async":true,"nonce":"$undefined"}]],["$","$L14",null,{"children":["$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}]
f:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1d:I[99748,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
13:["$","$L1d",null,{"navigation":{"API-Reference":{"title":"API Reference","slug":"API-Reference","layout":"docs"},"Collection":{"Collection.and()":{"title":"Collection.and()","slug":"Collection/Collection.and()","layout":"docs"},"Collection.clone()":{"title":"Collection.clone()","slug":"Collection/Collection.clone()","layout":"docs"},"Collection.count()":{"title":"Collection.count()","slug":"Collection/Collection.count()","layout":"docs"},"Collection.delete()":{"title":"Collection.delete()","slug":"Collection/Collection.delete()","layout":"docs"},"Collection.desc()":{"title":"Collection.desc()","slug":"Collection/Collection.desc()","layout":"docs"},"Collection.distinct()":{"title":"Collection.distinct()","slug":"Collection/Collection.distinct()","layout":"docs"},"Collection.each()":{"title":"Collection.each()","slug":"Collection/Collection.each()","layout":"docs"},"Collection.eachKey()":{"title":"Collection.eachKey()","slug":"Collection/Collection.eachKey()","layout":"docs"},"Collection.eachPrimaryKey()":{"title":"Collection.eachPrimaryKey()","slug":"Collection/Collection.eachPrimaryKey()","layout":"docs"},"Collection.eachUniqueKey()":{"title":"Collection.eachUniqueKey()","slug":"Collection/Collection.eachUniqueKey()","layout":"docs"},"Collection.filter()":{"title":"Collection.filter()","slug":"Collection/Collection.filter()","layout":"docs"},"Collection.first()":{"title":"Collection.first()","slug":"Collection/Collection.first()","layout":"docs"},"Collection.keys()":{"title":"Collection.keys()","slug":"Collection/Collection.keys()","layout":"docs"},"Collection.last()":{"title":"Collection.last()","slug":"Collection/Collection.last()","layout":"docs"},"Collection.limit()":{"title":"Collection.limit()","slug":"Collection/Collection.limit()","layout":"docs"},"Collection":{"title":"Collection","slug":"Collection/Collection","layout":"docs"},"Collection.modify()":{"title":"Collection.modify()","slug":"Collection/Collection.modify()","layout":"docs"},"Collection.offset()":{"title":"Collection.offset()","slug":"Collection/Collection.offset()","layout":"docs"},"Collection.or()":{"title":"Collection.or()","slug":"Collection/Collection.or()","layout":"docs"},"Collection.primaryKeys()":{"title":"Collection.primaryKeys()","slug":"Collection/Collection.primaryKeys()","layout":"docs"},"Collection.raw()":{"title":"Collection.raw()","slug":"Collection/Collection.raw()","layout":"docs"},"Collection.reverse()":{"title":"Collection.reverse()","slug":"Collection/Collection.reverse()","layout":"docs"},"Collection.sortBy()":{"title":"Collection.sortBy()","slug":"Collection/Collection.sortBy()","layout":"docs"},"Collection.toArray()":{"title":"Collection.toArray()","slug":"Collection/Collection.toArray()","layout":"docs"},"Collection.uniqueKeys()":{"title":"Collection.uniqueKeys()","slug":"Collection/Collection.uniqueKeys()","layout":"docs"},"Collection.until()":{"title":"Collection.until()","slug":"Collection/Collection.until()","layout":"docs"}},"Compound-Index":{"title":"Compound Index","slug":"Compound-Index","layout":"docs"},"DBCore":{"DBCore":{"title":"DBCore","slug":"DBCore/DBCore","layout":"docs"},"DBCoreAddRequest":{"title":"DBCoreAddRequest","slug":"DBCore/DBCoreAddRequest","layout":"docs"},"DBCoreCountRequest":{"title":"DBCoreCountRequest","slug":"DBCore/DBCoreCountRequest","layout":"docs"},"DBCoreCursor":{"title":"DBCoreCursor","slug":"DBCore/DBCoreCursor","layout":"docs"},"DBCoreDeleteRangeRequest":{"title":"DBCoreDeleteRangeRequest","slug":"DBCore/DBCoreDeleteRangeRequest","layout":"docs"},"DBCoreDeleteRequest":{"title":"DBCoreDeleteRequest","slug":"DBCore/DBCoreDeleteRequest","layout":"docs"},"DBCoreGetManyRequest":{"title":"DBCoreGetManyRequest","slug":"DBCore/DBCoreGetManyRequest","layout":"docs"},"DBCoreGetRequest":{"title":"DBCoreGetRequest","slug":"DBCore/DBCoreGetRequest","layout":"docs"},"DBCoreIndex":{"title":"DBCoreIndex","slug":"DBCore/DBCoreIndex","layout":"docs"},"DBCoreKeyRange":{"title":"DBCoreKeyRange","slug":"DBCore/DBCoreKeyRange","layout":"docs"},"DBCoreMutateRequest":{"title":"DBCoreMutateRequest","slug":"DBCore/DBCoreMutateRequest","layout":"docs"},"DBCoreMutateResponse":{"title":"DBCoreMutateResponse","slug":"DBCore/DBCoreMutateResponse","layout":"docs"},"DBCoreOpenCursorRequest":{"title":"DBCoreOpenCursorRequest","slug":"DBCore/DBCoreOpenCursorRequest","layout":"docs"},"DBCorePutRequest":{"title":"DBCorePutRequest","slug":"DBCore/DBCorePutRequest","layout":"docs"},"DBCoreQuery":{"title":"DBCoreQuery","slug":"DBCore/DBCoreQuery","layout":"docs"},"DBCoreQueryRequest":{"title":"DBCoreQueryRequest","slug":"DBCore/DBCoreQueryRequest","layout":"docs"},"DBCoreQueryResponse":{"title":"DBCoreQueryResponse","slug":"DBCore/DBCoreQueryResponse","layout":"docs"},"DBCoreRangeType":{"title":"DBCoreRangeType","slug":"DBCore/DBCoreRangeType","layout":"docs"},"DBCoreSchema":{"title":"DBCoreSchema","slug":"DBCore/DBCoreSchema","layout":"docs"},"DBCoreTable":{"title":"DBCoreTable","slug":"DBCore/DBCoreTable","layout":"docs"},"DBCoreTableSchema":{"title":"DBCoreTableSchema","slug":"DBCore/DBCoreTableSchema","layout":"docs"},"DBCoreTransaction":{"title":"DBCoreTransaction","slug":"DBCore/DBCoreTransaction","layout":"docs"},"DBCoreTransactionMode":{"title":"DBCoreTransactionMode","slug":"DBCore/DBCoreTransactionMode","layout":"docs"}},"Deprecations":{"title":"Deprecations","slug":"Deprecations","layout":"docs"},"DerivedWork":{"title":"Derived Work","slug":"DerivedWork","layout":"docs"},"Dexie":{"Dexie.[table]":{"title":"Dexie.[table]","slug":"Dexie/Dexie.[table]","layout":"docs"},"Dexie.addons":{"title":"Dexie.addons","slug":"Dexie/Dexie.addons","layout":"docs"},"Dexie.async()":{"title":"Dexie.async()","slug":"Dexie/Dexie.async()","layout":"docs"},"Dexie.backendDB()":{"title":"Dexie.backendDB()","slug":"Dexie/Dexie.backendDB()","layout":"docs"},"Dexie.close()":{"title":"Dexie.close()","slug":"Dexie/Dexie.close()","layout":"docs"},"Dexie.currentTransaction":{"title":"Dexie.currentTransaction","slug":"Dexie/Dexie.currentTransaction","layout":"docs"},"Dexie.debug":{"title":"Dexie.debug","slug":"Dexie/Dexie.debug","layout":"docs"},"Dexie.deepClone()":{"title":"Dexie.deepClone()","slug":"Dexie/Dexie.deepClone()","layout":"docs"},"Dexie.defineClass()":{"title":"Dexie.defineClass()","slug":"Dexie/Dexie.defineClass()","layout":"docs"},"Dexie.delByKeyPath()":{"title":"Dexie.delByKeyPath()","slug":"Dexie/Dexie.delByKeyPath()","layout":"docs"},"Dexie.delete()":{"title":"Dexie.delete()","slug":"Dexie/Dexie.delete()","layout":"docs"},"Dexie.derive()":{"title":"Dexie.derive()","slug":"Dexie/Dexie.derive()","layout":"docs"},"Dexie.events()":{"title":"Dexie.events()","slug":"Dexie/Dexie.events()","layout":"docs"},"Dexie.exists()":{"title":"Dexie.exists()","slug":"Dexie/Dexie.exists()","layout":"docs"},"Dexie.extend()":{"title":"Dexie.extend()","slug":"Dexie/Dexie.extend()","layout":"docs"},"Dexie.fakeAutoComplete()":{"title":"Dexie.fakeAutoComplete()","slug":"Dexie/Dexie.fakeAutoComplete()","layout":"docs"},"Dexie.getByKeyPath()":{"title":"Dexie.getByKeyPath()","slug":"Dexie/Dexie.getByKeyPath()","layout":"docs"},"Dexie.getDatabaseNames()":{"title":"Dexie.getDatabaseNames()","slug":"Dexie/Dexie.getDatabaseNames()","layout":"docs"},"Dexie.hasFailed()":{"title":"Dexie.hasFailed()","slug":"Dexie/Dexie.hasFailed()","layout":"docs"},"Dexie.ignoreTransaction()":{"title":"Dexie.ignoreTransaction()","slug":"Dexie/Dexie.ignoreTransaction()","layout":"docs"},"Dexie.isOpen()":{"title":"Dexie.isOpen()","slug":"Dexie/Dexie.isOpen()","layout":"docs"},"Dexie":{"title":"Dexie Constructor","slug":"Dexie/Dexie","layout":"docs"},"Dexie.name":{"title":"Dexie.name","slug":"Dexie/Dexie.name","layout":"docs"},"Dexie.on()":{"title":"Dexie.on()","slug":"Dexie/Dexie.on()","layout":"docs"},"Dexie.on.blocked":{"title":"Dexie.on.blocked","slug":"Dexie/Dexie.on.blocked","layout":"docs"},"Dexie.on.close":{"title":"Dexie.on.close","slug":"Dexie/Dexie.on.close","layout":"docs"},"Dexie.on.error":{"title":"Dexie.on.error","slug":"Dexie/Dexie.on.error","layout":"docs"},"Dexie.on.populate-(old-version)":{"title":"Dexie.on.populate-(old-version)","slug":"Dexie/Dexie.on.populate-(old-version)","layout":"docs"},"Dexie.on.populate":{"title":"Dexie.on.populate","slug":"Dexie/Dexie.on.populate","layout":"docs"},"Dexie.on.ready":{"title":"Dexie.on.ready","slug":"Dexie/Dexie.on.ready","layout":"docs"},"Dexie.on.storagemutated":{"title":"Dexie.on.storagemutated","slug":"Dexie/Dexie.on.storagemutated","layout":"docs"},"Dexie.on.versionchange":{"title":"Dexie.on.versionchange","slug":"Dexie/Dexie.on.versionchange","layout":"docs"},"Dexie.open()":{"title":"Dexie.open()","slug":"Dexie/Dexie.open()","layout":"docs"},"Dexie.override()":{"title":"Dexie.override()","slug":"Dexie/Dexie.override()","layout":"docs"},"Dexie.semVer":{"title":"Dexie.semVer","slug":"Dexie/Dexie.semVer","layout":"docs"},"Dexie.setByKeyPath()":{"title":"Dexie.setByKeyPath()","slug":"Dexie/Dexie.setByKeyPath()","layout":"docs"},"Dexie.shallowClone()":{"title":"Dexie.shallowClone()","slug":"Dexie/Dexie.shallowClone()","layout":"docs"},"Dexie.spawn()":{"title":"Dexie.spawn()","slug":"Dexie/Dexie.spawn()","layout":"docs"},"Dexie.table()":{"title":"Dexie.table()","slug":"Dexie/Dexie.table()","layout":"docs"},"Dexie.tables":{"title":"Dexie.tables","slug":"Dexie/Dexie.tables","layout":"docs"},"Dexie.transaction()-(old-version)":{"title":"Dexie.transaction()-(old-version)","slug":"Dexie/Dexie.transaction()-(old-version)","layout":"docs"},"Dexie.transaction()":{"title":"Dexie.transaction()","slug":"Dexie/Dexie.transaction()","layout":"docs"},"Dexie.use()":{"title":"Dexie.use()","slug":"Dexie/Dexie.use()","layout":"docs"},"Dexie.verno":{"title":"Dexie.verno","slug":"Dexie/Dexie.verno","layout":"docs"},"Dexie.version()":{"title":"Dexie.version()","slug":"Dexie/Dexie.version()","layout":"docs"},"Dexie.version":{"title":"Dexie.version","slug":"Dexie/Dexie.version","layout":"docs"},"Dexie.vip()":{"title":"Dexie.vip()","slug":"Dexie/Dexie.vip()","layout":"docs"},"Dexie.waitFor()":{"title":"Dexie.waitFor()","slug":"Dexie/Dexie.waitFor()","layout":"docs"}},"Dexie.js":{"title":"Dexie.js","slug":"Dexie.js","layout":"docs"},"DexieErrors":{"Dexie.AbortError":{"title":"Dexie.AbortError","slug":"DexieErrors/Dexie.AbortError","layout":"docs"},"Dexie.BulkError":{"title":"Dexie.BulkError","slug":"DexieErrors/Dexie.BulkError","layout":"docs"},"Dexie.ConstraintError":{"title":"Dexie.ConstraintError","slug":"DexieErrors/Dexie.ConstraintError","layout":"docs"},"Dexie.DataCloneError":{"title":"Dexie.DataCloneError","slug":"DexieErrors/Dexie.DataCloneError","layout":"docs"},"Dexie.DataError":{"title":"Dexie.DataError","slug":"DexieErrors/Dexie.DataError","layout":"docs"},"Dexie.DatabaseClosedError":{"title":"Dexie.DatabaseClosedError","slug":"DexieErrors/Dexie.DatabaseClosedError","layout":"docs"},"Dexie.IncompatiblePromiseError":{"title":"Dexie.IncompatiblePromiseError","slug":"DexieErrors/Dexie.IncompatiblePromiseError","layout":"docs"},"Dexie.InternalError":{"title":"Dexie.InternalError","slug":"DexieErrors/Dexie.InternalError","layout":"docs"},"Dexie.InvalidAccessError":{"title":"Dexie.InvalidAccessError","slug":"DexieErrors/Dexie.InvalidAccessError","layout":"docs"},"Dexie.InvalidArgumentError":{"title":"Dexie.InvalidArgumentError","slug":"DexieErrors/Dexie.InvalidArgumentError","layout":"docs"},"Dexie.InvalidStateError":{"title":"Dexie.InvalidStateError","slug":"DexieErrors/Dexie.InvalidStateError","layout":"docs"},"Dexie.InvalidTableError":{"title":"Dexie.InvalidTableError","slug":"DexieErrors/Dexie.InvalidTableError","layout":"docs"},"Dexie.MissingAPIError":{"title":"Dexie.MissingAPIError","slug":"DexieErrors/Dexie.MissingAPIError","layout":"docs"},"Dexie.ModifyError":{"title":"Dexie.ModifyError","slug":"DexieErrors/Dexie.ModifyError","layout":"docs"},"Dexie.NoSuchDatabaseError":{"title":"Dexie.NoSuchDatabaseErrorError","slug":"DexieErrors/Dexie.NoSuchDatabaseError","layout":"docs"},"Dexie.NotFoundError":{"title":"Dexie.NotFoundError","slug":"DexieErrors/Dexie.NotFoundError","layout":"docs"},"Dexie.OpenFailedError":{"title":"Dexie.OpenFailedError","slug":"DexieErrors/Dexie.OpenFailedError","layout":"docs"},"Dexie.PrematureCommitError":{"title":"Dexie.PrematureCommitError","slug":"DexieErrors/Dexie.PrematureCommitError","layout":"docs"},"Dexie.QuotaExceededError":{"title":"Dexie.QuotaExceededError","slug":"DexieErrors/Dexie.QuotaExceededError","layout":"docs"},"Dexie.ReadOnlyError":{"title":"Dexie.ReadOnlyError","slug":"DexieErrors/Dexie.ReadOnlyError","layout":"docs"},"Dexie.SchemaError":{"title":"Dexie.SchemaError","slug":"DexieErrors/Dexie.SchemaError","layout":"docs"},"Dexie.SubTransactionError":{"title":"Dexie.SubTransactionError","slug":"DexieErrors/Dexie.SubTransactionError","layout":"docs"},"Dexie.TimeoutError":{"title":"Dexie.TimeoutError","slug":"DexieErrors/Dexie.TimeoutError","layout":"docs"},"Dexie.TransactionInactiveError":{"title":"Dexie.TransactionInactiveError","slug":"DexieErrors/Dexie.TransactionInactiveError","layout":"docs"},"Dexie.UnknownError":{"title":"Dexie.UnknownError","slug":"DexieErrors/Dexie.UnknownError","layout":"docs"},"Dexie.UnsupportedError":{"title":"Dexie.UnsupportedError","slug":"DexieErrors/Dexie.UnsupportedError","layout":"docs"},"Dexie.UpgradeError":{"title":"Dexie.UpgradeError()","slug":"DexieErrors/Dexie.UpgradeError","layout":"docs"},"Dexie.VersionChangeError":{"title":"Dexie.VersionChangeError","slug":"DexieErrors/Dexie.VersionChangeError","layout":"docs"},"Dexie.VersionError":{"title":"Dexie.VersionError","slug":"DexieErrors/Dexie.VersionError","layout":"docs"},"DexieError":{"title":"DexieError","slug":"DexieErrors/DexieError","layout":"docs"}},"Download":{"title":"Download","slug":"Download","layout":"docs"},"EntityTable":{"title":"EntityTable","slug":"EntityTable","layout":"docs"},"ExportImport":{"dexie-export-import":{"title":"Export and Import Database","slug":"ExportImport/dexie-export-import","layout":"docs"}},"IndexSpec":{"title":"IndexSpec","slug":"IndexSpec","layout":"docs"},"Indexable-Type":{"title":"Indexable Type","slug":"Indexable-Type","layout":"docs"},"IndexedDB-on-Safari":{"title":"IndexedDB on Safari","slug":"IndexedDB-on-Safari","layout":"docs"},"MultiEntry-Index":{"title":"MultiEntry Index","slug":"MultiEntry-Index","layout":"docs"},"Observable":{"Dexie.Observable.DatabaseChange":{"title":"Dexie.Observable.DatabaseChange","slug":"Observable/Dexie.Observable.DatabaseChange","layout":"docs"},"Dexie.Observable":{"title":"Dexie.Observable","slug":"Observable/Dexie.Observable","layout":"docs"}},"Promise":{"Promise.PSD":{"title":"Promise.PSD","slug":"Promise/Promise.PSD","layout":"docs"},"Promise.catch()":{"title":"Promise.catch()","slug":"Promise/Promise.catch()","layout":"docs"},"Promise.finally()":{"title":"Promise.finally()","slug":"Promise/Promise.finally()","layout":"docs"},"Promise":{"title":"Promise","slug":"Promise/Promise","layout":"docs"},"Promise.on.error":{"title":"Promise.on.error","slug":"Promise/Promise.on.error","layout":"docs"},"Promise.onuncatched":{"title":"Promise.onuncatched","slug":"Promise/Promise.onuncatched","layout":"docs"},"unhandledrejection-event":{"title":"unhandledrejection-event","slug":"Promise/unhandledrejection-event","layout":"docs"}},"PropModification":{"add()":{"title":"Consistent add() operator","slug":"PropModification/add()","layout":"docs"},"remove()":{"title":"Consistent remove() operator","slug":"PropModification/remove()","layout":"docs"},"replacePrefix()":{"title":"Consistent replacePrefix() operator","slug":"PropModification/replacePrefix()","layout":"docs"}},"Questions-and-Answers":{"title":"Questions and Answers","slug":"Questions-and-Answers","layout":"docs"},"Releasing-Dexie":{"title":"Releasing Dexie","slug":"Releasing-Dexie","layout":"docs"},"Samples":{"title":"Samples","slug":"Samples","layout":"docs-freestyle"},"Simplify-with-yield":{"title":"Simplify with yield","slug":"Simplify-with-yield","layout":"docs"},"StorageManager":{"title":"How To Use the StorageManager API","slug":"StorageManager","layout":"docs"},"Syncable":{"Dexie.Syncable.IDatabaseChange":{"title":"Dexie.Syncable.IDatabaseChange","slug":"Syncable/Dexie.Syncable.IDatabaseChange","layout":"docs"},"Dexie.Syncable.IPersistedContext":{"title":"Dexie.Syncable.IPersistentContext","slug":"Syncable/Dexie.Syncable.IPersistedContext","layout":"docs"},"Dexie.Syncable.ISyncProtocol":{"title":"Dexie.Syncable.ISyncProtocol","slug":"Syncable/Dexie.Syncable.ISyncProtocol","layout":"docs"},"Dexie.Syncable.StatusTexts":{"title":"Dexie.Syncable.StatusTexts","slug":"Syncable/Dexie.Syncable.StatusTexts","layout":"docs"},"Dexie.Syncable.Statuses":{"title":"Dexie.Syncable.Statuses","slug":"Syncable/Dexie.Syncable.Statuses","layout":"docs"},"Dexie.Syncable.js":{"title":"Dexie.Syncable","slug":"Syncable/Dexie.Syncable.js","layout":"docs"},"Dexie.Syncable.registerSyncProtocol()":{"title":"Dexie.Syncable.registerSyncProtocol()","slug":"Syncable/Dexie.Syncable.registerSyncProtocol()","layout":"docs"},"db.syncable.connect()":{"title":"db.syncable.connect()","slug":"Syncable/db.syncable.connect()","layout":"docs"},"db.syncable.delete()":{"title":"db.syncable.delete()","slug":"Syncable/db.syncable.delete()","layout":"docs"},"db.syncable.disconnect()":{"title":"db.syncable.disconnect()","slug":"Syncable/db.syncable.disconnect()","layout":"docs"},"db.syncable.getOptions()":{"title":"db.syncable.getOptions()","slug":"Syncable/db.syncable.getOptions()","layout":"docs"},"db.syncable.getStatus()":{"title":"db.syncable.getStatus()","slug":"Syncable/db.syncable.getStatus()","layout":"docs"},"db.syncable.list()":{"title":"db.syncable.list()","slug":"Syncable/db.syncable.list()","layout":"docs"},"db.syncable.on('statusChanged')":{"title":"db.syncable.on('statusChanged')","slug":"Syncable/db.syncable.on('statusChanged')","layout":"docs"},"db.syncable.setFilter()":{"title":"db.syncable.setFilter()","slug":"Syncable/db.syncable.setFilter()","layout":"docs"}},"Table":{"Table.add()":{"title":"Table.add()","slug":"Table/Table.add()","layout":"docs"},"Table.bulkAdd()":{"title":"Table.bulkAdd()","slug":"Table/Table.bulkAdd()","layout":"docs"},"Table.bulkDelete()":{"title":"Table.bulkDelete()","slug":"Table/Table.bulkDelete()","layout":"docs"},"Table.bulkGet()":{"title":"Table.bulkGet()","slug":"Table/Table.bulkGet()","layout":"docs"},"Table.bulkPut()":{"title":"Table.bulkPut()","slug":"Table/Table.bulkPut()","layout":"docs"},"Table.bulkUpdate()":{"title":"Table.bulkUpdate()","slug":"Table/Table.bulkUpdate()","layout":"docs"},"Table.clear()":{"title":"Table.clear()","slug":"Table/Table.clear()","layout":"docs"},"Table.count()":{"title":"Table.count()","slug":"Table/Table.count()","layout":"docs"},"Table.defineClass()":{"title":"Table.defineClass()","slug":"Table/Table.defineClass()","layout":"docs"},"Table.delete()":{"title":"Table.delete()","slug":"Table/Table.delete()","layout":"docs"},"Table.each()":{"title":"Table.each()","slug":"Table/Table.each()","layout":"docs"},"Table.filter()":{"title":"Table.filter()","slug":"Table/Table.filter()","layout":"docs"},"Table.get()":{"title":"Table.get()","slug":"Table/Table.get()","layout":"docs"},"Table.hook('creating')":{"title":"Table.hook('creating')","slug":"Table/Table.hook('creating')","layout":"docs"},"Table.hook('deleting')":{"title":"Table.hook('deleting')","slug":"Table/Table.hook('deleting')","layout":"docs"},"Table.hook('reading')":{"title":"Table.hook('reading')","slug":"Table/Table.hook('reading')","layout":"docs"},"Table.hook('updating')":{"title":"Table.hook('updating')","slug":"Table/Table.hook('updating')","layout":"docs"},"Table.limit()":{"title":"Table.limit()","slug":"Table/Table.limit()","layout":"docs"},"Table.mapToClass()":{"title":"Table.mapToClass()","slug":"Table/Table.mapToClass()","layout":"docs"},"Table":{"title":"Table","slug":"Table/Table","layout":"docs"},"Table.name":{"title":"Table.name","slug":"Table/Table.name","layout":"docs"},"Table.offset()":{"title":"Table.offset()","slug":"Table/Table.offset()","layout":"docs"},"Table.orderBy()":{"title":"Table.orderBy()","slug":"Table/Table.orderBy()","layout":"docs"},"Table.put()":{"title":"Table.put()","slug":"Table/Table.put()","layout":"docs"},"Table.reverse()":{"title":"Table.reverse()","slug":"Table/Table.reverse()","layout":"docs"},"Table.schema":{"title":"Table.schema","slug":"Table/Table.schema","layout":"docs"},"Table.toArray()":{"title":"Table.toArray()","slug":"Table/Table.toArray()","layout":"docs"},"Table.toCollection()":{"title":"Table.toCollection()","slug":"Table/Table.toCollection()","layout":"docs"},"Table.update()":{"title":"Table.update()","slug":"Table/Table.update()","layout":"docs"},"Table.where()":{"title":"Table.where()","slug":"Table/Table.where()","layout":"docs"}},"TableSchema":{"title":"Table Schema","slug":"TableSchema","layout":"docs"},"The-Main-Limitations-of-IndexedDB":{"title":"The main limitations of IndexedDB","slug":"The-Main-Limitations-of-IndexedDB","layout":"docs"},"The-Three-Main-Limitations-of-IndexedDB":{"title":"The three main limitations of IndexedDB","slug":"The-Three-Main-Limitations-of-IndexedDB","layout":"redirect"},"Transaction":{"Transaction.abort()":{"title":"Transaction.abort()","slug":"Transaction/Transaction.abort()","layout":"docs"},"Transaction":{"title":"Transaction","slug":"Transaction/Transaction","layout":"docs"},"Transaction.on.abort":{"title":"Transaction.on.abort","slug":"Transaction/Transaction.on.abort","layout":"docs"},"Transaction.on.complete":{"title":"Transaction.on.complete","slug":"Transaction/Transaction.on.complete","layout":"docs"},"Transaction.on.error":{"title":"Transaction.on.error","slug":"Transaction/Transaction.on.error","layout":"docs"},"Transaction.table()":{"title":"Transaction.table()","slug":"Transaction/Transaction.table()","layout":"docs"}},"Tutorial":{"Angular":{"title":"Get started with Dexie in Angular","slug":"Tutorial/Angular","layout":"docs"},"Best-Practices":{"title":"Best Practices","slug":"Tutorial/Best-Practices","layout":"docs"},"Building-Addons":{"title":"Building Addons","slug":"Tutorial/Building-Addons","layout":"docs"},"Consuming-dexie-as-a-module":{"title":"Consuming Dexie as a module","slug":"Tutorial/Consuming-dexie-as-a-module","layout":"docs"},"Design":{"title":"Design","slug":"Tutorial/Design","layout":"docs"},"Getting-started":{"title":"Getting Started with Dexie.js","slug":"Tutorial/Getting-started","layout":"docs-freestyle"},"Hello-World":{"title":"Hello World","slug":"Tutorial/Hello-World","layout":"docs"},"Migrating-existing-DB-to-Dexie":{"title":"Migrating existing DB to Dexie","slug":"Tutorial/Migrating-existing-DB-to-Dexie","layout":"docs"},"React":{"title":"Get started with Dexie in React","slug":"Tutorial/React","layout":"docs"},"Svelte":{"title":"Get started with Dexie in Svelte","slug":"Tutorial/Svelte","layout":"docs"},"Understanding-the-basics":{"title":"Understanding the basics","slug":"Tutorial/Understanding-the-basics","layout":"docs"},"Vue":{"title":"Get started with Dexie in Vue","slug":"Tutorial/Vue","layout":"docs"},"index":{"title":"Tutorial","slug":"Tutorial/index","layout":"docs"}},"Typescript-old":{"title":"Typescript (old)","slug":"Typescript-old","layout":"docs"},"Typescript":{"title":"Typescript","slug":"Typescript","layout":"docs"},"Version":{"Version":{"title":"Version","slug":"Version/Version","layout":"docs"},"Version.stores()":{"title":"Version.stores()","slug":"Version/Version.stores()","layout":"docs"},"Version.upgrade()":{"title":"Version.upgrade()","slug":"Version/Version.upgrade()","layout":"docs"}},"WhereClause":{"WhereClause.above()":{"title":"WhereClause.above()","slug":"WhereClause/WhereClause.above()","layout":"docs"},"WhereClause.aboveOrEqual()":{"title":"WhereClause.aboveOrEqual()","slug":"WhereClause/WhereClause.aboveOrEqual()","layout":"docs"},"WhereClause.anyOf()":{"title":"WhereClause.anyOf()","slug":"WhereClause/WhereClause.anyOf()","layout":"docs"},"WhereClause.anyOfIgnoreCase()":{"title":"WhereClause.anyOfIgnoreCase()","slug":"WhereClause/WhereClause.anyOfIgnoreCase()","layout":"docs"},"WhereClause.below()":{"title":"WhereClause.below()","slug":"WhereClause/WhereClause.below()","layout":"docs"},"WhereClause.belowOrEqual()":{"title":"WhereClause.belowOrEqual()","slug":"WhereClause/WhereClause.belowOrEqual()","layout":"docs"},"WhereClause.between()":{"title":"WhereClause.between()","slug":"WhereClause/WhereClause.between()","layout":"docs"},"WhereClause.equals()":{"title":"WhereClause.equals()","slug":"WhereClause/WhereClause.equals()","layout":"docs"},"WhereClause.equalsIgnoreCase()":{"title":"WhereClause.equalsIgnoreCase()","slug":"WhereClause/WhereClause.equalsIgnoreCase()","layout":"docs"},"WhereClause.inAnyRange()":{"title":"WhereClause.inAnyRange()","slug":"WhereClause/WhereClause.inAnyRange()","layout":"docs"},"WhereClause":{"title":"WhereClause","slug":"WhereClause/WhereClause","layout":"docs"},"WhereClause.noneOf()":{"title":"WhereClause.noneOf()","slug":"WhereClause/WhereClause.noneOf()","layout":"docs"},"WhereClause.notEqual()":{"title":"WhereClause.notEqual()","slug":"WhereClause/WhereClause.notEqual()","layout":"docs"},"WhereClause.startsWith()":{"title":"WhereClause.startsWith()","slug":"WhereClause/WhereClause.startsWith()","layout":"docs"},"WhereClause.startsWithAnyOf()":{"title":"WhereClause.startsWithAnyOf()","slug":"WhereClause/WhereClause.startsWithAnyOf()","layout":"docs"},"WhereClause.startsWithAnyOfIgnoreCase()":{"title":"WhereClause.startsWithAnyOfIgnoreCase()","slug":"WhereClause/WhereClause.startsWithAnyOfIgnoreCase()","layout":"docs"},"WhereClause.startsWithIgnoreCase()":{"title":"WhereClause.startsWithIgnoreCase()","slug":"WhereClause/WhereClause.startsWithIgnoreCase()","layout":"docs"}},"Y.js":{"Y.js":{"title":"Y.js","slug":"Y.js/Y.js","layout":"docs"},"y-dexie":{"title":"y-dexie","slug":"Y.js/y-dexie","layout":"docs"}},"dexie-react-hooks":{"useLiveQuery()":{"title":"useLiveQuery()","slug":"dexie-react-hooks/useLiveQuery()","layout":"docs"},"useObservable()":{"title":"useObservable()","slug":"dexie-react-hooks/useObservable()","layout":"docs"},"usePermissions()":{"title":"usePermissions()","slug":"dexie-react-hooks/usePermissions()","layout":"docs"}},"inbound":{"title":"Inbound","slug":"inbound","layout":"docs"},"index":{"title":"Docs Home","slug":"index","layout":"docs"},"libs":{"dexie-react-hooks":{"title":"dexie-react-hooks","slug":"libs/dexie-react-hooks","layout":"docs"}},"liveQuery()":{"title":"liveQuery()","slug":"liveQuery()","layout":"docs"},"safari-issues":{"title":"safari-issues","slug":"safari-issues","layout":"$undefined"}},"currentSlug":"ExportImport/dexie-export-import","pageTitle":"Export and Import Database","children":"$L1e"}]
1f:I[19646,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
20:I[26863,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
21:I[72729,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
22:I[63876,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
23:T42d,import Dexie from "dexie";
import {importDB, exportDB, importInto, peakImportFile} from "dexie-export-import";

//
// --- importDB() ---
//
// Import from Blob or File to Dexie instance:
//
const db = await importDB(blob, [options]);

//
// --- exportDB() ---
//
// Export to Blob
//
const blob = await exportDB(db, [options]);

//
// --- importInto() ---
//
// Import from Blob or File to existing Dexie instance
//
await importInto(db, blob, [options]);

//
// --- peakImportFile() ---
//
// If you need to peek the metadata from the import file without actually
// performing any import operation
// (since v1.0.0)
//
const importMeta = await peakImportFile(blob);

assert.areEqual(importMeta.formatName, "dexie");
assert.isTrue(importMeta.formatVersion === 1);
console.log("Database name:", importMeta.data.databaseName);
console.log("Database version:", importMeta.data.databaseVersion);
console.log("Database version:", importMeta.data.databaseVersion);
console.log("Tables:", importMeta.data.tables.map(t =>
  `${t.name} (${t.rowCount} rows)`
).join('\n\t'));


24:T1a32,<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">"dexie"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>importDB<span class="token punctuation">,</span> exportDB<span class="token punctuation">,</span> importInto<span class="token punctuation">,</span> peakImportFile<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"dexie-export-import"</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// --- importDB() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Import from Blob or File to Dexie instance:</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importDB</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// --- exportDB() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Export to Blob</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">exportDB</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// --- importInto() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Import from Blob or File to existing Dexie instance</span>
<span class="token comment">//</span>
<span class="token keyword">await</span> <span class="token function">importInto</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> blob<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// --- peakImportFile() ---</span>
<span class="token comment">//</span>
<span class="token comment">// If you need to peek the metadata from the import file without actually</span>
<span class="token comment">// performing any import operation</span>
<span class="token comment">// (since v1.0.0)</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> importMeta <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">peakImportFile</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>

assert<span class="token punctuation">.</span><span class="token function">areEqual</span><span class="token punctuation">(</span>importMeta<span class="token punctuation">.</span>formatName<span class="token punctuation">,</span> <span class="token string">"dexie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>importMeta<span class="token punctuation">.</span>formatVersion <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Database name:"</span><span class="token punctuation">,</span> importMeta<span class="token punctuation">.</span>data<span class="token punctuation">.</span>databaseName<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Database version:"</span><span class="token punctuation">,</span> importMeta<span class="token punctuation">.</span>data<span class="token punctuation">.</span>databaseVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Database version:"</span><span class="token punctuation">,</span> importMeta<span class="token punctuation">.</span>data<span class="token punctuation">.</span>databaseVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Tables:"</span><span class="token punctuation">,</span> importMeta<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tables<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=></span>
  <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>t<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>t<span class="token punctuation">.</span>rowCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> rows)</span><span class="token template-punctuation string">`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'\n\t'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


1e:["$","$L1f",null,{"component":"article","children":[["$","$L1f",null,{"component":"header","sx":{"mb":5},"children":["$","$L20",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"Export and Import Database"}]}],["$","$L1f",null,{"className":"docs-content","children":["$","$L1f",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L20","mdx-1",{"variant":"body1","component":"div","paragraph":true,"children":"Export / Import IndexedDB <---> Blob"}],"\n",["$","$L20","mdx-3",{"variant":"body1","component":"div","paragraph":true,"children":["The npm package ",["$","$L21","mdx-2",{"href":"https://www.npmjs.com/package/dexie-export-import","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"dexie-export-import"}]," extends Dexie with the capability to export and import databases to and from Blobs."]}],"\n",["$","$L20","mdx-4",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Install"}],"\n",["$","$1","6",{"children":["$","$L1f","mdx-5",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"npm install dexie\nnpm install dexie-export-import\n"}],["$","pre",null,{"className":"prism-javascript","children":["$","code",null,{"className":"prism-javascript code-highlight","dangerouslySetInnerHTML":{"__html":"npm install dexie\nnpm install dexie<span class=\"token operator\">-</span><span class=\"token keyword\">export</span><span class=\"token operator\">-</span><span class=\"token keyword\">import</span>\n"}}]}]]}]}]}],"\n",["$","$L20","mdx-6",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Usage"}],"\n",["$","$L20","mdx-8",{"variant":"body1","component":"div","paragraph":true,"children":["Here's the basic usage. There's a lot you can do by supplying optional ",["$","$L1f","mdx-7",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"[options]"}]," arguments. The available options are described later on in this README (See Typescript interfaces below)."]}],"\n",["$","$1","12",{"children":["$","$L1f","mdx-9",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"$23"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"$24"}}]}]]}]}]}],"\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n","$L54","\n","$L55","\n","$L56","\n","$L57","\n","$L58","\n","$L59","\n","$L5a","\n","$L5b","\n","$L5c","\n","$L5d","\n","$L5e","\n","$L5f","\n","$L60","\n","$L61","\n","$L62","\n","$L63","\n","$L64","\n","$L65","\n","$L66","\n","$L67","\n","$L68","\n","$L69","\n","$L6a","\n","$L6b","\n","$L6c","\n","$L6d","\n","$L6e","\n","$L6f","\n","$L70","\n","$L71","\n"]}]}],"$L72"]}]
74:I[32412,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
75:I[65801,["/_next/static/chunks/40c7d64eb6baa423.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/1b8d91388f6c6c81.js"],"default"]
25:["$","$L20","mdx-10",{"variant":"body1","component":"div","paragraph":true,"children":"Note that you can also import the package as follows:"}]
26:["$","$L20","mdx-14",{"variant":"body1","component":"div","paragraph":true,"children":[["$","em","mdx-11",{"children":"NOTE:"}]," Typescript users using ",["$","$L21","mdx-12",{"href":"mailto:dexie@2.x","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"dexie@2.x"}]," will get compilation errors if using the static import method ",["$","$L1f","mdx-13",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"Dexie.import()"}],"."]}]
73:T9c9,<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">"dexie"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">"dexie-export-import"</span><span class="token punctuation">;</span>

<span class="token comment">//</span>
<span class="token comment">// --- Dexie.import() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Import from Blob or File to Dexie instance:</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">await</span> Dexie<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// equivalent to importDB()</span>

<span class="token comment">//</span>
<span class="token comment">// --- db.export() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Export to Blob</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// equivalent to exportDB()</span>

<span class="token comment">//</span>
<span class="token comment">// --- db.import() ---</span>
<span class="token comment">//</span>
<span class="token comment">// Import from Blob or File to existing Dexie instance</span>
<span class="token comment">//</span>
<span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// equivalent to importInto()</span>

27:["$","$1","18",{"children":["$","$L1f","mdx-15",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"import Dexie from \"dexie\";\nimport \"dexie-export-import\";\n\n//\n// --- Dexie.import() ---\n//\n// Import from Blob or File to Dexie instance:\n//\nconst db = await Dexie.import(blob, [options]); // equivalent to importDB()\n\n//\n// --- db.export() ---\n//\n// Export to Blob\n//\nconst blob = await db.export([options]); // equivalent to exportDB()\n\n//\n// --- db.import() ---\n//\n// Import from Blob or File to existing Dexie instance\n//\nawait db.import(blob, [options]); // equivalent to importInto()\n\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$73"}}]}]]}]}]}]
28:["$","$L20","mdx-16",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Sample"}]
29:["$","$L20","mdx-19",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L21","mdx-17",{"href":"https://codepen.io/dfahlander/pen/RqwoaB/","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Here's a working sample"}]," on CodePen. It uses ",["$","$L21","mdx-18",{"href":"https://www.npmjs.com/package/downloadjs","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"downloadjs"}]," to deliver the blob as a \"file download\" to the user. For receiving an import file, it uses a drop area where you can drop your JSON file. Click the Console tab in the bottom to see what progressCallbacks receive."]}]
2a:["$","$L20","mdx-21",{"variant":"body1","component":"div","paragraph":true,"children":["Even though this sample doesn't show it, blobs can also be sent or retrieved to/from a server, using the ",["$","$L21","mdx-20",{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"fetch API"}],"."]}]
2b:["$","$L20","mdx-23",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L21","mdx-22",{"href":"https://dfahlander.medium.com/export-indexeddb-from-a-web-app-using-devtools-62c55a8996a1","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Here's a blog article"}]," on how to export IndexedDB from DevTools on an arbitrary web page or web app, by dynamically including dexie and dexie-export-import in the devtools console."]}]
2c:["$","$L20","mdx-24",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Features"}]
2d:["$","$L74","mdx-39",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L75","mdx-25",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Export of IndexedDB Database to JSON Blob."}],"\n",["$","$L75","mdx-26",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Import from Blob back to IndexedDB Database."}],"\n",["$","$L75","mdx-27",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"An import Blob can be retrieved from an URL (using fetch()) or from a user-input file (dropped or browsed to)."}],"\n",["$","$L75","mdx-28",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"An export Blob can be either given end-user to be stored in Downloaded Files, or be send to a server over HTTP(S) using fetch()."}],"\n",["$","$L75","mdx-29",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Chunk-wise / Streaming - does not read the entire DB into RAM"}],"\n",["$","$L75","mdx-30",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Progress callback (typically for showing progress bar)"}],"\n",["$","$L75","mdx-31",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Optional filter allows to import/export subset of data"}],"\n",["$","$L75","mdx-32",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Optional transform allows to alter or migrate data being imported"}],"\n",["$","$L75","mdx-33",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Support for all structured cloneable exotic types (Date, ArrayBuffer, Blob, etc) except CryptoKeys (which by design cannot be exported)"}],"\n",["$","$L75","mdx-34",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Atomic - import / export within one database transaction (optional)"}],"\n",["$","$L75","mdx-35",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Export speed: Using getAll() in chunks rather than openCursor()."}],"\n",["$","$L75","mdx-36",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Import speed: Using bulkPut() in chunks rather than put()."}],"\n",["$","$L75","mdx-37",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Can well be run from a Web Worker (better speed + doesn't lock GUI)."}],"\n",["$","$L75","mdx-38",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Can also export IndexedDB databases that was not created with Dexie."}],"\n"]}]
2e:["$","$L20","mdx-40",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Compatibility"}]
2f:["$","div","34",{"style":{"marginBottom":"24px","width":"fit-content","maxWidth":"100%","overflow":"auto","border":"1px solid rgba(255, 255, 255, 0.12)","borderRadius":"4px"},"children":["$","table",null,{"style":{"width":"100%","borderCollapse":"collapse"},"children":[["$","thead","1",{"children":["$","tr","1",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","th","1",{"style":{"padding":"16px","textAlign":"left","fontWeight":"bold","borderBottom":"2px solid rgba(255, 255, 255, 0.12)","backgroundColor":"rgba(255, 255, 255, 0.08)"},"children":["$","$L20",null,{"variant":"subtitle2","component":"span","children":"Product"}]}],["$","th","3",{"style":{"padding":"16px","textAlign":"left","fontWeight":"bold","borderBottom":"2px solid rgba(255, 255, 255, 0.12)","backgroundColor":"rgba(255, 255, 255, 0.08)"},"children":["$","$L20",null,{"variant":"subtitle2","component":"span","children":"Supported versions"}]}]]}]}],["$","tbody","3",{"children":[["$","tr","1",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"dexie"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"^2.0.4, ^3.x, ^4.x"}]]}],["$","tr","3",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Safari"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"^10.1"}]]}],["$","tr","5",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"IE"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"11"}]]}],["$","tr","7",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Edge"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"any version"}]]}],["$","tr","9",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"Chrome"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"any version"}]]}],["$","tr","11",{"style":{"borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":[["$","td","1",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"FF"}],["$","td","3",{"style":{"padding":"16px","borderBottom":"1px solid rgba(255, 255, 255, 0.12)"},"children":"any version"}]]}]]}]]}]}]
30:["$","$L20","mdx-41",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Similar Libraries"}]
31:["$","$L20","mdx-43",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":["$","$L21","mdx-42",{"href":"https://github.com/Polarisation/indexeddb-export-import","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"indexeddb-export-import"}]}]
32:["$","$L20","mdx-44",{"variant":"body1","component":"div","paragraph":true,"children":"Much smaller in size, but also much lighter than dexie-export-import."}]
33:["$","$L20","mdx-46",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L21","mdx-45",{"href":"https://github.com/Polarisation/indexeddb-export-import","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Indexeddb-export-import"}]," can be better choice if:"]}]
34:["$","$L74","mdx-49",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L75","mdx-47",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"your data contains no Dates, ArrayBuffers, TypedArrays or Blobs (only objects, strings, numbers, booleans and arrays)."}],"\n",["$","$L75","mdx-48",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"your database is small enough to fit in RAM on your target devices."}],"\n"]}]
35:["$","$L20","mdx-50",{"variant":"body1","component":"div","paragraph":true,"children":"Dexie-export-import was build to scale when exporting large databases without consuming much RAM. It does also support importing/exporting exotic types."}]
36:["$","$L20","mdx-51",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Interface"}]
37:["$","$L20","mdx-52",{"variant":"body1","component":"div","paragraph":true,"children":"Importing this module will extend Dexie and Dexie.prototype as follows.\nEven though this is conceptually a Dexie.js addon, there is no addon instance.\nExtended interface is done into Dexie and Dexie.prototype as a side effect when\nimporting the module."}]
76:T8dc,<span class="token comment">//</span>
<span class="token comment">// Extend Dexie interface (typescript-wise)</span>
<span class="token comment">//</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">'dexie'</span> <span class="token punctuation">{</span>
  <span class="token comment">// Extend methods on db</span>
  <span class="token keyword">interface</span> <span class="token class-name">Dexie</span> <span class="token punctuation">{</span>
    <span class="token keyword">export</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> ExportOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Blob<span class="token operator">></span><span class="token punctuation">;</span>
    <span class="token keyword">import</span><span class="token punctuation">(</span>blob<span class="token operator">:</span> Blob<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> ImportOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">interface</span> <span class="token class-name">DexieConstructor</span> <span class="token punctuation">{</span>
    <span class="token keyword">import</span><span class="token punctuation">(</span>blob<span class="token operator">:</span> Blob<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> StaticImportOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Dexie<span class="token operator">></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
38:["$","$1","52",{"children":["$","$L1f","mdx-53",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"//\n// Extend Dexie interface (typescript-wise)\n//\ndeclare module 'dexie' {\n  // Extend methods on db\n  interface Dexie {\n    export(options?: ExportOptions): Promise<Blob>;\n    import(blob: Blob, options?: ImportOptions): Promise<void>;\n  }\n  interface DexieConstructor {\n    import(blob: Blob, options?: StaticImportOptions): Promise<Dexie>;\n  }\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$76"}}]}]]}]}]}]
39:["$","$L20","mdx-54",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"StaticImportOptions and ImportOptions"}]
3a:["$","$L20","mdx-56",{"variant":"body1","component":"div","paragraph":true,"children":["These are the interfaces of the ",["$","$L1f","mdx-55",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"options"}]," optional arguments to Dexie.import() and Dexie.prototype.import(). All options are optional and defaults to undefined (falsy)."]}]
77:T196a,<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">StaticImportOptions</span> <span class="token punctuation">{</span>
  noTransaction<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  chunkSizeBytes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )</span>
  filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>table<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  transform<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>table<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  progressCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> ImportProgress<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ImportOptions</span> <span class="token keyword">extends</span> <span class="token class-name">StaticImportOptions</span> <span class="token punctuation">{</span>
  acceptMissingTables<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  acceptVersionDiff<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  acceptNameDiff<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  acceptChangedPrimaryKey<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  overwriteValues<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  clearTablesBeforeImport<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  noTransaction<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  chunkSizeBytes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )</span>
  filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>table<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  transform<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>table<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  progressCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> ImportProgress<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

3b:["$","$1","58",{"children":["$","$L1f","mdx-57",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export interface StaticImportOptions {\n  noTransaction?: boolean;\n  chunkSizeBytes?: number; // Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )\n  filter?: (table: string, value: any, key?: any) => boolean;\n  transform?: (table: string, value: any, key?: any) => ({value: any, key?: any});\n  progressCallback?: (progress: ImportProgress) => boolean;\n}\n\nexport interface ImportOptions extends StaticImportOptions {\n  acceptMissingTables?: boolean;\n  acceptVersionDiff?: boolean;\n  acceptNameDiff?: boolean;\n  acceptChangedPrimaryKey?: boolean;\n  overwriteValues?: boolean;\n  clearTablesBeforeImport?: boolean;\n  noTransaction?: boolean;\n  chunkSizeBytes?: number; // Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )\n  filter?: (table: string, value: any, key?: any) => boolean;\n  transform?: (table: string, value: any, key?: any) => ({value: any, key?: any});\n  progressCallback?: (progress: ImportProgress) => boolean;\n}\n\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$77"}}]}]]}]}]}]
3c:["$","$L20","mdx-58",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"ImportProgress"}]
3d:["$","$L20","mdx-59",{"variant":"body1","component":"div","paragraph":true,"children":"This is the interface sent to the progressCallback."}]
3e:["$","$1","64",{"children":["$","$L1f","mdx-60",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export interface ImportProgress {\n  totalTables: number;\n  completedTables: number;\n  totalRows: number;\n  completedRows: number;\n  done: boolean;\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ImportProgress</span> <span class=\"token punctuation\">{</span>\n  totalTables<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  completedTables<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  totalRows<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  completedRows<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  done<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"}}]}]]}]}]}]
3f:["$","$L20","mdx-61",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"ExportOptions"}]
40:["$","$L20","mdx-63",{"variant":"body1","component":"div","paragraph":true,"children":["This is the interface of the ",["$","$L1f","mdx-62",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"options"}]," optional arguments to Dexie.prototype.export(). All options are optional and defaults to undefined (falsy)."]}]
78:T6cf,<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ExportOptions</span> <span class="token punctuation">{</span>
  noTransaction<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  numRowsPerChunk<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  prettyJson<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>table<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  progressCallback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> ExportProgress<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
41:["$","$1","70",{"children":["$","$L1f","mdx-64",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export interface ExportOptions {\n  noTransaction?: boolean;\n  numRowsPerChunk?: number;\n  prettyJson?: boolean;\n  filter?: (table: string, value: any, key?: any) => boolean;\n  progressCallback?: (progress: ExportProgress) => boolean;\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$78"}}]}]]}]}]}]
42:["$","$L20","mdx-65",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"ExportProgress"}]
43:["$","$L20","mdx-66",{"variant":"body1","component":"div","paragraph":true,"children":"This is the interface sent to the ExportOptions.progressCallback."}]
44:["$","$1","76",{"children":["$","$L1f","mdx-67",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export interface ExportProgress {\n  totalTables: number;\n  completedTables: number;\n  totalRows: number;\n  completedRows: number;\n  done: boolean;\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ExportProgress</span> <span class=\"token punctuation\">{</span>\n  totalTables<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  completedTables<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  totalRows<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  completedRows<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  done<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"}}]}]]}]}]}]
45:["$","$L20","mdx-68",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Defaults"}]
46:["$","$L20","mdx-69",{"variant":"body1","component":"div","paragraph":true,"children":"These are the default chunk sizes used when not specified in the options object. We allow quite large chunks, but still not that large (1MB RAM is not much even for a small device)."}]
47:["$","$1","82",{"children":["$","$L1f","mdx-70",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"const DEFAULT_KILOBYTES_PER_CHUNK = 1024; // When importing blob\nconst DEFAULT_ROWS_PER_CHUNK = 2000; // When exporting db\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_KILOBYTES_PER_CHUNK</span> <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// When importing blob</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_ROWS_PER_CHUNK</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// When exporting db</span>\n"}}]}]]}]}]}]
48:["$","$L20","mdx-71",{"variant":"h1","component":"h1","gutterBottom":true,"children":"JSON Format"}]
49:["$","$L20","mdx-72",{"variant":"body1","component":"div","paragraph":true,"children":"The JSON format is described in the Typescript interface below. This JSON format is streamable as it is generated\nin a streaming fashion, and imported also using a streaming fashion. Therefore, it is important that the data come\nlast in the file."}]
79:Ta14,<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DexieExportJsonStructure</span> <span class="token punctuation">{</span>
  formatName<span class="token operator">:</span> <span class="token string">'dexie'</span><span class="token punctuation">;</span>
  formatVersion<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    databaseName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    databaseVersion<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    tables<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      schema<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// '++id,name,age'</span>
      rowCount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">;</span>
    data<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token comment">// This property must be last (for streaming purpose)</span>
      tableName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      inbound<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
      rows<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// This property must be last (for streaming purpose)</span>
    <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
4a:["$","$1","88",{"children":["$","$L1f","mdx-73",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"export interface DexieExportJsonStructure {\n  formatName: 'dexie';\n  formatVersion: 1;\n  data: {\n    databaseName: string;\n    databaseVersion: number;\n    tables: Array<{\n      name: string;\n      schema: string; // '++id,name,age'\n      rowCount: number;\n    }>;\n    data: Array<{ // This property must be last (for streaming purpose)\n      tableName: string;\n      inbound: boolean;\n      rows: any[]; // This property must be last (for streaming purpose)\n    }>;\n  }\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$79"}}]}]]}]}]}]
4b:["$","$L20","mdx-74",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Example JSON File"}]
7a:T67a,{
  "formatName": "dexie",
  "formatVersion": 1,
  "data": {
    "databaseName": "dexie-export-import-basic-tests",
    "databaseVersion": 1,
    "tables": [
      {
        "name": "outbound",
        "schema": "",
        "rowCount": 2
      },
      {
        "name": "inbound",
        "schema": "++id",
        "rowCount": 3
      }
    ],
    "data": [{
      "tableName": "outbound",
      "inbound": false,
      "rows": [
        [
          1,
          {
            "foo": "bar"
          }
        ],
        [
          2,
          {
            "bar": "foo"
          }
        ]
      ]
    },{
      "tableName": "inbound",
      "inbound": true,
      "rows": [
        {
          "id": 1,
          "date": 1,
          "fullBlob": {
            "type": "",
            "data": "AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+/w=="
          },
          "binary": {
            "buffer": "AQID",
            "byteOffset": 0,
            "length": 3
          },
          "text": "foo",
          "bool": false,
          "$types": {
            "date": "date",
            "fullBlob": "blob2",
            "binary": "uint8array2",
            "binary.buffer": "arraybuffer"
          }
        },
        {
          "id": 2,
          "foo": "bar"
        },
        {
          "id": 3,
          "bar": "foo"
        }
      ]
    }]
  }

7b:T245a,<span class="token punctuation">{</span>
  <span class="token string-property property">"formatName"</span><span class="token operator">:</span> <span class="token string">"dexie"</span><span class="token punctuation">,</span>
  <span class="token string-property property">"formatVersion"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token string-property property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"databaseName"</span><span class="token operator">:</span> <span class="token string">"dexie-export-import-basic-tests"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"databaseVersion"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">"tables"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"outbound"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"schema"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
        <span class="token string-property property">"rowCount"</span><span class="token operator">:</span> <span class="token number">2</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"inbound"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"schema"</span><span class="token operator">:</span> <span class="token string">"++id"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"rowCount"</span><span class="token operator">:</span> <span class="token number">3</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token string-property property">"tableName"</span><span class="token operator">:</span> <span class="token string">"outbound"</span><span class="token punctuation">,</span>
      <span class="token string-property property">"inbound"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token string-property property">"rows"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
          <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">"foo"</span><span class="token operator">:</span> <span class="token string">"bar"</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
          <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">"bar"</span><span class="token operator">:</span> <span class="token string">"foo"</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
      <span class="token string-property property">"tableName"</span><span class="token operator">:</span> <span class="token string">"inbound"</span><span class="token punctuation">,</span>
      <span class="token string-property property">"inbound"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token string-property property">"rows"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token string-property property">"date"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token string-property property">"fullBlob"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">"type"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
            <span class="token string-property property">"data"</span><span class="token operator">:</span> <span class="token string">"AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+/w=="</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token string-property property">"binary"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">"buffer"</span><span class="token operator">:</span> <span class="token string">"AQID"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"byteOffset"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">"length"</span><span class="token operator">:</span> <span class="token number">3</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token string-property property">"text"</span><span class="token operator">:</span> <span class="token string">"foo"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"bool"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token string-property property">"$types"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">"date"</span><span class="token operator">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"fullBlob"</span><span class="token operator">:</span> <span class="token string">"blob2"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"binary"</span><span class="token operator">:</span> <span class="token string">"uint8array2"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"binary.buffer"</span><span class="token operator">:</span> <span class="token string">"arraybuffer"</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token string-property property">"foo"</span><span class="token operator">:</span> <span class="token string">"bar"</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
          <span class="token string-property property">"bar"</span><span class="token operator">:</span> <span class="token string">"foo"</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

4c:["$","$1","92",{"children":["$","$L1f","mdx-75",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"$7a"}],["$","pre",null,{"className":"prism-json","children":["$","code",null,{"className":"prism-json code-highlight","dangerouslySetInnerHTML":{"__html":"$7b"}}]}]]}]}]}]
4d:["$","$L20","mdx-76",{"variant":"h1","component":"h1","gutterBottom":true,"children":"Exporting IndexedDB Databases that wasn't generated with Dexie"}]
4e:["$","$L20","mdx-77",{"variant":"body1","component":"div","paragraph":true,"children":"As Dexie can dynamically open non-Dexie IndexedDB databases, this is not an issue.\nSample provided here:"}]
7c:Tb54,<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">'dexie'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>importDB<span class="token punctuation">,</span> exportDB<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"dexie-export-import"</span><span class="token punctuation">;</span>


<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">exportDatabase</span><span class="token punctuation">(</span><span class="token parameter">databaseName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Open an arbitrary IndexedDB database:</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span>databaseName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Export it</span>
  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">exportDB</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> blob<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">importDatabase</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Import a file into a Dexie instance:</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importDB</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">backendDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// backendDB() gives you the native IDBDatabase object.</span>
<span class="token punctuation">}</span>
4f:["$","$1","98",{"children":["$","$L1f","mdx-78",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"import Dexie from 'dexie';\nimport {importDB, exportDB} from \"dexie-export-import\";\n\n\nasync function exportDatabase(databaseName) {\n  // Open an arbitrary IndexedDB database:\n  const db = await new Dexie(databaseName).open();\n  // Export it\n  const blob = await exportDB(db);\n  return blob;\n}\n\nasync function importDatabase(file) {\n  // Import a file into a Dexie instance:\n  const db = await importDB(file);\n  return db.backendDB(); // backendDB() gives you the native IDBDatabase object.\n}\n"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"$7c"}}]}]]}]}]}]
50:["$","$L20","mdx-79",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Background / Why"}]
51:["$","$L20","mdx-80",{"variant":"body1","component":"div","paragraph":true,"children":"This feature has been asked for a lot:"}]
52:["$","$L74","mdx-87",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L75","mdx-82",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L21","mdx-81",{"href":"https://github.com/dexie/Dexie.js/issues/391","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://github.com/dexie/Dexie.js/issues/391"}]}],"\n",["$","$L75","mdx-84",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L21","mdx-83",{"href":"https://github.com/dexie/Dexie.js/issues/99","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://github.com/dexie/Dexie.js/issues/99"}]}],"\n",["$","$L75","mdx-86",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["$","$L21","mdx-85",{"href":"https://stackoverflow.com/questions/46025699/dumping-indexeddb-data","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"https://stackoverflow.com/questions/46025699/dumping-indexeddb-data"}]}],"\n"]}]
53:["$","$L20","mdx-88",{"variant":"body1","component":"div","paragraph":true,"children":"My simple answer initially was this:"}]
7d:T12d0,<span class="token keyword">function</span> <span class="token keyword">export</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>tables<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
            db<span class="token punctuation">.</span>tables<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">table</span> <span class="token operator">=></span> table<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">rows</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">table</span><span class="token operator">:</span> table<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">rows</span><span class="token operator">:</span> rows<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token string">'rw'</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>tables<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=></span>
            db<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>table<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span>db<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>table<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bulkAdd</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
54:["$","$1","108",{"children":["$","$L1f","mdx-89",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"function export(db) {\n    return db.transaction('r', db.tables, ()=>{\n        return Promise.all(\n            db.tables.map(table => table.toArray()\n                .then(rows => ({table: table.name, rows: rows})));\n    });\n}\n\nfunction import(data, db) {\n    return db.transaction('rw', db.tables, () => {\n        return Promise.all(data.map (t =>\n            db.table(t.table).clear()\n              .then(()=>db.table(t.table).bulkAdd(t.rows)));\n    });\n}\n"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"$7d"}}]}]]}]}]}]
55:["$","$L20","mdx-90",{"variant":"body1","component":"div","paragraph":true,"children":"Looks simple!"}]
56:["$","$L20","mdx-91",{"variant":"body1","component":"div","paragraph":true,"children":"But:"}]
57:["$","$L74","mdx-95",{"component":"ol","sx":{"mb":3,"pl":4,"listStyleType":"decimal","& .MuiListItem-root":{"display":"list-item","pl":1}},"children":["\n",["$","$L75","mdx-92",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"The whole database has to fit in RAM. Can be issue on small devices."}],"\n",["$","$L75","mdx-93",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"If using JSON.stringify() / JSON.parse() on the data, we won't support exotic types (Dates, Blobs, ArrayBuffers, etc)"}],"\n",["$","$L75","mdx-94",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Not possible to show a progress while importing."}],"\n"]}]
58:["$","$L20","mdx-96",{"variant":"body1","component":"div","paragraph":true,"children":"This addon solves these issues, and some more, with the help of some libraries."}]
59:["$","$L20","mdx-97",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Libraries Used"}]
5a:["$","$L20","mdx-98",{"variant":"body1","component":"div","paragraph":true,"children":"To accomplish a streamable export/import, and allow exotic types, I use the libraries listed below. Note that these libraries are listed as devDependencies because they are bundles using rollupjs - so there's no real dependency from the library user perspective."}]
5b:["$","$L20","mdx-101",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":[["$","$L21","mdx-99",{"href":"https://www.npmjs.com/package/typeson","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"typeson"}]," and ",["$","$L21","mdx-100",{"href":"https://www.npmjs.com/package/typeson-registry","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"typeson-registry"}]]}]
5c:["$","$L20","mdx-102",{"variant":"body1","component":"div","paragraph":true,"children":"These modules enables something similar as JSON.stringify() / JSON.parse() for exotic or custom types."}]
5d:["$","$L20","mdx-104",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":["$","$L21","mdx-103",{"href":"https://www.npmjs.com/package/clarinet","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"clarinet"}]}]
5e:["$","$L20","mdx-105",{"variant":"body1","component":"div","paragraph":true,"children":"This module allow to read JSON in a streaming fashion"}]
5f:["$","$L20","mdx-106",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Streaming JSON"}]
60:["$","$L20","mdx-107",{"variant":"body1","component":"div","paragraph":true,"children":"I must admit that I had to do some research before I understood how to accomplish streaming JSON from client-side Javascript (both reading / writing). It is really not obvious that this would even be possible. Looking at the Blob interface, it does not provide any way of either reading or writing in a streamable fashion."}]
61:["$","$L20","mdx-108",{"variant":"body1","component":"div","paragraph":true,"children":"What I found though (after some googling) was that it is indeed possible to do that based on the current DOM platform (including IE11 !)."}]
62:["$","$L20","mdx-109",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Reading JSON in Chunks"}]
63:["$","$L20","mdx-110",{"variant":"body1","component":"div","paragraph":true,"children":"A File or Blob represents something that can lie on a disk file and not yet be in RAM. So how do we read the first 100 bytes from a Blob without reading it all?"}]
64:["$","$1","140",{"children":["$","$L1f","mdx-111",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"const firstPart = blob.slice(0,100);\n"}],["$","pre",null,{"className":"prism-js","children":["$","code",null,{"className":"prism-js code-highlight","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> firstPart <span class=\"token operator\">=</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]}]}]
65:["$","$L20","mdx-112",{"variant":"body1","component":"div","paragraph":true,"children":"Ok, and in the next step we use a FileReader to really read this sliced Blob into memory."}]
7e:Te3e,
<span class="token keyword">const</span> first100Chars <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readBlob</span><span class="token punctuation">(</span>firstPart<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">readBlob</span><span class="token punctuation">(</span>blob<span class="token operator">:</span> Blob<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> ev <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"file read aborted"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> ev <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> ev <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsText</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
66:["$","$1","144",{"children":["$","$L1f","mdx-113",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L22",null,{"code":"\nconst first100Chars = await readBlob(firstPart);\n\nfunction readBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onabort = ev => reject(new Error(\"file read aborted\"));\n    reader.onerror = ev => reject((ev.target as any).error);\n    reader.onload = ev => resolve((ev.target as any).result);\n    reader.readAsText(blob);\n  });\n}\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$7e"}}]}]]}]}]}]
67:["$","$L20","mdx-114",{"variant":"body1","component":"div","paragraph":true,"children":"Voila!"}]
68:["$","$L20","mdx-115",{"variant":"body1","component":"div","paragraph":true,"children":"But! How can we keep transactions alive when calling this non-indexedDB async call?"}]
69:["$","$L20","mdx-116",{"variant":"body1","component":"div","paragraph":true,"children":"I use two different solutions for this:"}]
6a:["$","$L74","mdx-122",{"component":"ol","sx":{"mb":3,"pl":4,"listStyleType":"decimal","& .MuiListItem-root":{"display":"list-item","pl":1}},"children":["\n",["$","$L75","mdx-119",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["If we are in a Worker, I use ",["$","$L1f","mdx-117",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"new FileReaderSync()"}]," instead of ",["$","$L1f","mdx-118",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"new FileReader()"}],"."]}],"\n",["$","$L75","mdx-121",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["If in the main thread, I use ",["$","$L1f","mdx-120",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"Dexie.waitFor()"}]," to while reading this short elapsed chunk, keeping the transaction alive still."]}],"\n"]}]
6b:["$","$L20","mdx-123",{"variant":"body1","component":"div","paragraph":true,"children":"Ok, fine, but how do we parse the chunk then? Cannot use JSON.parse(firstPart) because it will most definitely be incomplete."}]
6c:["$","$L20","mdx-125",{"variant":"body1","component":"div","paragraph":true,"children":[["$","$L21","mdx-124",{"href":"https://www.npmjs.com/package/clarinet","color":"primary","sx":{"fontWeight":600},"underline":"hover","target":"_blank","rel":"noopener noreferrer","children":"Clarinet"}]," to the rescue. This library can read JSON and callback whenever JSON tokens come in."]}]
6d:["$","$L20","mdx-126",{"variant":"h3","component":"h3","gutterBottom":true,"sx":{"mt":3},"children":"Writing JSON in Chunks"}]
6e:["$","$L20","mdx-127",{"variant":"body1","component":"div","paragraph":true,"children":"Writing JSON is solved more easily. As the BlobBuilder interface was deprecated from the DOM, I firstly found this task impossible. But after digging around, I found that this SHOULD be possible if browsers implement the Blob interface correctly."}]
6f:["$","$L20","mdx-128",{"variant":"body1","component":"div","paragraph":true,"children":"Blobs can be constructed from an array of other Blobs. This is the key."}]
70:["$","$L74","mdx-131",{"component":"ol","sx":{"mb":3,"pl":4,"listStyleType":"decimal","& .MuiListItem-root":{"display":"list-item","pl":1}},"children":["\n",["$","$L75","mdx-129",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"Let's say we generate 1000 Blobs of 1MB each on a device with 512 MB RAM. If the browser does its job well, it will allow the first 200 blobs or so to reside in RAM. But then, it should start putting the remanding blobs onto temporary files."}],"\n",["$","$L75","mdx-130",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"We put all these 1000 blobs into an array and generate a final Blob from that array."}],"\n"]}]
71:["$","$L20","mdx-132",{"variant":"body1","component":"div","paragraph":true,"children":"And that's pretty much it."}]
72:["$","$L1f",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L20",null,{"variant":"caption","color":"text.secondary","children":"ExportImport/dexie-export-import"}],["$","$L20",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/15/2025"]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:null
7f:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
17:{"metadata":[["$","title","0",{"children":"Export and Import Database | Dexie.js Documentation - Offline-First Database | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"Export and Import Database documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie.js,indexeddb,offline first,javascript database,browser database"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie.js, indexeddb, offline first, javascript database, browser database"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/docs/ExportImport/dexie-export-import"}],["$","meta","13",{"property":"og:title","content":"Export and Import Database - Dexie.js Documentation"}],["$","meta","14",{"property":"og:description","content":"Export and Import Database documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/docs/ExportImport/dexie-export-import"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"Export and Import Database - Dexie.js Documentation"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"Export and Import Database - Dexie.js Docs"}],["$","meta","23",{"name":"twitter:description","content":"Export and Import Database documentation for Dexie.js. Learn offline-first development with IndexedDB wrapper for JavaScript applications."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/dexie-docs-og.jpg"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$L7f","26",{}]],"error":null,"digest":"$undefined"}
1c:"$17:metadata"
