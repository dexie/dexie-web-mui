1:"$Sreact.fragment"
3:I[52669,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
4:I[17350,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
5:I[11054,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
6:I[53675,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
7:I[45678,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
8:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
9:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
11:I[68027,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
:HL["/_next/static/chunks/181ad6fb1547b71a.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ce62453a442c7f35-s.p.a9507876.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:T60b,{"@context":"https://schema.org","@type":"SoftwareApplication","name":"Dexie.js","description":"IndexedDB wrapper library for offline-first web applications with real-time sync capabilities","url":"https://dexie.org","applicationCategory":"DeveloperApplication","operatingSystem":"Web Browser","programmingLanguage":"JavaScript","author":{"@type":"Person","name":"David Fahlander","url":"https://github.com/dfahlander"},"publisher":{"@type":"Organization","name":"Awarica AB","address":{"@type":"PostalAddress","addressCountry":"SE","addressLocality":"Stockholm"}},"softwareVersion":"4.0","downloadUrl":"https://www.npmjs.com/package/dexie","license":"https://github.com/dexie/Dexie.js/blob/master/LICENSE","codeRepository":"https://github.com/dexie/Dexie.js","installUrl":"https://www.npmjs.com/package/dexie","screenshot":"https://dexie.org/assets/images/dexie-hero-og.jpg","offers":[{"@type":"Offer","name":"Dexie.js Open Source","price":"0","priceCurrency":"USD","description":"Free IndexedDB wrapper library"},{"@type":"Offer","name":"Dexie Cloud Free","price":"0","priceCurrency":"USD","description":"Free tier with 3 production users and 100MB storage"},{"@type":"Offer","name":"Dexie Cloud Production","price":"0.12","priceCurrency":"USD","description":"Production tier starting at $0.12 per user per month"}],"featureList":["Offline-first database","IndexedDB wrapper","Real-time synchronization","Authentication system","Collaborative features","React integration","Vue.js support","Angular compatibility","Progressive Web App support"]}0:{"P":null,"b":"moMR2laHVcjb42Uw9OO2_","p":"","c":["","cloud","docs","db.cloud.userInteraction"],"i":false,"f":[[["",{"children":["cloud",{"children":["docs",{"children":[["slug","db.cloud.userInteraction","c"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/2791dffcc8939031.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/979a509c88d32a4e.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/1ee5528f2863dd7c.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/cd47604cae0ad19f.js","async":true,"nonce":"$undefined"}],["$","script","script-4",{"src":"/_next/static/chunks/a8730058447906a4.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"roboto_d24be3b7-module__pZO6tq__variable","children":[["$","head",null,{"children":["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$2"}}]}],["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":["$","$L3",null,{"children":["$","$L4",null,{"theme":"$5","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],"$La"]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],"$Lb"]}]}]}]]}]]}],{"children":["cloud","$Lc",{"children":["docs","$Ld",{"children":[["slug","db.cloud.userInteraction","c"],"$Le",{"children":["__PAGE__","$Lf",{},null,false]},null,false]},null,false]},null,false]},null,false],"$L10",false]],"m":"$undefined","G":["$11",["$L12"]],"s":false,"S":true}
13:I[13642,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js"],"default"]
15:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
17:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
19:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
1b:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
1c:"$Sreact.suspense"
a:["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]
b:["$","$L13",null,{}]
c:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
d:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":[null,["$","$L8",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
f:["$","$1","c",{"children":["$L14",[["$","script","script-0",{"src":"/_next/static/chunks/34915b21f9ad1fc4.js","async":true,"nonce":"$undefined"}]],["$","$L15",null,{"children":["$L16",["$","$L17",null,{"promise":"$@18"}]]}]]}]
10:["$","$1","h",{"children":[null,[["$","$L19",null,{"children":"$L1a"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1b",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1c",null,{"fallback":null,"children":"$L1d"}]}]}]]}]
12:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/181ad6fb1547b71a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1e:I[95122,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
14:["$","$L1e",null,{"navigation":{"DBPermissionSet":{"title":"DBPermissionSet","slug":"DBPermissionSet","layout":"docs-dexie-cloud"},"DexieCloudOptions":{"title":"DexieCloudOptions","slug":"DexieCloudOptions","layout":"docs-dexie-cloud"},"Invite":{"title":"Invite","slug":"Invite","layout":"docs-dexie-cloud"},"Member":{"title":"Member","slug":"Member","layout":"docs-dexie-cloud"},"PersistedSyncState":{"title":"PersistedSyncState","slug":"PersistedSyncState","layout":"docs-dexie-cloud"},"Realm":{"title":"Realm","slug":"Realm","layout":"docs-dexie-cloud"},"Role":{"title":"Role","slug":"Role","layout":"docs-dexie-cloud"},"SyncState":{"title":"SyncState","slug":"SyncState","layout":"docs-dexie-cloud"},"UserLogin":{"title":"UserLogin","slug":"UserLogin","layout":"docs-dexie-cloud"},"access-control":{"title":"Access Control in Dexie Cloud","slug":"access-control","layout":"docs-dexie-cloud"},"add-demo-users":{"title":"Add demo users","slug":"add-demo-users","layout":"docs-dexie-cloud"},"add-public-data":{"title":"Add public data","slug":"add-public-data","layout":"docs-dexie-cloud"},"authentication":{"title":"Authentication in Dexie Cloud","slug":"authentication","layout":"docs-dexie-cloud"},"best-practices":{"title":"Dexie Cloud Best Practices","slug":"best-practices","layout":"docs-dexie-cloud"},"cli":{"title":"Dexie Cloud CLI","slug":"cli","layout":"docs-dexie-cloud"},"consistency":{"title":"Consistency in Dexie Cloud","slug":"consistency","layout":"docs-dexie-cloud"},"custom-emails":{"title":"Custom Emails in Dexie Cloud","slug":"custom-emails","layout":"docs-dexie-cloud"},"db.cloud.configure()":{"title":"db.cloud.configure()","slug":"db.cloud.configure()","layout":"docs-dexie-cloud"},"db.cloud.currentUser":{"title":"db.cloud.currentUser","slug":"db.cloud.currentUser","layout":"docs-dexie-cloud"},"db.cloud.currentUserId":{"title":"db.cloud.currentUserId","slug":"db.cloud.currentUserId","layout":"docs-dexie-cloud"},"db.cloud.events.syncComplete":{"title":"db.cloud.events.syncComplete","slug":"db.cloud.events.syncComplete","layout":"docs-dexie-cloud"},"db.cloud.invites":{"title":"db.cloud.invites","slug":"db.cloud.invites","layout":"docs-dexie-cloud"},"db.cloud.login()":{"title":"db.cloud.login()","slug":"db.cloud.login()","layout":"docs-dexie-cloud"},"db.cloud.logout()":{"title":"db.cloud.logout()","slug":"db.cloud.logout()","layout":"docs-dexie-cloud"},"db.cloud.options":{"title":"db.cloud.options","slug":"db.cloud.options","layout":"docs-dexie-cloud"},"db.cloud.permissions()":{"title":"db.cloud.permissions()","slug":"db.cloud.permissions()","layout":"docs-dexie-cloud"},"db.cloud.persistedSyncState":{"title":"db.cloud.persistedSyncState","slug":"db.cloud.persistedSyncState","layout":"docs-dexie-cloud"},"db.cloud.roles":{"title":"db.cloud.roles","slug":"db.cloud.roles","layout":"docs-dexie-cloud"},"db.cloud.schema":{"title":"db.cloud.schema","slug":"db.cloud.schema","layout":"docs-dexie-cloud"},"db.cloud.sync()":{"title":"db.cloud.sync()","slug":"db.cloud.sync()","layout":"docs-dexie-cloud"},"db.cloud.syncState":{"title":"db.cloud.syncState","slug":"db.cloud.syncState","layout":"docs-dexie-cloud"},"db.cloud.userInteraction":{"title":"db.cloud.userInteraction","slug":"db.cloud.userInteraction","layout":"docs-dexie-cloud"},"db.cloud.usingServiceWorker":{"title":"db.cloud.usingServiceWorker","slug":"db.cloud.usingServiceWorker","layout":"docs-dexie-cloud"},"db.cloud.version":{"title":"db.cloud.version","slug":"db.cloud.version","layout":"docs-dexie-cloud"},"db.cloud.webSocketStatus":{"title":"db.cloud.webSocketStatus","slug":"db.cloud.webSocketStatus","layout":"docs-dexie-cloud"},"db.members":{"title":"db.members","slug":"db.members","layout":"docs-dexie-cloud"},"db.realms":{"title":"db.realms","slug":"db.realms","layout":"docs-dexie-cloud"},"db.roles":{"title":"db.roles","slug":"db.roles","layout":"docs-dexie-cloud"},"dexie-cloud-addon":{"title":"dexie-cloud-addon","slug":"dexie-cloud-addon","layout":"docs-dexie-cloud"},"dexie-cloud-api":{"title":"Dexie Cloud API","slug":"dexie-cloud-api","layout":"docs-dexie-cloud"},"index":{"title":"Dexie Cloud Docs","slug":"index","layout":"docs-dexie-cloud"},"limits":{"title":"Dexie Cloud API Limits","slug":"limits","layout":"docs-dexie-cloud"},"premium-software":{"title":"Run Dexie Cloud on Own Servers","slug":"premium-software","layout":"docs-dexie-cloud"},"rest-api":{"title":"Dexie Cloud REST API","slug":"rest-api","layout":"docs-dexie-cloud"},"scaling":{"title":"Sharding and Scalability","slug":"scaling","layout":"docs-dexie-cloud"},"web-hooks":{"title":"Dexie Cloud Web Hooks","slug":"web-hooks","layout":"docs-dexie-cloud"}},"currentSlug":"docs/db.cloud.userInteraction","pageTitle":"db.cloud.userInteraction","children":"$L1f"}]
20:I[19646,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
21:I[26863,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
22:I[72729,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
23:I[63876,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
24:Tb95,export type DXCUserInteraction =
  | DXCGenericUserInteraction
  | DXCEmailPrompt
  | DXCOTPPrompt
  | DXCMessageAlert
  | DXCLogoutConfirmation;

export interface DXCGenericUserInteraction<Type extends string="generic", TFields extends {[name: string]: DXCInputField} = any> {
  type: Type;
  title: string;
  alerts: DXCAlert[];
  fields: TFields;
  submitLabel: string;
  cancelLabel: string | null;
  onSubmit: (params: { [P in keyof TFields]: string} ) => void;
  onCancel: () => void;
}

/** When the system needs to prompt for an email address for login.
 * 
*/
export interface DXCEmailPrompt {
  type: 'email';
  title: string;
  alerts: DXCAlert[];
  fields: {
    email: {
      type: 'text';
      placeholder: string;
    };
  };
  submitLabel: string;
  cancelLabel: string;
  onSubmit: (params: { email: string } | { [paramName: string]: string }) => void;
  onCancel: () => void;
}

/** When the system needs to prompt for an OTP code.
 * 
*/
export interface DXCOTPPrompt {
  type: 'otp';
  title: string;
  alerts: DXCAlert[];
  fields: {
    otp: {
      type: 'text';
      label: string;
    }
  };
  submitLabel: string;
  cancelLabel: string;
  onSubmit: (params: { otp: string } | { [paramName: string]: string }) => void;
  onCancel: () => void;
}

/** When the system must inform about errors, warnings or information */
export interface DXCMessageAlert {
  type: 'message-alert';
  title: string;
  alerts: DXCAlert[];
  fields: {
    [name: string]: DXCInputField;
  };
  submitLabel: string;
  cancelLabel?: null;
  onSubmit: (params: { [paramName: string]: string }) => void;
  onCancel: () => void;
}

/** When the system needs confirmation to logout current user when
 * there are unsynced changes that would be lost.
 */
export interface DXCLogoutConfirmation {
  type: 'logout-confirmation';
  title: string;
  alerts: DXCAlert[];
  fields: {
    [name: string]: DXCInputField;
  };
  submitLabel: string;
  cancelLabel: string;
  onSubmit: (params: { [paramName: string]: string }) => void;
  onCancel: () => void;
}

export type DXCAlert = DXCErrorAlert | DXCWarningAlert | DXCInfoAlert;

export interface DXCErrorAlert {
  type: 'error';
  messageCode: 'INVALID_OTP' | 'INVALID_EMAIL' | 'LICENSE_LIMIT_REACHED' | 'GENERIC_ERROR';
  message: string;
  messageParams: { [paramName: string]: string; };
}

export interface DXCWarningAlert {
  type: 'warning';
  messageCode: 'GENERIC_WARNING' | 'LOGOUT_CONFIRMATION';
  message: string;
  messageParams: { [paramName: string]: string; };
}

export interface DXCInfoAlert {
  type: 'info';
  messageCode: 'GENERIC_INFO' | 'OTP_SENT';
  message: string;
  messageParams: { [paramName: string]: string; };
}

export type DXCInputField = DXCTextField | DXCPasswordField;

export interface DXCTextField {
  type: 'text' | 'email' | 'otp';
  label?: string;
  placeholder?: string;
}

export interface DXCPasswordField {
  type: 'password';
  label?: string;
  placeholder?: string;
}

1f:["$","$L20",null,{"component":"article","children":[["$","$L20",null,{"component":"header","sx":{"mb":5},"children":["$","$L21",null,{"variant":"h1","component":"h1","sx":{"mb":3},"children":"db.cloud.userInteraction"}]}],["$","$L20",null,{"className":"docs-content","children":["$","$L20",null,{"className":"mdx-content","sx":{"maxWidth":"none"},"children":[["$","$L21","mdx-2",{"variant":"body1","component":"div","paragraph":true,"children":["An observable that emits data for login dialogs. This observable shall be used in combination with setting ",["$","$L22","mdx-1",{"href":"/cloud/docs/db.cloud.configure()#customlogingui","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"db.cloud.configure()#customlogingui"}]," to true."]}],"\n",["$","$L21","mdx-4",{"variant":"body1","component":"div","paragraph":true,"children":["For an example on how to consume this observable and provide a custom GUI, see ",["$","$L22","mdx-3",{"href":"/cloud/docs/authentication#customizing-login-gui","color":"primary","sx":{"fontWeight":600},"underline":"hover","children":"authentication#customizing-login-gui"}]]}],"\n",["$","$L21","mdx-5",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Type"}],"\n",["$","$1","6",{"children":["$","$L20","mdx-6",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L23",null,{"code":"Observable<DXCUserInteraction>\n"}],["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"Observable<span class=\"token operator\">&lt;</span>DXCUserInteraction<span class=\"token operator\">></span>\n"}}]}]]}]}]}],"\n",["$","$1","8",{"children":["$","$L20","mdx-7",{"sx":{"mb":3,"background":"rgba(255, 255, 255, 0.05)","borderRadius":2,"border":"1px solid rgba(255, 255, 255, 0.1)","p":3,"mt":2,"overflow":"auto"},"children":["$","div",null,{"className":"codeblock-container","style":{"position":"relative"},"children":[["$","$L23",null,{"code":"$24"}],"$L25"]}]}]}],"\n","$L26","\n","$L27","\n","$L28","\n"]}]}],"$L29"]}]
2b:I[32412,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
2c:I[65801,["/_next/static/chunks/2791dffcc8939031.js","/_next/static/chunks/979a509c88d32a4e.js","/_next/static/chunks/1ee5528f2863dd7c.js","/_next/static/chunks/cd47604cae0ad19f.js","/_next/static/chunks/a8730058447906a4.js","/_next/static/chunks/34915b21f9ad1fc4.js"],"default"]
2a:T4cd0,<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">DXCUserInteraction</span> <span class="token operator">=</span>
  <span class="token operator">|</span> DXCGenericUserInteraction
  <span class="token operator">|</span> DXCEmailPrompt
  <span class="token operator">|</span> DXCOTPPrompt
  <span class="token operator">|</span> DXCMessageAlert
  <span class="token operator">|</span> DXCLogoutConfirmation<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCGenericUserInteraction<span class="token operator">&lt;</span>Type <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">=</span><span class="token string">"generic"</span><span class="token punctuation">,</span> TFields <span class="token keyword">extends</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> DXCInputField<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">></span></span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> Type<span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  alerts<span class="token operator">:</span> DXCAlert<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  fields<span class="token operator">:</span> TFields<span class="token punctuation">;</span>
  submitLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelLabel<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> TFields<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/** When the system needs to prompt for an email address for login.
 * 
*/</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCEmailPrompt</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'email'</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  alerts<span class="token operator">:</span> DXCAlert<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  fields<span class="token operator">:</span> <span class="token punctuation">{</span>
    email<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">'text'</span><span class="token punctuation">;</span>
      placeholder<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  submitLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> email<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/** When the system needs to prompt for an OTP code.
 * 
*/</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCOTPPrompt</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'otp'</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  alerts<span class="token operator">:</span> DXCAlert<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  fields<span class="token operator">:</span> <span class="token punctuation">{</span>
    otp<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">'text'</span><span class="token punctuation">;</span>
      label<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  submitLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> otp<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/** When the system must inform about errors, warnings or information */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCMessageAlert</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'message-alert'</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  alerts<span class="token operator">:</span> DXCAlert<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  fields<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> DXCInputField<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  submitLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelLabel<span class="token operator">?</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/** When the system needs confirmation to logout current user when
 * there are unsynced changes that would be lost.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCLogoutConfirmation</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'logout-confirmation'</span><span class="token punctuation">;</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  alerts<span class="token operator">:</span> DXCAlert<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  fields<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> DXCInputField<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  submitLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelLabel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">DXCAlert</span> <span class="token operator">=</span> DXCErrorAlert <span class="token operator">|</span> DXCWarningAlert <span class="token operator">|</span> DXCInfoAlert<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCErrorAlert</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">;</span>
  messageCode<span class="token operator">:</span> <span class="token string">'INVALID_OTP'</span> <span class="token operator">|</span> <span class="token string">'INVALID_EMAIL'</span> <span class="token operator">|</span> <span class="token string">'LICENSE_LIMIT_REACHED'</span> <span class="token operator">|</span> <span class="token string">'GENERIC_ERROR'</span><span class="token punctuation">;</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  messageParams<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCWarningAlert</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'warning'</span><span class="token punctuation">;</span>
  messageCode<span class="token operator">:</span> <span class="token string">'GENERIC_WARNING'</span> <span class="token operator">|</span> <span class="token string">'LOGOUT_CONFIRMATION'</span><span class="token punctuation">;</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  messageParams<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCInfoAlert</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'info'</span><span class="token punctuation">;</span>
  messageCode<span class="token operator">:</span> <span class="token string">'GENERIC_INFO'</span> <span class="token operator">|</span> <span class="token string">'OTP_SENT'</span><span class="token punctuation">;</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  messageParams<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>paramName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">DXCInputField</span> <span class="token operator">=</span> DXCTextField <span class="token operator">|</span> DXCPasswordField<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCTextField</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'text'</span> <span class="token operator">|</span> <span class="token string">'email'</span> <span class="token operator">|</span> <span class="token string">'otp'</span><span class="token punctuation">;</span>
  label<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  placeholder<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DXCPasswordField</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">'password'</span><span class="token punctuation">;</span>
  label<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  placeholder<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

25:["$","pre",null,{"className":"prism-ts","children":["$","code",null,{"className":"prism-ts code-highlight","dangerouslySetInnerHTML":{"__html":"$2a"}}]}]
26:["$","$L21","mdx-8",{"variant":"h2","component":"h2","gutterBottom":true,"sx":{"mt":4},"children":"Localization"}]
27:["$","$L21","mdx-9",{"variant":"body1","component":"div","paragraph":true,"children":"If you need to localize the login dialog, you can ignore the given texts and use custom texts based on:"}]
28:["$","$L2b","mdx-25",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L2c","mdx-10",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"type:  ('otp', 'email', 'message-alert' or 'logout-confirmation')"}],"\n",["$","$L2c","mdx-11",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"alerts[n].type: ('error', 'warning' or 'info')"}],"\n",["$","$L2c","mdx-23",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["alerts[n].messageCode, which can be any of the following values:\n",["$","$L2b","mdx-22",{"sx":{"mb":3,"listStyleType":"disc","pl":3,"& .MuiListItem-root":{"display":"list-item","pl":0}},"children":["\n",["$","$L2c","mdx-12",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'INVALID_OTP'"}],"\n",["$","$L2c","mdx-13",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'INVALID_EMAIL'"}],"\n",["$","$L2c","mdx-14",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'LICENSE_LIMIT_REACHED'"}],"\n",["$","$L2c","mdx-15",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'GENERIC_ERROR'"}],"\n",["$","$L2c","mdx-16",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'GENERIC_WARNING'"}],"\n",["$","$L2c","mdx-18",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["'LOGOUT_CONFIRMATION' - messageParams will contain ",["$","$L20","mdx-17",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"{currentUserId, numUnsyncedChanges}"}]]}],"\n",["$","$L2c","mdx-19",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"'GENERIC_INFO'"}],"\n",["$","$L2c","mdx-21",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":["'OTP_SENT' - messageParams will contain ",["$","$L20","mdx-20",{"component":"code","sx":{"fontFamily":"monospace","fontSize":"0.875rem","backgroundColor":"rgba(255, 255, 255, 0.1)","px":1,"py":0.5,"borderRadius":1},"children":"{ email }"}]]}],"\n"]}],"\n"]}],"\n",["$","$L2c","mdx-24",{"sx":{"py":0.25,"display":"list-item","pl":2},"children":"fields[name].type ('text', 'email', 'otp' or 'password')"}],"\n"]}]
29:["$","$L20",null,{"component":"footer","sx":{"mt":5,"pt":4,"borderTop":1,"borderColor":"divider","display":"flex","justifyContent":"space-between","flexWrap":"wrap","gap":2},"children":[["$","$L21",null,{"variant":"caption","color":"text.secondary","children":"docs/db.cloud.userInteraction"}],["$","$L21",null,{"variant":"caption","color":"text.secondary","children":["Last updated: ","10/15/2025"]}]]}]
1a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
16:null
2d:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"IconMark"]
18:{"metadata":[["$","title","0",{"children":"db.cloud.userInteraction | Dexie Cloud Documentation - Offline-First Sync & Auth | Dexie.js - Offline-First Database for JavaScript"}],["$","meta","1",{"name":"description","content":"Dexie Cloud API reference. Complete documentation for cloud configuration, sync methods, and real-time collaboration features."}],["$","meta","2",{"name":"author","content":"David Fahlander"}],["$","meta","3",{"name":"author","content":"Dexie.js Team"}],["$","meta","4",{"name":"keywords","content":"dexie cloud,offline first sync,real time sync,database synchronization,offline authentication,collaborative apps"}],["$","meta","5",{"name":"creator","content":"David Fahlander"}],["$","meta","6",{"name":"publisher","content":"Dexie.js"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"technology"}],["$","meta","10",{"name":"article:section","content":"Dexie Cloud Documentation"}],["$","meta","11",{"name":"article:tag","content":"dexie cloud, offline first sync, real time sync, database synchronization, offline authentication, collaborative apps"}],["$","link","12",{"rel":"canonical","href":"https://dexie.org/cloud/docs/db.cloud.userInteraction"}],["$","meta","13",{"property":"og:title","content":"db.cloud.userInteraction - Dexie Cloud Documentation"}],["$","meta","14",{"property":"og:description","content":"Dexie Cloud API reference. Complete documentation for cloud configuration, sync methods, and real-time collaboration features."}],["$","meta","15",{"property":"og:url","content":"https://dexie.org/cloud/docs/db.cloud.userInteraction"}],["$","meta","16",{"property":"og:image","content":"https://dexie.org/assets/images/dexie-cloud-docs-og.jpg"}],["$","meta","17",{"property":"og:image:width","content":"1200"}],["$","meta","18",{"property":"og:image:height","content":"630"}],["$","meta","19",{"property":"og:image:alt","content":"db.cloud.userInteraction - Dexie Cloud Documentation"}],["$","meta","20",{"property":"og:type","content":"article"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"db.cloud.userInteraction - Dexie Cloud"}],["$","meta","23",{"name":"twitter:description","content":"Dexie Cloud API reference. Complete documentation for cloud configuration, sync methods, and real-time collaboration features."}],["$","meta","24",{"name":"twitter:image","content":"https://dexie.org/assets/images/dexie-cloud-docs-og.jpg"}],["$","link","25",{"rel":"icon","href":"/favicon.ico?favicon.c269e170.ico","sizes":"48x48","type":"image/x-icon"}],["$","$L2d","26",{}]],"error":null,"digest":"$undefined"}
1d:"$18:metadata"
